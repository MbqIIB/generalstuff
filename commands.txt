

##User Trace
mqsichangetrace -u S1EMBK02 -e MCFP02 -l debug -c 2000000 -r
mqsireadlog -u S1EMBK02 -e MCFP02 -o ~/abc.xml
mqsiformatlog -i ~/abc.xml -o ~/abc.txt
mqsichangetrace S1EMBK01 -u -e MCFP02 -l none

## Service Trace
mqsichangetrace -t S1EMBK02 -e MCFP02 -l debug -c 2000000 -r
mqsireadlog -t S1EMBK02 -e MCFP02 -o ~/abc.xml
mqsiformatlog -i ~/abc.xml -o ~/abc.txt
mqsichangetrace S1EMBK01 -t -e MCFP02 -l none

Ramya -p1225619
rajeev -p1176684/

##DB
mqsisetdbparms T1EMBK01 -n EMAPP -u teminst1 -p temadmin 
mqsicvp T1EMBK01 -n EMAPP
##
tnsping EMAPP
lsnrctl status
lsnrctl start listener

##Unlock Oracle user
sqlplus conn as sysdba/sysdba
ALTER USER TEMINST1 ACCOUNT UNLOCK;
ALTER USER TEMINST1 IDENTIFIED BY temadmin;
select username,account_status,CREATED,LOCK_DATE,EXPIRY_DATE,PROFILE from dba_users where username='TEMINST1';

#DB2
list applications for database s2msdb01
force application (PID, PID)

RESET CLUSTER(S01STC01.CLST) QMID('S1EMRP01_2012-11-05_21.10.30') ACTION(FORCEREMOVE) 

SUSPEND QMGR cluster C01STC01.CLST
DIS CLUSQMGR(<QMgrName>) SUSPEND
RESUME QMGR cluster C01STC01.CLST

#wget --post-data="test.xml" http://10.104.25.45:7800/AvailableToPromiseRequest

##
Jump - 10.130.148.20
Broker
ssh P1201362@10.104.25.45
ssh P1201362@10.104.25.46

Sterling
ssh P1201362@10.104.24.61
ssh P1201362@10.104.24.62

wcs
ssh P1201362@10.104.24.63
ssh P1201362@10.104.24.64

step
ssh P1201362@10.104.35.121
ssh P1201362@10.104.35.122

mqfte
ssh P1201362@10.104.24.51
ssh P1201362@10.104.24.52


ssh P1201362@logserver


#mqfte
./fteCreateMonitor -ma S01_UKD0054_S1EMMFT02 -mn STEP_MONITOR -mm S1EMMFT02 -mq MFT_MQFTE_STEP_XB60  -mt /home/fteuser/step_mft_monitor.xml -tr completeGroups -pi 2 -pu minutes

<?xml version="1.0" encoding="UTF-8"?>
<request xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.00" xsi:noNamespaceSchemaLocation="FileTransfer.xsd">
  <managedTransfer>
    <originator>
      <hostName>FSHR</hostName>
      <userID>y0134079</userID>
    </originator>
    <sourceAgent QMgr="S1EMMFT02" agent="${DPMQFTEDestinationAgent}"/>
    <destinationAgent QMgr="S1EMMFT02" agent="${DPMQFTEDestinationAgent}"/>
    <transferSet priority="0">
      <metaDataSet>
        <metaData key="source_support_group">${DPMQFTESenderId}</metaData>
        <metaData key="destination_support_group">${DPMQFTEReceiverId}</metaData>
        <metaData key="job_name">${DPMQFTEContentType}</metaData>
        <metaData key="Severity">2</metaData>
      </metaDataSet>
      <item checksumMethod="MD5" mode="text">
        <source disposition="delete" recursive="false" type="queue">
          <queue groupId="${groupId}" useGroups="true">MFT_MQFTE_STEP_XB60</queue>
        </source>
        <destination exist="overwrite" type="file">
          <file>${DPMQFTEDestinationFile}</file>
        </destination>
      </item>
    </transferSet>
    <job>
      <name>${DPMQFTEContentType}</name>
    </job>
  </managedTransfer>
</request>

#ORACLE
whenever sqlerror exit sql.sqlcode;
whenever oserror exit FAILURE

set define off
set head off
set feedback off
set echo off
set pagesize 0
set pages 0
set linesize 200000
set timing off

spool appropriate ~/dummy.txt
UR QUERY GOES HERE
spool off

##DB queries
select intrfc_prtnr_sys_id,msg_direction,sys_insert_tstmp from txn_cme_audit where intrfc_prtnr_sys_id = 'DN'order by sys_insert_tstmp desc;
select EXCEPTION, QUEUE_NAME,sys_insert_tstmp from exc_msg_exception where queue_name= 'AMAZON_MS.ORD001_DN_V001.00.00.PPQ' order by sys_insert_tstmp desc;

Clear Semaphore Loc
for test in `ipcs -s | grep mqm|awk '{print $2}'`;do ipcrm -s $test; done
for test in `ipcs -s | grep mqadmin|awk '{print $2}'`;do ipcrm -s $test; done

SIT DB
smsinst1
fkN2Ik1b


mqm
for test in `ipcs -s | grep mqm|awk '{print $2}'`;do ipcrm -s $test; done;for test in `ipcs -m | grep mqm|awk '{print $2}'`;do ipcrm -m $test; done
mqadmin
for test in `ipcs -s | grep mqadmin|awk '{print $2}'`;do ipcrm -s $test; done;for test in `ipcs -m | grep mqadmin|awk '{print $2}'`;do ipcrm -m $test; done


Grant Connect to MS;
Grant Resource to MS;

mqsisetdbparms  Soap  -n MSAPP -u MS -p password

gsk7cmd -cert -list -expiry -db /var/mqsi/Broker_keystore.jks -pw password -type jks
gsk7cmd -cert -extract -db order_crypto_ms.jks -pw Passw0rd@123 -label "webssl_with privatekey" -target filename -format ascii


set linesize 5000;
set long 100000;
set longchunksize 10000;

select message,exception from exc_msg_exception where sys_insert_tstmp > '26-NOV-13 04.00.19.878253 PM' and queue_name like '%ORD004%';


select message,exception from exc_msg_exception where sys_insert_tstmp > '23-OCT-12 03.00.19.878253 AM';
select * from txn_cme_audit where msg_processed_ts>'';
select cme_intrfc_id,msg_direction,msg_processed_ts from txn_cme_audit where intrfc_prtnr_sys_id='ASN' and cme_intrfc_id='DEL004' and msg_processed_ts>'24-OCT-12 03.00.19.878253 AM';

select cme_intrfc_id,msg_direction,msg_processed_ts from txn_cme_audit where msg_processed_ts>'25-NOV-12 08.00.19.878253 AM';

hlxd0mc002, hlxd0mc003, hlxd0mc004

./amqsbcg MS_STERLING.INV002_UPDT_FLWR_PLUS_V001.00.00.ERQ S2STC01

PSG - CATE B

Brokers 
10.149.24.41
10.149.24.42
 
DB
10.149.24.413


mqsichangeproperties C1PSG01 -e PSG01 -o HTTPConnector -n explicitlySetPortNumber -v 7800


#Set EG Heap
mqsichangeproperties <BrokerName> -e <EGName> -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
mqsichangeproperties <BrokerName> -e <EGName> -o ComIbmJVMManager -n jvmMaxHeapSize -v 1073741824
#Verification
mqsireportproperties <BrokerName>  -o ComIbmJVMManager -e <EGName> -r | grep jvmMinHeapSize
mqsireportproperties <BrokerName> -o ComIbmJVMManager -e <EGName> -r | grep jvmMaxHeapSize

#Set-up broker wide HTTP listener
mqsichangeproperties <BrokerName> -b httplistener -o HTTPListener -n startListener -v true
mqsichangeproperties <BrokerName> -e <EGName> -o ExecutionGroup -n httpNodesUseEmbeddedListener -v false
mqsichangeproperties <BrokerName> -e <EGName> -o ExecutionGroup -n soapNodesUseEmbeddedListener -v false
##We will not use the below, broker level command as it does not change the SOAP ports.
##mqsichangeproperties <BrokerName> -e <EGName> -n httpNodesUseEmbeddedListener -v false
mqsichangeproperties <BrokerName> -b httplistener -o HTTPConnector -n port -v <port> -w 300
mqsistop <BrokerName>
mqsistart <BrokerName>
#Verification
mqsireportproperties <BrokerName> -b httplistener -o HTTPConnector  -a

#Set-up Broker wide HTTPS listener
mqsichangeproperties <BrokerName> -b httplistener -o HTTPListener -n enableSSLConnector -v true
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n port -v 7650
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n clientAuth -v true
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n sslProtocol -v SSL
#Verification
mqsireportproperties <BrokerName> -b httplistener -o AllReportableEntityNames -a
mqsireportproperties <BrokerName> -b httplistener -o HTTPListener -a
mqsireportproperties <BrokerName> -b httplistener -o HTTPSConnector  -a

#PKI/Keystore Reference to Broker
#Verification
mqsireportproperties <BrokerName> -o BrokerRegistry r
#Keystore reference
mqsichangeproperties <BrokerName> -o BrokerRegistry -n brokerKeystoreFile -v /var/mqsi/Broker_keystore.jks
mqsistop <BrokerName>
mqsisetdbparms <BrokerName> -n brokerKeystore::password -u ignore -p password
mqsistart <BrokerName>
#Verification
mqsireportproperties <BrokerName> -o BrokerRegistry r


curl -v -k --data @/tmp/req.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do > /tmp/resp.xml
xmllint --format /tmp/resp.xml

openssl s_client -connect 10.250.5.16:443
openssl s_client -connect 10.250.5.16:443 -showcerts

keytool -list -v -keystore Broker_keystore.jks
keytool -exportcert -alias le-b299afaf-e8d5-4df6-818d-f6e2efe06893 -file Broker_keystore.crt -keystore  /var/mqsi/Broker_keystore.jks





select SYS_INSERT_TSTMP from exc_msg_exception where message like '%6261187&';


select cme_intrfc_id from txn_cme_audit where sys_insert_tstmp > '11-JAN-13 04.00.00.700240 PM'
select sys_insert_tstmp from txn_cme_audit where cme_intrfc_id = 'PRD002' and sys_insert_tstmp > '11-JAN-13 04.00.00.700240 PM' ;


select exception_id from exc_msg_exception where queue_name like 'STEP_MS%' and sys_insert_tstmp > '11-JAN-13 04.00.00.700240 PM'

mqsichangetrace -u S1EMBK01 -e MCFP02 -k I010 -l debug -c 2000000 -r
mqsireadlog -u S1EMBK02 -e MCFP02 -k I010 -o /home/mqm/i010.xml
mqsiformatlog -i /home/mqm/mqm.xml -o /home/mqadmin/stock123.txt


##############################################################################################
Refering the broker to the keystore


mqsistop <BrokerName>
mqsisetdbparms <BrokerName> -n brokerKeystore::password -u ignore -p password
mqsistart <BrokerName>


# SSL Web setup
##############################################################################################
#Set-up Execution group level listener



Creation of listener
mqsicreateexecutiongroup  <BrokerName>  -e MCFP06
mqsichangeproperties <BrokerName>  -e MCFP06 -o ExecutionGroup -n soapNodesUseEmbeddedListener -v true
mqsichangeproperties <BrokerName>  -e MCFP06 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
mqsichangeproperties <BrokerName>  -e MCFP06 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1073741824





mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n sslProtocol -v SSLv3    (set the version of SSL to use  the default is SSLv3)
mqsichangeproperties <BrokerName> -e MCFP06 -o HTTPSConnector -n explicitlySetPortNumber -v <port>    (explicitly setting HTTPS connector at execution group level)
mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n keystoreFile v <Path of keystore file>   (referring the HTTPS connector to the keystore path)
mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n keystoreType -v JKS (assigning the type of keystore)
mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n keystorePass -v <password>    (assigning keystore password)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n keystoreFile -v <keystore path>   (assigning the execution group JVM to keystore path)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n keystoreType -v JKS  (assigning the execution group JVM to the keystore type)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n keystorePass -v brokerKeystore::password (assigning the execution group JVM to the keystore type)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n truststoreFile -v <truststore location>  (if the trustore and the keystore are the same , have the same location  else have the different location of the different JKS files)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n truststoreType -v JKS (assigning truststore type)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n truststorePass -v brokerTruststore::password  (if the keystore and truststore are same , the trustore password will be the same as the JKS password)


If we want to explicitly allow certain ciphers
mqsichangeproperties <BrokerName> e MCFP06  -o HTTPSConnector -n ciphers -v \"SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA\"

#######################################################################################





curl
 curl https://ws.ondemand.qas.com/ProOnDemand/V3/ProOnDemandService.asmx --trace-ascii qas_curl.log
wget --post-file=eqas.xml https://ws.ondemand.qas.com/ProOnDemand/V3/ProOnDemandService.asmx




========================SSSH withouth password ======================================================
#!/bin/sh

# create ssh connections without giving a password

if [ $# -lt 1 ]; then
echo Usage: $0 username@remotehost
exit
fi
remote="$1" # 1st command-line argument is the user@remotehost address
this=$HOST # name of client host

# first check if we need to run ssh-keygen for generating
# $HOME/.ssh with public and private keys:
if [ ! -d $HOME/.ssh ]; then
echo "just type RETURN for each question:" # no passphrase - unsecure!!
# generate DSA keys only:
echo; echo; echo
#This will generate the .ssh directory and put the keys in it
ssh-keygen -t dsa
else
# we have $HOME/.ssh, but check that we have 
# key (DSA):
if [ ! -f $HOME/.ssh/id_dsa ]; then
# generate DSA keys:
echo "just type RETURN for each question:" # no passphrase - unsecure!!
ssh-keygen -t dsa
fi
fi

echo "You will be asked for your remote password several times during this phase"

cd $HOME/.ssh

if [ ! -f config ]; then
# make ssh try ssh -2 (DSA keys)
echo "Protocol 2" > config
chmod 600 config
fi

#Make sure private key cannot be read by anyone else
chmod 600 $HOME/.ssh/id_dsa

# copy public keys to the destination host:

echo; echo; echo
# create .ssh on remote host if it's not there:
echo "Connecting to remote host to create .ssh directory..."
ssh $remote 'if [ ! -d .ssh ]; then mkdir .ssh; fi'
# copy DSA key:
echo "Copying public DSA key to remote host..."
scpid_dsa.pub ${remote}:.ssh/${this}_dsa.pub
# make authorized_keys(2) files on remote host:

echo; echo; echo
# this one copies DSA key:
echo "Configuring authorized_keys2 file on remote host..."
ssh $remote "cd .ssh; touch authorized_keys2; cat ${this}_dsa.pub >> authorized_keys2;"
echo "Configuring directory permissions on remote host..."
ssh $remote "cd .ssh; rm ${this}_dsa.pub; chmod 600 *; cd ..; chmod go-rwx .ssh;"
echo; echo; echo
echo "You should now be able to ssh to the remote host without a password"
echo "try ssh $remote"


======================================================================================================================

qload for file to queue
./qload -m S2MSGW01 -f <filename> -o <queue>
./qload -m S2MSGW01 -i <queue name> -f <file>s

 
 
runmqdlq SYSTEM.DEAD.LETTER.QUEUE S2MSGW01 <rules.dlq


in rules.dlq file

INPUTQM(' ') INPUTQ(' ') WAIT(NO) RETRYINT(5)
REASON(*) ACTION(RETRY) RETRY(5)


======================================

send email from telnet

telnet <exchange server> 25


type subject

type address
. 

quit



Broker oracle load balancing

See below example for 2 nodes 

.... 
.... 
HostName=node1.my.ibm.com 
PortNumber=1521 
ServiceName=WMBService.my.ibm.com 
AlternateServers=(HostName=node2.my.ibm.com:PortNumber=1521: 
ServiceName=WMBService.my.ibm.com) 
LoadBalancing=1 
.... 


fteDeleteMonitor -ma  S02_SIT2WCS01_S2EMMFT02 -mn WCS_IAA_MONITOR  

fteCreateMonitor -ma S02_SIT2WCS01_S2EMMFT02 -mn WCS_IAA_MONITOR -mm S2EMMFT02 -mq MFT_XB60_WCSIAA_MQFTE   -mt /home/mqm/step_sdl_mft_monitor.xml -tr completeGroups -pi 60 -pu seconds

fteCleanAgent -all  S02_SIT2WCS01_S2EMMFT02


fteCreateAgent -agentName S02_SIT2WCS01_S2EMMFT02 -agentQMgr S2EMMFT02 -agentQMgrHost MFT01.sit2.att.mnscorp.net -agentQMgrPort 11552 -agentQMgrChannel FTE.SVRCONN



wcs agent 
/export/p120663vaps2259/mslogs/mqftlogs/S2EMMFT01/agents/S02_SIT2WCS01_S2EMMFT02/logs



/var/mqm/mqft/config/S2EMMFT01/agents/S02_SIT2WCS01_S2EMMFT02/

agentQMgr=S2EMMFT02
agentQMgrPort=11552
agentDesc=
agentQMgrHost=mft01.att.mnscorp.net
agentQMgrChannel=FTE.SVRCONN
agentName=S02_SIT2WCS01_S2EMMFT02
agentQMgrStandby=mft02.att.mnscorp.net(11552)
enableQueueInputOutput=true




======================
fteCreateMonitor -ma S02_SIT2WCS01_S2EMMFT02 -mn WCS_MONITOR -mm S2EMMFT02 -mq MFT_MQFTE_WCS_XB60  -mt /home/mqm/wcs_mft_monitor.xml -tr completeGroups -pi 60 -pu seconds



p1181549
orange20
huxc8313

/opt/IBM/WMQFTE/bin


/opt/IBM/WMQFTE/bin/fteCreateTransfer -sa C01_C1DHDS03.UNIX_C1MQFT02 -sm C1MQFT02 -da C01_C1DHDS03.UNIX_C1MQFT02 -dm C1MQFT02 -sd delete -t binary -dq MFT_MQFTE_WCS_XB60_C3 -qmp true -qs 4M -jn MFT_MCFP_DS_MASTER_CAT_WCS -md TargetAgent=S02_SIT2WCS01_S2EMMFT02 -md TargetQM=S2EMMFT02 -md jobname=MFT_MCFP_DS_MASTER_CAT_WCS -md destination_path="/opt/feeds/catalog/MSUK_Product" -md SenderID=DS -md ReceiverID=WCS -md ContentType=binary -md source_support_group=AIX_SUPPORT -md  destination_support_group=XB60_MQFTE_SUPPORT -md severity=2 /home/dsadm/MSUK_Product



Source_Agent_Name="C01_C1DHDS03.UNIX_C1MQFT02"
Source_Agent_Qmgr_Name="C1MQFT02"
Destination_Agent_Name="C01_MSHSRMNSUKC1228_C1MQFT02"
Destination_Agent_Qmgr_Name="C1MQFT02"



Source_File_Disposition="delete"
Transfer="binary"
Destination_Queue=MFT_MQFTE_WCS_XB60_C3
Target_Agent_Name="S02_SIT2WCS01_S2EMMFT02"
Target_QM="S2EMMFT02"
Target_Path="/opt/feeds/catalog/$FileName"
SenderID=DS
ReceiverID=WCS
ContentType=binary
Destination_Path="/opt/feeds/catalog/$FileName"
Msg_Properties="true"
Jobname="MFT_MCFP_DS_MASTER_CAT_WCS"
Destination_Location=""
Splitter='5M'


smsinst1
87NlFBp2

cv0500

/etl/ControlM/CATE/mcfp/scripts/MCFXSCA010.sh

/etl/IS/Data/CATE/mcfp/outbound/SALES_cTLG




=================================================================
##User Trace
mqsichangetrace -u S1EMBK01 -e MCFP02 -l debug -c 2000000 -r
mqsireadlog -u S1EMBK01 -e MCFP02 -o ~/abc.xml
mqsiformatlog -i ~/abc.xml -o ~/abc.txt
mqsichangetrace S1EMBK01 -u -e MCFP02 -l none
##
mqsichangetrace -u C1PSG01 -e PSG01 -l debug -c 2000000 -r
mqsireadlog -u C1PSG01 -e PSG01 -o ~/abc.xml
mqsiformatlog -i ~/abc.xml -o ~/abc.txt
mqsichangetrace C1PSG01 -u -e PSG01 -l none

## Service Trace
mqsichangetrace -t S1EMBK02 -e MCFP02 -l debug -c 2000000 -r
mqsireadlog -t S1EMBK02 -e MCFP02 -o ~/abc.xml
mqsiformatlog -i ~/abc.xml -o ~/abc.txt
mqsichangetrace S1EMBK01 -t -e MCFP02 -l none

Ramya -p1225619
rajeev -p1176684
Sathish Rad - p1258966

##DB
mqsisetdbparms T1EMBK01 -n EMAPP -u teminst1 -p temadmin 
mqsicvp T1EMBK01 -n EMAPP
##
tnsping EMAPP
lsnrctl status
lsnrctl start listener

##Unlock Oracle user
sqlplus conn as sysdba/sysdba
ALTER USER TEMINST1 ACCOUNT UNLOCK;
ALTER USER TEMINST1 IDENTIFIED BY temadmin;
select username,account_status,CREATED,LOCK_DATE,EXPIRY_DATE,PROFILE from dba_users where username='TEMINST1';

#DB2
list applications for database s2msdb01
force application (PID, PID)

RESET CLUSTER(S01STC01.CLST) QMID('S1EMRP01_2012-11-05_21.10.30') ACTION(FORCEREMOVE) 

SUSPEND QMGR cluster C01STC01.CLST
DIS CLUSQMGR(<QMgrName>) SUSPEND
RESUME QMGR cluster C01STC01.CLST

#wget --post-data="test.xml" http://10.104.25.45:7800/AvailableToPromiseRequest

##
Jump - 10.130.148.20
Broker
ssh P1201362@10.104.25.45
ssh P1201362@10.104.25.46

Sterling
ssh P1201362@10.104.24.61
ssh P1201362@10.104.24.62

wcs
ssh P1201362@10.104.24.63
ssh P1201362@10.104.24.64

step
ssh P1201362@10.104.35.121
ssh P1201362@10.104.35.122

mqfte
ssh P1201362@10.104.24.51
ssh P1201362@10.104.24.52


ssh P1201362@logserver


#mqfte
./fteCreateMonitor -ma S01_UKD0054_S1EMMFT02 -mn STEP_MONITOR -mm S1EMMFT02 -mq MFT_MQFTE_STEP_XB60  -mt /home/fteuser/step_mft_monitor.xml -tr completeGroups -pi 2 -pu minutes

<?xml version="1.0" encoding="UTF-8"?>
<request xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.00" xsi:noNamespaceSchemaLocation="FileTransfer.xsd">
  <managedTransfer>
    <originator>
      <hostName>s221533laps5001</hostName>
      <userID>mqm</userID>
    </originator>
    <sourceAgent QMgr="P1EMMFT02" agent="P01_PRODPIM01_P1EMMFT02"/>
    <destinationAgent QMgr="P1EMMFT02" agent="P01_PRODPIM01_P1EMMFT02"/>
    <transferSet priority="0">
      <metaDataSet>
        <metaData key="source_support_group">${DPMQFTESenderId}</metaData>
        <metaData key="destination_support_group">${DPMQFTEReceiverId}</metaData>
        <metaData key="job_name">MFT_STEP</metaData>
        <metaData key="Severity">2</metaData>
      </metaDataSet>
      <item checksumMethod="MD5" mode="binary">
        <source disposition="delete" recursive="false" type="queue">
          <queue groupId="${groupId}" useGroups="true">MFT_MQFTE_STEP_XB60</queue>
        </source>
        <destination exist="overwrite" type="file">
            <file>${DPMQFTEDestinationFile}</file>
        </destination>
      </item>
    </transferSet>
    <job>
      <name>MFT_STEP</name>
    </job>
  </managedTransfer>
</request>


#ORACLE
whenever sqlerror exit sql.sqlcode;
whenever oserror exit FAILURE

set define off
set head off
set feedback off
set echo off
set pagesize 0
set pages 0
set linesize 200000
set timing off

spool appropriate ~/dummy.txt
UR QUERY GOES HERE
spool off

##DB queries
select intrfc_prtnr_sys_id,msg_direction,sys_insert_tstmp from txn_cme_audit where intrfc_prtnr_sys_id = 'DN'order by sys_insert_tstmp desc;
select EXCEPTION, QUEUE_NAME,sys_insert_tstmp from exc_msg_exception where queue_name= 'AMAZON_MS.ORD001_DN_V001.00.00.PPQ' order by sys_insert_tstmp desc;

Clear Semaphore Loc
for test in `ipcs -s | grep mqm|awk '{print $2}'`;do ipcrm -s $test; done
for test in `ipcs -s | grep mqadmin|awk '{print $2}'`;do ipcrm -s $test; done

SIT DB
smsinst1
fkN2Ik1b


mqm
for test in `ipcs -s | grep mqm|awk '{print $2}'`;do ipcrm -s $test; done;for test in `ipcs -m | grep mqm|awk '{print $2}'`;do ipcrm -m $test; done
mqadmin
for test in `ipcs -s | grep mqadmin|awk '{print $2}'`;do ipcrm -s $test; done;for test in `ipcs -m | grep mqadmin|awk '{print $2}'`;do ipcrm -m $test; done


Grant Connect to MS;
Grant Resource to MS;


mqsisetdbparms  <BrokerName>  -n <Datasource> -u <UserName> -p <Password>

gsk7cmd -cert -list -expiry -db /var/mqsi/Broker_keystore.jks -pw password -type jks
gsk7cmd -cert -extract -db order_crypto_ms.jks -pw Passw0rd@123 -label "webssl_with privatekey" -target filename -format ascii


set linesize 5000;
set long 100000;
set longchunksize 10000;

select message,exception from exc_msg_exception where sys_insert_tstmp > '13-MAY-13 01.00.19.878253 PM';
select * from txn_cme_audit where msg_processed_ts>'';
select cme_intrfc_id,msg_direction,msg_processed_ts from txn_cme_audit where intrfc_prtnr_sys_id='ASN' and cme_intrfc_id='DEL004' and msg_processed_ts>'24-OCT-12 03.00.19.878253 AM';

select cme_intrfc_id,msg_direction,msg_processed_ts from txn_cme_audit where msg_processed_ts>'25-NOV-12 08.00.19.878253 AM';

hlxd0mc002, hlxd0mc003, hlxd0mc004

./amqsbcg MS_STERLING.INV002_UPDT_FLWR_PLUS_V001.00.00.ERQ S2STC01

PSG - CATE B

Brokers 
10.149.24.41
10.149.24.42
 
DB
10.149.24.43


mqsichangeproperties C1PSG01 -e PSG01 -o HTTPConnector -n explicitlySetPortNumber -v 7800


#Set EG Heap
mqsichangeproperties <BrokerName> -e <EGName> -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
mqsichangeproperties <BrokerName> -e <EGName> -o ComIbmJVMManager -n jvmMaxHeapSize -v 1073741824
#Verification
mqsireportproperties <BrokerName>  -o ComIbmJVMManager -e <EGName> -r | grep jvmMinHeapSize
mqsireportproperties <BrokerName> -o ComIbmJVMManager -e <EGName> -r | grep jvmMaxHeapSize

#Set-up broker wide HTTP listener
mqsichangeproperties <BrokerName> -b httplistener -o HTTPListener -n startListener -v true
mqsichangeproperties <BrokerName> -e <EGName> -o ExecutionGroup -n httpNodesUseEmbeddedListener -v false
mqsichangeproperties <BrokerName> -e <EGName> -o ExecutionGroup -n soapNodesUseEmbeddedListener -v false
##We will not use the below, broker level command as it does not change the SOAP ports.
##mqsichangeproperties <BrokerName> -e <EGName> -n httpNodesUseEmbeddedListener -v false
mqsichangeproperties <BrokerName> -b httplistener -o HTTPConnector -n port -v <port> -w 300
mqsistop <BrokerName>
mqsistart <BrokerName>
#Verification
mqsireportproperties <BrokerName> -b httplistener -o HTTPConnector  -a

#Set-up Broker wide HTTPS listener
mqsichangeproperties <BrokerName> -b httplistener -o HTTPListener -n enableSSLConnector -v true
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n port -v 7650
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n clientAuth -v true
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n sslProtocol -v SSL
#Verification
mqsireportproperties <BrokerName> -b httplistener -o AllReportableEntityNames -a
mqsireportproperties <BrokerName> -b httplistener -o HTTPListener -a
mqsireportproperties <BrokerName> -b httplistener -o HTTPSConnector  -a

#PKI/Keystore Reference to Broker
#Verification
mqsireportproperties <BrokerName> -o BrokerRegistry r
#Keystore reference
mqsichangeproperties <BrokerName> -o BrokerRegistry -n brokerKeystoreFile -v /var/mqsi/Broker_keystore.jks
mqsistop <BrokerName>
mqsisetdbparms <BrokerName> -n brokerKeystore::password -u ignore -p password
mqsistart <BrokerName>
#Verification
mqsireportproperties <BrokerName> -o BrokerRegistry r


curl -v -k --data @/tmp/postilion.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do > /tmp/resp3.xml
xmllint --format /tmp/resp.xml

openssl s_client -connect 10.250.5.16:443
openssl s_client -connect 10.250.5.16:443 -showcerts

gsk7cmd -cert -list -expiry -db order_crypto_ms.jks -pw password -type jks
keytool -list -v -keystore Broker_keystore.jks
keytool -exportcert -alias le-b299afaf-e8d5-4df6-818d-f6e2efe06893 -file Broker_keystore.crt -keystore  /var/mqsi/Broker_keystore.jks

File Logger FTE:
/var/mqm/mqft/logs/S1EMMFT01/loggers/MCFP_FILE_LOGGER

<xsl:variable name="Domain" select="dp:variable('var://service/domain-name')"/>
		<xsl:variable name="MPGW" select="dp:variable('var://service/processor-name')"/>

<xsl:variable name="Component" select="concat(dp:variable('var://service/domain-name'), '-', dp:variable('var://service/processor-name'))"/>

Base64:
openssl base64 -in test.txt -out test.txt.enc
openssl base64 -d -in test.txt.enc -out test1.txt

Corporate MS audit:
SELECT * FROM MS.TXN_CME_AUDIT where auditing_sys_component='MCFP_ROLLOUT_ROUTING_FLOW' and cme_payload_name='DS_DemandNotification' and cme_msg_id='msgID' order by sys_insert_ts desc for fetch only;

XB60 audit:
SELECT * FROM MS.TXN_CME_AUDIT where flow_id='888' and cme_payload_name='DS_DemandNotification' and cme_msg_id='msgID' order by sys_insert_ts desc for fetch only;	

2081188026
7626919455	

--ccdt
export MQCHLLIB=/MQHA/qmgrs/C1PSG01/@ipcc/
export MQCHLTAB=AMQCLCHL.TAB
mqsc -n -t /MQHA/qmgrs/C1PSG01/@ipcc/
SupportPac MO72

"/home/mqm/Linux Intel 64"
/MQHA/qmgrs/C1PSG01/@ipcc

mqsc m C1PSG01 g

DEFINE CHANNEL(WCS.SVRCONN) CHLTYPE(CLNTCONN) TRPTYPE(TCP) CONNAME('wcs01.sit2.att.mnscorp.net(11531),wcs02.sit2.att.mnscorp.net(11532),wcs02.sit2.att.mnscorp.net(11531),wcs01.sit2.att.mnscorp.net(11532)') QMNAME(S2WCS01) REPLACE
--DEFINE CHANNEL(WCS.SVRCONN) CHLTYPE(CLNTCONN) TRPTYPE(TCP) CONNAME('wcs02.sit2.att.mnscorp.net(11532),wcs01.sit2.att.mnscorp.net(11532),wcs01.sit2.att.mnscorp.net(11531),wcs01.sit2.att.mnscorp.net(11531)') QMNAME(S2WCS01) REPLACE
echo "DEFINE CHANNEL(WCS.SVRCONN) CHLTYPE(CLNTCONN) TRPTYPE(TCP) CONNAME('10.128.138.76(11531)') QMNAME('') REPLACE"|runmqsc S1WCS01
DEFINE CHL(WCS.SVRCONN) CHLTYPE(SVRCONN) MCAUSER('')

DES-CBC3-SHA
XI52XI52
Non-prod Payment 3PI URLs
Cybersource: https://ics2wst.ic3.com/commerce/1.x/transactionProcessor
Accertify:
Auth fails path: https://icnow01.accertify.net/icNowImport/e94627f8-4dbc-463c-988e-8690c26800ee
Order Status Update: https://icnow01.accertify.net/icNowImport/d85b0e11-c96f-4bde-b0bf-b41875b16526
Order Req/Resp: https://icnow01.accertify.net/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e

Cybersource API:
RzZnYdYoyEY2OHkynKYvKn/LXO/nZwpnuE3Jt9b8/8UIi8ZmYEq9MgCs6XpghwKjoZRNTW8oXJi6t2xrhVDFTecCFfMsewULcWAriYxCSUAJT7I+mYnF8c/2pSlYC+XHpWky8GCx/wZ2/HV8Dafv2jqILJMiAKZmdo9C8tM5e34nwEfI9LPiG8qTr3U8wZIqf8tc7+dnCme4Tcm31vz/xQiLxmZgSr0yAKzpemCHAqOhlE1NbyhcmLq3bGuFUMVN5wIV8yx7BQtxYCuJjEJJQAlPsj6ZicXxz/alKVgL5celaTLwYLH/Bnb8dXwNp+/aOogskyIApmZ2j0Ly0zl7fg==

NonProd XB60 Internal VIP: b2bgwsit.marksandspencercate.com

MQ distribution List: http://www-01.ibm.com/support/docview.wss?uid=swg27018746&aid=1
http://publib.boulder.ibm.com/infocenter/wsdatap/4mt/index.jsp?topic=%2Fcom.ibm.dp.xi.doc%2Fintegratingwithmq41.htm
<MQOD> <MQOR><ObjectName>Queue1</ObjectName></MQOR> <MQOR><ObjectName>Queue2</ObjectName></MQOR> <MQOR><ObjectName>Queue3</ObjectName></MQOR> <MQOR><ObjectName>Queue4</ObjectName></MQOR> </MQOD>
<dp:set-request-header name=MQOD value=$mqodStr/>

CATE B
p3008029
london2012


huxc8123:/etc/mail# telnet mshsrmnsexc0010.mnsexchangecate.adrootcate.marksandspencercate.com 25
Trying...
Connected to mshsrmnsexc0010.mnsexchangecate.adrootcate.marksandspencercate.com.
Escape character is '^]'.
220 MSHSRMNSEXC0010.mnsexchangecate.adrootcate.marksandspencercate.com Microsoft ESMTP MAIL Service, Version: 6.0.3790.4675 ready at  Mon, 25 Mar 2013 10:10:59 +0000
HELO LOKESH
250 MSHSRMNSEXC0010.mnsexchangecate.adrootcate.marksandspencercate.com Hello [10.146.53.17]
MAIL FROM: lok@abc.com
250 2.1.0 lok@abc.com....Sender OK
RCPT TO: lakshman.lingala@marksandspencercate.com
250 2.1.5 lakshman.lingala@marksandspencercate.com
DATA
354 Start mail input; end with <CRLF>.<CRLF>
hello Laksman from test mailbox.


.
250 2.6.0 <MSHSRMNSEXC0010dUol00000001@MSHSRMNSEXC0010.mnsexchangecate.adrootcate.marksandspencercate.com> Queued mail for delivery
quit
221 2.0.0 MSHSRMNSEXC0010.mnsexchangecate.adrootcate.marksandspencercate.com Service closing transmission channel
Connection closed.




============================================

URL: (Amsterdam)

http://p120338vaps5126.dr.att.mnscorp.net/   - P1276775 - 

Putty: p1276775 -Ac4kJ83pwXwM


WOKING:

http://s220816vaps5126.prod.att.mnscorp.net  -  P1276775 - RS0RLNe2jQ25

Putty  P1276775  p1276775 Ac4kJ83pwXwM  (LATEST password USE THIS )



================================================================================================================



huxc8313 ds server
dsadm
8yxDP3DW


huxd0314 server
dsadm
Prx5Dc3Q

huxd0313 server
dsadm
tX8c2UyL

huxc8123.unix
p3009357
Madras2013



============================== XB60 commands ========================

top; configure terminal;

# configuration generated Thu May 2 13:02:59 2013; firmware version 223327

interface "eth10"
  ip address 10.130.116.10/29
  ip default-gateway 10.130.116.14
  arp
  no ipv6
  no slaac
  mtu 1500
  mode 1000baseTx-FD
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth11"
  ip address 10.130.126.10/29
  arp
  ip route 10.0.0.0/8 10.130.126.14 1
  no ipv6
  no slaac
  mtu 1500
  mode 1000baseTx-FD
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth12"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth13"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth14"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth15"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth16"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth17"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth20"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "eth21"
  arp
  no ipv6
  no slaac
  mtu 1500
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "mgt0"
  ip address 10.130.101.30/24
  arp
  ip route 10.11.216.20/32 10.130.101.254 1
  ip route 10.128.141.0/24 10.130.101.254 1
  ip route 10.130.49.0/24 10.130.101.254 1
  no ipv6
  no slaac
  mtu 1500
  mode 100baseTx-FD
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

interface "mgt1"
  ip address 10.10.10.1/24
  arp
  no ipv6
  no slaac
  mtu 1500
  mode 100baseTx-FD
  no ipv6-linklocal-startup-wo-primary-ipaddr
  admin-state "enabled"
exit 

dns
  admin-state enabled
  name-server 212.137.64.13 53 53 0 3
  name-server 212.137.65.14 53 53 0 3
  ip-preference 4
exit

%if% available "host-alias"

host-alias "External"
  summary "External"
  ip-address 10.130.116.10
exit

host-alias "Internal"
  summary "Internal"
  ip-address 10.130.126.10
exit

host-alias "Management"
  summary "Management"
  ip-address 10.130.101.30
exit

%endif%

%if% available "network"

network
  admin-state enabled
  icmp-disable Timestamp-Reply
exit

%endif%

%if% available "radius"

radius
  admin-state enabled
exit

%endif%

%if% available "ntp-service"

ntp-service
  admin-state enabled
  remote-server 10.11.216.20
exit

%endif%

%if% available "timezone"

timezone GMT0BST

%endif%

%if% available "system"

system
  admin-state enabled
  entitlement "6805041"
  name "XI52-A-NonProd-SP"
  detect-intrusion enable
exit

%endif%

%if% available "throttle"

throttle
  admin-state enabled
exit

%endif%

%if% available "snmp"

snmp
  admin-state disabled
  trap-priority warn
  trap-code 0x00030002
  trap-code 0x00230003
  trap-code 0x00330002
  trap-code 0x00b30014
  trap-code 0x00e30001
  trap-code 0x00e40008
  trap-code 0x00f30008
  trap-code 0x01530001
  trap-code 0x01a2000e
  trap-code 0x01a40001
  trap-code 0x01a40005
  trap-code 0x01a40008
  trap-code 0x01b10006
  trap-code 0x01b10009
  trap-code 0x01b20002
  trap-code 0x01b20004
  trap-code 0x01b20008
  trap-code 0x02220001
  trap-code 0x02220003
  trap-code 0x02240002
exit

%endif%

crypto
  certificate "iop-mgmt-cert" "cert:///dtxcert.der"
exit

crypto
  key "iop-mgmt-key" "cert:///dtxkey.pem"
exit

crypto
  idcred "iop-mgmt-idcred" "iop-mgmt-key" "iop-mgmt-cert"
exit

crypto
  profile "iop-mgmt-profile" "iop-mgmt-idcred" option-string OpenSSL-default+Disable-SSLv2
exit

sslproxy "iop-mgmt-ssl" reverse "iop-mgmt-profile" sess-timeout 300 cache-size 20

crypto
  
%if% available "cert-monitor"

cert-monitor
  admin-state enabled
exit

%endif%

exit

crypto
  no crl

exit

%if% available "raid-volume"

raid-volume "raid0"
  admin-state enabled
  directory "ondisk"
exit

%endif%

%if% available "iscsi-initiator"

iscsi-initiator
  admin-state enabled
exit

%endif%
logging event default-log all error
logging event default-log mgmt notice

%if% available "rbm"

rbm
  admin-state enabled
exit

%endif%

acl ssh
exit

acl web-mgmt
exit

acl xml-mgmt
exit

ssh Management 22

%if% available "metadata"

metadata "ftp-usercert-metadata"
  meta-item "variable" "dn" "var://context/INPUT/ftp/tls/client-subject-dn"
  meta-item "variable" "issuer" "var://context/INPUT/ftp/tls/client-issuer-dn"
  meta-item "variable" "serial" "var://context/INPUT/ftp/tls/client-serial-number"
exit

metadata "ftp-username-metadata"
  meta-item "variable" "dn" "var://context/INPUT/ftp/tls/client-subject-dn"
  meta-item "variable" "issuer" "var://context/INPUT/ftp/tls/client-issuer-dn"
  meta-item "variable" "password" "var://context/INPUT/ftp/password"
  meta-item "variable" "serial" "var://context/INPUT/ftp/tls/client-serial-number"
  meta-item "variable" "username" "var://context/INPUT/ftp/username"
exit

metadata "oauth-scope-metadata"
  meta-item "variable" "scope" "var://context/INPUT/oauth/verified-scope"
exit

metadata "ssh-password-metadata"
  meta-item "variable" "password" "var://context/INPUT/ssh/password"
  meta-item "variable" "publickey" "var://context/INPUT/ssh/publickey"
  meta-item "variable" "username" "var://context/INPUT/ssh/username"
exit

%endif%

%if% available "aaapolicy"

aaapolicy "iop-mgmt-aaa"
 extract-identity  "http-basic-auth+client-ssl" "" "" "" "" "login" "off" "" "off" "" "xmlfile" "" "" "" "" ""
 authenticate xmlfile "store:///iop-mgmt-aaa.xml" "" "" "" "absolute" "3" "" "" "" "" "" "on" "" "" "1.1" "cn=" "" "" "" "" "" "" "" "" "" "" "" "userPassword" "LTPA2" "" "" "" "" "" "off" "" "1.2" "off" "" "off" "32" "off" "32" "off" "off" "" "" "" "" "0" "off"
 map-credentials xmlfile "store:///iop-mgmt-aaa.xml" "" ""
 extract-resource  "request-uri+request-opname" "" ""
 map-resource xmlfile "store:///iop-mgmt-aaa.xml" "" "WebSEAL" "" ""
 authorize xmlfile "store:///iop-mgmt-aaa.xml" "" "" "" "" "" "any" "" "" "absolute" "3" "" "" "" "1.1" "" "" "" "member" "" "" "subtree" "(objectClass=*)" "2.0" "deny-biased" "on" "" "" "custom" "" "" "" "off" "" "T" "" "off" "" "r" "" "0" "tfim" "" "off" "on" "off" "off"
 post-process  "off" "" "off" "XS" "" "off" "" "" "" "off" "on" "0" "off" "2.0" "off" "" "" "off" "Digest" "0" "0" "on" "off" "LTPA2" "600" "" "" "" "off" "http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ" "off" "" "off" "" "off" "" "off" "1000" "off" "all" "CallTFIM" "hmac-sha1" "sha1" "off" "random" "" "0" "off" "off" "off" "off" "" "off" "assertion" "" "wssec-replace" "authentication+attribute" "bearer" "on" "" "" "" "off" "off" "off" "" "0" "AllHTTP" "" "on" "off" "iv-creds" "0"
exit

%endif%

stylepolicy "default"
  reset
  summary "Default Processing Policy"
exit

%if% available "urlmap"

urlmap "default-attempt-stream-all"
  match "*"
exit

%endif%

%if% available "compile-options"

compile-options "default-attempt-stream"
  try-stream default-attempt-stream-all
exit

%endif%

user-agent "default"
  summary "Default User Agent"
exit

xmlmgr "default"
xsl cache size "default" 256
xsl checksummed cache default
no tx-warn default

xml parser limits "default"
exit

documentcache "default"
 no policy
 maxdocs "5000"
 size "0"
exit
no xml validate "default" *

xml-manager "default"
  summary "Default XML-Manager"
  user-agent "default"
exit

xmlmgr "default-attempt-stream"
xslconfig "default-attempt-stream" "default-attempt-stream"
xsl cache size "default-attempt-stream" 256
xsl checksummed cache default-attempt-stream
no tx-warn default-attempt-stream

xml parser limits "default-attempt-stream"
 bytes-scanned 268435456
 max-node-size 268435456
exit

documentcache "default-attempt-stream"
 no policy
 maxdocs "5000"
 size "0"
exit
no xml validate "default-attempt-stream" *

xml-manager "default-attempt-stream"
  summary "Default Streaming XML-Manager"
  user-agent "default"
exit

%if% available "wsm-stylepolicy"

wsm-stylepolicy "default"
  summary "Default Processing Policy"
exit

%endif%

%if% available "iop-mgmt"

iop-mgmt
  admin-state disabled
exit

%endif%

%if% available "nfs-client"

nfs-client
  admin-state disabled
exit

%endif%

%if% available "nfs-dynamic-mounts"

nfs-dynamic-mounts
  admin-state disabled
exit

%endif%

xml-mgmt
  admin-state enabled
  local-address Management 5550
  mode "any+soma+v2004+amp+slm+wsm+wsrr-subscription" 
exit

save-config overwrite

web-mgmt
  admin-state enabled
  local-address 0.0.0.0 9090
exit

%if% available "slm-action"

slm-action "notify"
  log-priority warn
exit

slm-action "shape"
  type shape
exit

slm-action "throttle"
  type reject
exit

%endif%

statistics

%if% available "wsm-agent"

wsm-agent
  admin-state enabled
exit

%endif%

failure-notification
  admin-state enabled
exit

%if% isfile temporary:///backtrace
save error-report
%endif%


===========================================================


select MSG_ID,MSG_UNQ_ID,MSG_PROCESSED_TS,SYS_INSERT_TSTMP,MSG_DIRECTION from txn_cme_audit where cme_intrfc_id = 'CUS012' and sys_insert_tstmp > '13-MAY-13 01.00.19.878253 PM';


select Exception_id, sys_insert_tstmp from exc_msg_exception where queue_name like '%CUS012%' and sys_insert_tstmp > '13-MAY-13 01.00.19.878253 PM';





DR log server
http://p120338vaps5126.dr.att.mnscorp.net/


Imran,
 
SSL (HTTPS) set up is not same as HTTP. SSL is set up broker wide and not to specific EG.
 
I have listed the steps below:
 
#Set-up Broker wide HTTPS listener
mqsichangeproperties <BrokerName> -b httplistener -o HTTPListener -n enableSSLConnector -v true
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n port -v <SSLport>
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n clientAuth -v true
mqsichangeproperties <BrokerName> -b httplistener -o HTTPSConnector -n sslProtocol -v SSL
 
#Verification
mqsireportproperties <BrokerName> -b httplistener -o AllReportableEntityNames -a
mqsireportproperties <BrokerName> -b httplistener -o HTTPListener -a
mqsireportproperties <BrokerName> -b httplistener -o HTTPSConnector  -a
 
Note: On broker1 <SSLport> is 7850 & broker 2 it is 7851.
 
PS: You can follow the link. But most of the steps are already in place and hence I picked just the ones that are absolute minimum steps required to set up SSL for us.
Regards,
Lokesh.
 






ACCESS TO ENV
==================================

CATE B

p3008029
newton999



non prod jump server
10.130.148.20




===============================test performance

Average is 115ms for ping round-trip. How about TCP? Let's ask curl how long tcp connect takes:

% seq 5 | xargs -I@ -n1 curl -so /dev/null -w "%{time_connect}\n" http://www.csh.rit.edu
0.117
0.116
0.117
0.116
0.116



 What about when using SSL? Let's ask curl again:

% curl -kso /dev/null -w "tcp:%{time_connect}, ssldone:%{time_appconnect}\n" https://www.csh.rit.edu
tcp:0.117, ssldone:0.408

# How about to google?
% curl -kso /dev/null -w "tcp:%{time_connect}, ssldone:%{time_appconnect}\n" https://www.google.com
tcp:0.021, ssldone:0.068



=========================================== XSLT for DP url open ===========================

<xsl:variable name="FileContent"> <dp:url-open target="'sftp url'" response="binaryNode"/> </xsl:variable>   <dp:url-open target="'ftp://my-server'" response="whateverResponseYouExpect" data-type="base64"> <xsl:copy-of select="dp:binary-encode($FileContent/result/binary/node())"/> </dp:url-open>

================================ 2nd xslt for DP url open


<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dp="http://www.datapower.com/extensions" xmlns:date="http://exslt.org/dates-and-times" extension-element-prefixes="dp" >
	<xsl:output omit-xml-declaration="yes" />
	<xsl:variable name="a"/>
	<xsl:template match="/">
		<xsl:for-each select="$a/b">
			<xsl:value-of select="dp:time-value()"/>
			<xsl:value-of select="date:date-time()"/>
			<dp:url-open target="http://1.2.3.4" timeout="3"/>
		</xsl:for-each>
	</xsl:template>
</xsl:stylesheet>

=========================================================

https://www.ibm.com/developerworks/community/forums/html/topic?id=77777777-0000-0000-0000-000014947510
https://www.ibm.com/search/csass/search/?q=dp%3Aurl+sftp&sn=dw&lang=en&cc=US&en=utf&hpp=20&dws=dw
https://www.ibm.com/developerworks/community/forums/html/topic?id=77777777-0000-0000-0000-000014924424
https://www.ibm.com/developerworks/community/forums/html/topic?id=77777777-0000-0000-0000-000014681656
https://www.ibm.com/developerworks/community/forums/html/topic?id=77777777-0000-0000-0000-000014629928


============================scripting on datapower CLI =--=====================**************************


#!/bin/ksh
# IBM DataPower L2 Support, csupport@us.ibm.com
#
# The script is provided as it is.
#
# The script will run 7 times, once every 5 mins and collect sample
# data to troubleshoot 100% CPU issues. 
# After script finishes, please send the file cli_output.*
# to the IBM DataPower support specialist.
# For more detail see the technote below --
# http://www-01.ibm.com/support/docview.wss?uid=swg21298826 

##************************************************************
## ****  Edit next 3 lines according to your environment *****
##************************************************************
## Hostname or ip address of the DataPower device 
DPHOST=datapower.device.company.com

## The INFILE is created then used each time the SSH connection is made
INFILE=cli.txt

## The filename prefix these will have a date and time stamp added
OUTFILE=cli_output.

##************************************************************

cat << EOF > $INFILE
DP_PRIVLEDGED_USER_ID
PASSWORD
echo show clock
show clock
echo show load
show load
echo show cpu
show cpu
echo show throughput
show throughput
echo show tcp
show tcp
echo show int
show int
diag
echo show mem
show mem
echo show mem details
show mem details
echo show connections
show connections
echo show handles
show handles
echo show activity 50
show activity 50
EOF

# Collecting load and memory data, 7 captures.
COUNT=7
echo "Data collect started at $DATE" > $OUTFILE
while [[ $COUNT -gt 0 ]]
do
	DATE=`date`
	echo " *********** Number = $COUNT  **************" >> $OUTFILE
	ssh  -T $DPHOST < $INFILE  >> $OUTFILE
	mv $OUTFILE $OUTFILE$(date +%Y%m%d-%H%M%S)
	echo "Created file: " $OUTFILE$(date +%Y%m%d-%H%M%S)
	sleep 300
	(( COUNT -= 1 ))
done

echo "Complete"
===============================---------------------------
dv01175
p1254062
===================================== bazaar voice =====================================
dpmqfte://msGatewayQM_CATE/?RequestQueue=MFT_XB60_OTMM_MQFTE&DestAgent=C01_MSHSRMNSUKC1228_C1MQFT02&DestQM=C1MQFT02&DestFile=\\MSHSRMNSUKC1329\Creative_Agencies\Capita/non_product/SD_WW_T97_5230P_KH_SP13_EC_1_Wednesday.jpg&SenderID=NTSS_SUPPORT&ReceiverID=DAM_SUPPORT&ContentType=MFT_CAPITA_DAM_OTMM



===============webex
steven.gonsalvez
London2013



========================= ORACLE login as sys DBA ================
sqlplus
username : 'sys as dba'
password : any password will work . 


==================================================
================= TIVOLI link  ===================


http://huxp0m05:9999/help/index.jsp

============= Set broker level port ===============================================================
mqsichangeproperties C1PSG02 -b httplistener -o HTTPListener -n startListener -v true
mqsichangeproperties C1PSG02 -b httplistener -o HTTPConnector -n port -v 8989


mqsicreateexecutiongroup C1PSG01 -e PSG02
mqsichangeproperties C1PSG01 -e PSG02 -o ExecutionGroup -n httpNodesUseEmbeddedListener -v false
mqsichangeproperties C1PSG01 -e PSG02 -o ExecutionGroup -n soapNodesUseEmbeddedListener -v false
mqsichangeproperties C1PSG01 -e PSG02 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1073741824
mqsichangeproperties C1PSG01 -e PSG02 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
mqsichangeproperties C1PSG01 -e PSG02 -o ComIbmSocketConnectionManager -n tcpNoDelay -v true
mqsichangeproperties C1PSG01 -e PSG01 -o ComIbmSocketConnectionManager -n maxKeepAliveRequests -v 200
mqsichangeproperties C1PSG01 -e PSG01 -o ComIbmSocketConnectionManager -n maxSocketAge -v 60
mqsichangeproperties C1PSG01 -b httplistener -o HTTPConnector -n tcpNoDelay -v true


=============================================== set http listener/connecter thread values =====================================
mqsichangeproperties C1PSG01 -b httplistener -o HTTPListener -n threadPoolSize -v 200
mqsichangeproperties C1PSG01 -b httplistener -o HTTPConnector -n maxKeepAliveRequests  -v -1
mqsichangeproperties C1PSG01 -b httplistener -o HTTPConnector -n maxThreads  -v 1000
mqsichangeproperties C1PSG01 -b httplistener -o HTTPConnector -n maxSpareThreads -v 50
mqsichangeproperties C1PSG01 -b httplistener -o HTTPConnector -n minSpareThreads -v 50


SocketConnectionManager
or

mqsiservice MyBroker -r HttpListenerThreadPoolSize=60





select substr(to_char(c.misc_data),instr(to_char(c.misc_data),'Tokenizer'),instr(to_char(c.misc_data),';')),
       substr(to_char(c.misc_data),instr(to_char(c.misc_data),'PostAuth'),instr(to_char(c.misc_data),';')) 
       from dump_txn c where c.component_id =9

	   
if instr( list_of_debuggable_procs,debug_procedure_name ) <> 0 then
  dbms_output.put_line( 'found it' );
else
  dbms_output.put_line( 'did not find it' );
end if;
	   

select c.msg_direction,c.msg_unq_id,c.msg_processed_ts,c.component_id
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'CARD'),instr(to_char(c.misc_data),';')),'[^/]+',1,3) mti ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'CARD'),instr(to_char(c.misc_data),';')),'[^/]+',1,4) mto ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'CARD'),instr(to_char(c.misc_data),';')),'[^/]+',1,2) mtd ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'CARD'),instr(to_char(c.misc_data),';')),'[^/]+',1,3) mpi ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'CARD'),instr(to_char(c.misc_data),';')),'[^/]+',1,4) mpo ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'CARD'),instr(to_char(c.misc_data),';')),'[^/]+',1,2) mpd
      from dump_txn c where c.component_id =9

	  
	  select c.msg_direction,c.msg_unq_id,c.msg_processed_ts,c.component_id,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'Tokenizer'),instr(to_char(c.misc_data),';')),'[^/]+',1,3) mti ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'Tokenizer'),instr(to_char(c.misc_data),';')),'[^/]+',1,4) mto ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'Tokenizer'),instr(to_char(c.misc_data),';')),'[^/]+',1,2) mtd ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'PostAuth'),instr(to_char(c.misc_data),';')),'[^/]+',1,3) mpi ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'PostAuth'),instr(to_char(c.misc_data),';')),'[^/]+',1,4) mpo ,
       regexp_substr(substr(to_char(c.misc_data),instr(to_char(c.misc_data),'PostAuth'),instr(to_char(c.misc_data),';')),'[^/]+',1,2) mpd
      from dump_txn c 
	  
	  
	  
	  SELECT A.msg_unq_id,A.msg_processed_ts,B.msg_processed_ts,B.misc_data from
(select  d.msg_id,d.msg_direction,d.msg_unq_id,d.msg_processed_ts,d.component_id,d.misc_data from dump_txn d where d.component_id = '9' and d.msg_direction = 'I') A,
 (select  d.msg_id,d.msg_direction,d.msg_unq_id,d.msg_processed_ts,d.component_id,d.misc_data from dump_txn d where d.component_id = '9' and d.msg_direction='O') B
 Where A.msg_unq_id = B.msg_unq_id
 AND A.msg_id=B.msg_id;
 
 
 select count(*) from (
select  distinct(msg_id) from dump_txn d where d.component_id = '9' and d.msg_direction = 'I');


select X.msg_unq_id,X.MF_I_TS,X.MF_O_TS,X.MF_O_MD,Y.PA_I_TS, Y.PA_O_TS,Y.PA_O_MD from
(SELECT A.msg_id ,A.msg_unq_id,A.msg_processed_ts MF_I_TS,B.msg_processed_ts MF_O_TS,B.misc_data MF_O_MD,A.msg_direction,B.msg_direction from
(select  d.msg_id,d.msg_direction,d.msg_unq_id,d.msg_processed_ts,d.component_id,d.misc_data from dump_txn d where d.component_id = '9' and d.msg_direction = 'I') A,
 (select  d.msg_id,d.msg_direction,d.msg_unq_id,d.msg_processed_ts,d.component_id,d.misc_data from dump_txn d where d.component_id = '9' and d.msg_direction IN ('O','F')) B
 Where A.msg_unq_id = B.msg_unq_id
 AND A.msg_id=B.msg_id) X, 
( SELECT A.msg_unq_id,A.msg_processed_ts PA_I_TS ,B.msg_processed_ts PA_O_TS,B.misc_data PA_O_MD,A.msg_direction,B.msg_direction from
(select  d.msg_id,d.msg_direction,d.msg_unq_id,d.msg_processed_ts,d.component_id,d.misc_data from dump_txn d where d.component_id = '25' and d.msg_direction = 'I') A,
 (select  d.msg_id,d.msg_direction,d.msg_unq_id,d.msg_processed_ts,d.component_id,d.misc_data from dump_txn d where d.component_id = '25' and msg_direction IN ('O','F')) B
 Where A.msg_unq_id = B.msg_unq_id
 AND A.msg_id=B.msg_id) Y where X.msg_unq_id = Y.msg_unq_id;
 
 
 
 
 ===================================================== QUERY ================================================================================================
 
 
 select
	X.msg_unq_id,
	X.MF_I_TS,
	X.MF_TF_REQ,
	X.MF_TF_RES,
	X.MF_PA_REQ,
	Y.PA_I_TS,
	Y.POS_CD1_REQ,
	Y.POS_CD1_RES,
	Y.POS_CD2_REQ,
	Y.POS_CD2_RES,
	Y.POS_CD3_REQ,
	Y.POS_CD3_RES,
	Y.PA_O_TS,
	X.MF_PA_RES,
	X.MF_O_TS 
	from
	(select 
		A.msg_id ,
		A.msg_unq_id,
		to_char(A.msg_processed_ts,'hh24:mi:ss.FF3') MF_I_TS,
		to_char(B.msg_processed_ts,'hh24:mi:ss.FF3') MF_O_TS,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'Tokenizer'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,3) MF_TF_REQ,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'Tokenizer'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,4) MF_TF_RES,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'Post'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,3) MF_PA_REQ,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'Post'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,4) MF_PA_RES,
		A.misc_data MF_O_MD,
		A.msg_direction,
		B.msg_direction,
		A.msg_processed_ts		
		from
		(select 
			d.msg_id,
			d.msg_direction,
			d.msg_unq_id,
			d.msg_processed_ts,
			d.component_id,
			d.misc_data
			from 
			dump_txn d where d.component_id = '9' and d.msg_direction = 'I') A,
		(select  
			d.msg_id,
			d.msg_direction,
			d.msg_unq_id,
			d.msg_processed_ts,
			d.component_id,
			d.misc_data 
			from 
			dump_txn d where d.component_id = '9' and d.msg_direction IN ('O','F')) B
		Where A.msg_unq_id = B.msg_unq_id AND A.msg_id=B.msg_id) X, 
	(SELECT 
		A.msg_unq_id,
		to_char(A.msg_processed_ts,'hh24:mi:ss.FF3') PA_I_TS ,
		to_char(B.msg_processed_ts,'hh24:mi:ss.FF3') PA_O_TS,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD1:'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,3) POS_CD1_REQ,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD1:'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,4) POS_CD1_RES,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD2:'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,3) POS_CD2_REQ,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD2:'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,4) POS_CD2_RES,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD3:'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,3) POS_CD3_REQ,
		regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD3:'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,4) POS_CD3_RES,
		B.misc_data PA_O_MD,
		A.msg_direction,
		B.msg_direction
		from
		(select  
			d.msg_id,
			d.msg_direction,
			d.msg_unq_id,
			d.msg_processed_ts,
			d.component_id,
			d.misc_data 
			from 
			dump_txn d where d.component_id = '25' and d.msg_direction = 'I') A,
		(select  
			d.msg_id,
			d.msg_direction,
			d.msg_unq_id,
			d.msg_processed_ts,
			d.component_id,
			d.misc_data 
			from dump_txn d where d.component_id = '25' and msg_direction IN ('O','F')) B
	Where A.msg_unq_id = B.msg_unq_id AND A.msg_id=B.msg_id) Y 
where X.msg_unq_id = Y.msg_unq_id and X.msg_processed_ts > '22-JUL-13 03.00.19.878253 AM';

=======================================================================================================================================================================
	   
	   
##############################################################################################
Refering the broker to the keystore


mqsistop <BrokerName>
mqsisetdbparms <BrokerName> -n brokerKeystore::password -u ignore -p password
mqsistart <BrokerName>


# SSL Web setup
##############################################################################################
#Set-up Execution group level listener



Creation of listener
mqsicreateexecutiongroup  <BrokerName>  -e MCFP06
mqsichangeproperties <BrokerName>  -e MCFP06 -o ExecutionGroup -n soapNodesUseEmbeddedListener -v true
mqsichangeproperties <BrokerName>  -e MCFP06 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
mqsichangeproperties <BrokerName>  -e MCFP06 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1073741824





mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n sslProtocol -v SSLv3    (set the version of SSL to use  the default is SSLv3)
mqsichangeproperties <BrokerName> -e MCFP06 -o HTTPSConnector -n explicitlySetPortNumber -v <port>    (explicitly setting HTTPS connector at execution group level)
mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n keystoreFile v <Path of keystore file>   (referring the HTTPS connector to the keystore path)
mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n keystoreType -v JKS (assigning the type of keystore)
mqsichangeproperties <BrokerName> e MCFP06 -o HTTPSConnector -n keystorePass -v <password>    (assigning keystore password)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n keystoreFile -v <keystore path>   (assigning the execution group JVM to keystore path)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n keystoreType -v JKS  (assigning the execution group JVM to the keystore type)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n keystorePass -v brokerKeystore::password (assigning the execution group JVM to the keystore type)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n truststoreFile -v <truststore location>  (if the trustore and the keystore are the same , have the same location  else have the different location of the different JKS files)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n truststoreType -v JKS (assigning truststore type)
mqsichangeproperties <BrokerName> e MCFP06 -o ComIbmJVMManager -n truststorePass -v brokerTruststore::password  (if the keystore and truststore are same , the trustore password will be the same as the JKS password)


If we want to explicitly allow certain ciphers
mqsichangeproperties <BrokerName> e MCFP06  -o HTTPSConnector -n ciphers -v \"SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA\"

############################################################################################################## Recording message ID and group ID ###################




Hello Imran,

According to the PMR record  message was sent this morning (about 10 hours ago)  to you and Steve Gonsalvez.  I will try and copy message here:-
=============================================================================================================================

EPS 4.5 Message Sent                                            
To: steven.gonsalvez@marksandspencer, com imran.jaffer@att.com  
Subject: UPDATE to [PMR 78056,019,866] : Build WMQ-FTE iFix     
IC82989 on 7.5.0.0                                              
                                                                
Hello Imran and Steve,                                          
                                                                
I am sending the code snippet for you to collect the incoming as
well as outgoing message id and group id  for messages being    
processed in DataPower using MQFTE URL. Based on my examination,
it seems that incoming message id and transfer id are different.
However, the outgoing message id are also unique. I am not sure 
if DataPower is creating any transfer id for the MQFTE agent. I 
have engaged our development team to provide if DataPower is    
creating the message id for the re-assembled messages.          
                                                                
In order to get the incoming and outgoing message id and group  
id, you will use a transform action in the request rule and     
invoke this XSLT in both request and response rule. If you do   
not use a response rule, you can create one to capture the      
message and group ids that are provided by the qmgr after the   
message is PUT in the queue. You can test it in your lower      
environment and see if you are able to get these data. I used a 
log target to capture only the "xmltmsg" event.                 
                                                                
Here is the log-target configuration:                           
                                                                
logging target "mq-msg-id"                                      
  type file                                                     
  format text                                                   
  local-file "logtemp:///mq-msg-id.log"                         
  upload-method ftp                                             
  event xsltmsg debug                                           
exit                                                            
                                                                
Here is the XSLT code snippet:                                  
                                                                
      <xsl:choose>                                              
          <!-- For request rule only -->                        
          <xsl:when test="dp:responding() = false()">           
          <xsl:variable                                         
name="entries"   select="dp:request-header('MQMD')"/>           
          <xsl:variable                                         
name="header"   select="dp:parse($entries)"/>                   
          <xsl:variable name="MsgId"   select="$header//MsgId"/>
          <xsl:variable                                         
name="GroupId"  select="$header//GroupId"/>                     
          <xsl:variable                                         
name="MsgSeqNumber" select="$header//MsgSeqNumber"/>            
          <xsl:variable name="tID"                              
select="dp:variable('var://service/transaction-id')"/>          
                                                                
                <xsl:message dp:priority="debug">               
                    <xsl:value-of select="concat('Request MsgId 
with tID (', $tID, ')     : ', $MsgId)"/>                       
                </xsl:message>                                  
                                                                
                <xsl:message dp:priority="debug">               
                    <xsl:value-of select="concat('Request       
GroupId with tID (', $tID, ')   : ', $GroupId)"/>               
                </xsl:message>                                  
                                                                
                <xsl:message dp:priority="debug">               
                    <xsl:value-of select="concat('Request Seq # 
with tID (', $tID, ')     : ', $MsgSeqNumber)"/>                
                </xsl:message>                                  
          </xsl:when>                                           
          <!-- For response rule only -->                       
          <xsl:when test="dp:responding() = true()">            
          <xsl:variable                                         
name="entries"   select="dp:response-header('MQMD')"/>          
          <xsl:variable                                         
name="header"   select="dp:parse($entries)"/>                   
          <xsl:variable name="MsgId"   select="$header//MsgId"/>
          <xsl:variable                                         
name="GroupId"  select="$header//GroupId"/>                     
          <xsl:variable                                         
name="MsgSeqNumber" select="$header//MsgSeqNumber"/>            
          <xsl:variable name="tID"                              
select="dp:variable('var://service/transaction-id')"/>          
                                                                
                <xsl:message dp:priority="debug">               
                    <xsl:value-of select="concat('Response MsgId
with tID (', $tID, ')   : ', $MsgId)"/>                         
                </xsl:message>                                  
                                                                
                <xsl:message dp:priority="debug">               
                    <xsl:value-of select="concat('Response      
GroupId with tID (', $tID, ') : ', $GroupId)"/>                 
                </xsl:message>                                  
                                                                
                <xsl:message dp:priority="debug">               
                    <xsl:value-of select="concat('Response Seq #
with tID (', $tID, ')   : ', $MsgSeqNumber)"/>                  
                </xsl:message>                                  
          </xsl:when>                                           
      </xsl:choose>                                             
                                                                
                                                                
Please let me know if you have any question on the data         
collection part. We will follow up again as we get more         
information from the development                                
                                                                
Here are my extraction from the XSLT:                           
source queue msg #1                                             
msgid:414D5120514D5F4C494E555820202020AFCAEF5102D00220          
grpid:414D5120514D5F4C494E555820202020AFCAEF5103D00220          
                                                                
source queue msg #2                                             
msgid:414D5120514D5F4C494E555820202020AFCAEF5104D00220          
grpid:414D5120514D5F4C494E555820202020AFCAEF5103D00220          
                                                                
source queue msg #3                                             
msgid:414D5120514D5F4C494E555820202020AFCAEF5106D00220          
grpid:414D5120514D5F4C494E555820202020AFCAEF5103D00220          
                                                                
destination queue msg#1                                         
msgid:414D5120514D5F4C494E555820202020AFCAEF510A780220          
grpid:414D5120514D5F4C494E555820202020AFCAEF5102DE0220          
                                                                
destination queue msg#2                                         
msgid:414D5120514D5F4C494E555820202020AFCAEF5103DE0220          
grpid:414D5120514D5F4C494E555820202020AFCAEF5102DE0220          
                                                                
DataPower request log msg                                       
msgid:414d5120514d5f4c494e555820202020afcaef5102d00220          
grpid:414d5120514d5f4c494e555820202020afcaef5103d00220          
                                                                
DataPower response log msg                                      
msgid:414d5120514d5f4c494e555820202020afcaef5103de0220          
grpid:414d5120514d5f4c494e555820202020afcaef5102de0220          
                                                                
================================================================
================================================================
======================================================          
Wed Jul 24 2013 12:27:06 [xsltmsg][debug]                       
mpgw(message-to-file-mpgw): tid(5213121)[request]: Request MsgId
with tID (5213121)     :                                        
414d5120514d5f4c494e555820202020afcaef5102d00220                
Wed Jul 24 2013 12:27:06 [xsltmsg][debug]                       
mpgw(message-to-file-mpgw): tid(5213121)[request]: Request      
GroupId with tID (5213121)   :                                  
414d5120514d5f4c494e555820202020afcaef5103d00220                
Wed Jul 24 2013 12:27:06 [xsltmsg][debug]                       
mpgw(message-to-file-mpgw): tid(5213121)[request]: Request Seq #
with tID (5213121)     : 1                                      
Wed Jul 24 2013 12:27:06 [xsltmsg][debug]                       
mpgw(message-to-file-mpgw): tid(5213121)[response]: Response    
MsgId with tID (5213121)   :                                    
414d5120514d5f4c494e555820202020afcaef5103de0220                
Wed Jul 24 2013 12:27:06 [xsltmsg][debug]                       
mpgw(message-to-file-mpgw): tid(5213121)[response]: Response    
GroupId with tID (5213121) :                                    
414d5120514d5f4c494e555820202020afcaef5102de0220                
Wed Jul 24 2013 12:27:06 [xsltmsg][debug]                       
mpgw(message-to-file-mpgw): tid(5213121)[response]: Response Seq
# with tID (5213121)   : 2                                      
                                                                
                                                                
5655-U80, 5724-R10 Copyright IBM Corp.  2008, 2011.  ALL RIGHTS 
RESERVED                                                        
BFGCL0035I: Transfer request issued.  The request ID is:        
414d5120514d5f4c494e555820202020afcaef510a780220                
BFGCL0182I: The request is now waiting to be processed by the   
agent.                                                          
-bash-4.1$ ./fmon-msg-to-file-test2x.sh                         
5655-U80, 5724-R10 Copyright IBM Corp.  2008, 2011.  ALL RIGHTS 
RESERVED                                                        
BFGCL0035I: Transfer request issued.  The request ID is:        
414d5120514d5f4c494e555820202020afcaef5103130320                
BFGCL0182I: The request is now waiting to be processed by the   
agent.                                                          
                                                                
transfer id extrcated from the MQFTE agent log:                 
com.ibm.wmqfte.TransferId=414d5120514d5f4c494e555820202020afcaef
510a780220

----------------------------------------------------------------------------------------------------------------------------------

Regards,

Bill McAllister
Team Lead  TSS 24x7 Software Support
Technical Support Specialist

#################################################################################


CV00250

p1313575
pass123


set a= `mqsilist C1PSG01 | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`
for each in  $a
do 
echo $a 
done 




set a= `mqsilist C1PSG01 | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`
for each in `mqsilist C1PSG01 | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`
do 
echo $each
for test in ` mqsilist C1PSG01 -e $each | grep Application | awk -F"'" {'print $2'}`
do 
echo $test
mqsideploy C1PSG01 -e $each -d $test -w 120
done
done 


for each in `mqsilist $QM | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`; do url=`mqsireportproperties $QM -e $each -o HTTPSConnector -r | grep url | awk -F"'" {'print $2'}`;port=`mqsireportproperties $QM -e $each -o HTTPSConnector -r |  grep -m 1 port | awk -F"'" {'print $2'}`; printf "\n $each,$port,$url";done


| tee -a $log 2>&1




=======================================================

ConfirmDetails ()
{
printf "********************************************\n"
printf "Broker name is $brokerName"
printf " \n"
}


All ()
{
for each in `mqsilist $brokerName | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`
do 

url=`mqsireportproperties $brokerName -e $each -o HTTPConnector -r | grep url`
port=`mqsireportproperties $brokerName -e $each -o HTTPConnector -r | grep port | head -n1`
printf "\n========================================================================="
printf "\n********** !!$each !! ${port}!! ${url}***************\n"
printf "Flows in the execution group \n"
mqsilist $brokerName -e $each |  grep Application | awk -F"'" '{print $2}'
done
}


log=./general_`date +%Y%m%d-%H%M.log`
orgdir="`pwd`";
while getopts M:m:C:c:EeUuIiQqXxFfTtOoVvBbSsAaRr OPTS
do
   case $OPTS in
     m|M) # Set the Queue Manager Name and check it is running
       brokerName=$OPTARG
       ConfirmDetails 
       ;;
	   
	    a|A) # Checking stuff
      All
       ;;

       *) # invalid flag
       usage
       ;;
   esac

done

===================================================================================




mqsichangeflowstats ${1} -s -e PSG02 -k PAY001_MASTER_FLOW -f com.mns.ms.pay001.PAY001_MASTER_FLOW_WCS_V001_00_00 -n basic -t non
e -o xml -c active
mqsichangeflowstats ${1} -s -e PSG07 -k PAY001_PAY_AUTH_WCS -f com.mns.ms.pay001.PAY001_PAY_AUTH_WCS_PST_V001_00_00 -n basic -t n
one -o xml -c active
mqsichangeflowstats ${1} -s -e PSG06 -k PAY009_3D_ENROLL -f com.mns.ms.pay009.PAY009_3DSECURE_ENROLL_WCS_3DS_V001_00_00 -n basic
-t none -o xml -c active
mqsichangeflowstats ${1} -s -e PSG05 -k PAY009_3D_VALIDATE -f com.mns.ms.pay009.PAY009_3DSECURE_VAL_WCS_3DS_V001_00_00 -n basic -
t none -o xml -c active


subscription
$SYS/Broker/C1PSG01/StatisticsAccounting/SnapShot/#





ics2wstest.ic3.com 66.185.180.22 
icnow01.accertify.net 199.189.160.110  
ics2wstest.ic3.com 66.185.180.22  



mqsichangetrace -u C1PSG01 -e PSG10 -l debug -c 2000000 -r
mqsireadlog -u C1PSG01 -e PSG10 -o trace_1608.xml;mqsiformatlog -i trace_1608.xml -o trace_1608.txt;mqsichangetrace C1PSG01 -u -e PSG10 -l none;

=======================================================-''''''''''''''''''''''''''''''''''''====

-e use_proxy=yes -e http_proxy=127.0.0.1:8080


 wget --post-file="Acc_datapower_In.xml" https://icnow01.accertify.net/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e --user=mandsimportert35t --password=:DqGRmc$9 --no-check-certificate -e use_proxy=yes -e http_proxy=10.130.148.24:8525
 
 
  curl -k -v -H"Content-Type: text/xml" --data-binary @Acc_datapower_In.xml https://mandsimportert35t:DqGRmc$9 @icnow01.accertify.net/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e
 
 export http_proxy=http://10.130.148.24:8525/
 
 
 Anana
 
 
  curl -k -v -H"Content-Type: text/xml" --data-binary @Acc_datapower_In.xml --user mandsimportert35t:P74e357Gh$ https://b2bgwsit.marksandspencercate.com:8525/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e
  
  
  http://b2bgwsit.marksandspencercate.com:8525
  
  ics2wstest.ic3.com
  
  
  curl -k -v -H"Content-Type: text/xml" --data-binary @cyber_enrol.xml https://10.130.148.24:8527/commerce/1.x/transactionProcessor/
  
  curl -k -v -H"Content-Type: text/xml" --data-binary @cyber_enrol.xml https://10.130.148.24:8527/commerce/1.x/transactionProcessor
  
  curl -k -v -H"Content-Type: text/xml" --data-binary @Acc_datapower_In.xml --user mandsimportert35t:P74e357Gh$ https://10.130.148.24:8525/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e
  
  
  ##########################################################
  
mqsichangetrace -u C1PSG01 -e PSG10 -k PAY006_FRAUD_CHECK -f com.mns.ms.pay006.PAY006_FRAUD_CHK_STERLING_ACCERTIFY_V001_00_00 -l debug -c 2000000 -r
mqsireadlog -u C1PSG01 -e PSG10 -o trace_1608.xml;mqsiformatlog -i trace_1608.xml -o trace_1608.txt;mqsichangetrace C1PSG01 -u -e PSG10 -l none;



source-mq MS_STERLING.PAY006_FRAUD_RESP_V001.00.00.ERQ-1
admin-state disabled
exit
source-mq MS_STERLING.PAY006_FRAUD_RESP_V001.00.00.ERQ-2
admin-state disabled
exit

source-mq STERLING_MS.PAY006_FRAUD_REQ_V001.00.00.PRQ-1
admin-state enabled
exit
source-mq STERLING_MS.PAY006_FRAUD_REQ_V001.00.00.PRQ-2
admin-state enabled
exit



SYSTEM.ADMIN.SVRCONN/TCP/hlxc0mc002.unix.marksandspencercate.com(11501)


select * from txn_cme_audit where intrfc_prtnr_sys_id = 'FRAUD_CHK_RR' and sys_insert_tstmp > '22-AUG-13 01.51.43.175810000 PM' order by sys_insert_tstmp desc

select * from 
(select a.msg_unq_id , a.msg_processed_ts, a.msg_id , a.msg_direction , a.sys_insert_tstmp from txn_cme_audit  a 
where a.component_id = '501' and a.msg_direction = 'I')X,
(select b.msg_unq_id , b.msg_processed_ts, b.msg_id , b.msg_direction , b.sys_insert_tstmp from txn_cme_audit b
where b.component_id = '501' and b.msg_direction IN ('O','F'))Y
where X.msg_unq_id = Y.msg_unq_id and X.sys_insert_tstmp > '22-AUG-13 01.51.43.175810000 PM'


select * from txn_cme_audit where 
intrfc_prtnr_sys_id = 'FRAUD_CHK_RR' and 
msg_unq_id = '%' and
sys_insert_tstmp > '22-AUG-13 01.51.43.175810000 PM' 
order by sys_insert_tstmp desc






select * from 
(select a.msg_unq_id msg_unq_id, a.msg_processed_ts, a.msg_id , a.msg_direction , a.sys_insert_tstmp from txn_cme_audit  a 
where a.component_id = '501' and a.msg_direction = 'I')X,
(select b.msg_unq_id , b.msg_processed_ts, b.msg_id , b.msg_direction , b.sys_insert_tstmp from txn_cme_audit b
where b.component_id = '501' and b.msg_direction IN ('O','F'))Y
where X.msg_unq_id = Y.msg_unq_id and X.sys_insert_tstmp > '22-AUG-13 01.51.43.175810000 PM'


select 
s_msg_id,
s_mq_id,
s_ts,
t_ts,
s_dir,
t_dir,
s_in_ts,
t_in_ts
from 
(select a.msg_unq_id s_msg_id , a.msg_processed_ts s_ts , a.msg_id s_mq_id , a.msg_direction s_dir, a.sys_insert_tstmp s_in_ts from txn_cme_audit  a 
where a.component_id = '501' and a.msg_direction = 'I')X,
(select b.msg_unq_id t_msg_id, b.msg_processed_ts t_ts, b.msg_id t_mq_id, b.msg_direction t_dir, b.sys_insert_tstmp t_in_ts from txn_cme_audit b
where b.component_id = '501' and b.msg_direction IN ('O','F'))Y
where X.msg_unq_id = Y.msg_unq_id and X.sys_insert_tstmp > '22-AUG-13 01.51.43.175810000 PM'



tokeniser 

http://10.250.5.48:443/Detoken


scp [options] username1@source_host:directory1/filename1 username2@destination_host:directory2/filename2
scp [options] username1@source_host:directory1/filename1 username2@destination_host:directory2/filename2

openssl s_client -showcerts -connect localhost:7801



curl -k -v -H"Content-Type: text/xml" --data-binary @/tmp/AddCard  https://localhost:7801/AddCard



mqsichangeproperties C2PSG01 -b httplistener -o HTTPListener -n enableSSLConnector -v true
mqsichangeproperties C2PSG01 -b httplistener -o HTTPSConnector -n keystoreFile -v /home/mqadmin/cert/C2PSG01.jks
mqsichangeproperties C2PSG01 -o BrokerRegistry -n brokerKeystoreFile -v /home/mqadmin/cert/C2PSG01.jks
mqsichangeproperties C2PSG01 -o BrokerRegistry -n brokerTruststoreFile -v /home/mqadmin/cert/C2PSG01.jks
mqsisetdbparms C2PSG01 -n brokerTruststore::password -u ignore -p password
mqsichangeproperties C2PSG01 -b httplistener -o HTTPSConnector -n keystorePass -v password
mqsichangeproperties C2PSG01 -b httplistener -o HTTPSConnector -n port -v 7801
mqsichangeproperties C2PSG01 -b httplistener -o HTTPConnector -n port -v 7801




mqsichangeproperties C2PSG01 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1048576000
mqsichangeproperties C2PSG01 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
mqsichangeproperties C2PSG01 -o BrokerRegistry -n brokerTruststoreFile -v /home/mqadmin/cert/C2PSG01.jks
mqsireportproperties C2PSG01 -o BrokerRegistry -r
mqsireportproperties C2PSG01 -b httplistener -o HTTPConnector -n port



##################################################################### script for wrapping up JKS ###########################

#!/bin/bash

# AT&T script to repackage SSL formats

path_ssl="/export/ecom/ssl";
hostname="`hostname -s | awk -F. '{print $1}'`";
fqdn="${hostname}.att.mnscorp.net";
path_gsk7sa="/home/sslmanager/bin/gsk7sa";
passkey="mnscorp";
env="VP";
ECOM_HOME="/export/ecom";
MQObjMap="${ECOM_HOME}/MQObjectMappings.list";
MBObjMap="${ECOM_HOME}/MBObjectMappings.list";

if [ "${passkey}" == "" ]; then
        echo "Passkey cannot be empty.";
        exit 1;
fi
p12pkstr="-nodes -password pass:${passkey}";
jkspkstr="-pw ${passkey}";
jkspkstr2="${jkspkstr} -target_pw ${passkey}";
stash="-stash";

# Convert to p12
if [ -f ${path_ssl}/${fqdn}.crt ]; then
        cat ${path_ssl}/${fqdn}.key > ${path_ssl}/${fqdn}.p12t;
        cat ${path_ssl}/${fqdn}.crt >> ${path_ssl}/${fqdn}.p12t;
        cat ${path_ssl}/ATTROOT-CA.crt > ${path_ssl}/${fqdn}.p12t.cas;
        cat ${path_ssl}/ATT${env}-CA.crt >> ${path_ssl}/${fqdn}.p12t.cas;
        for caset in `find ${path_ssl} -name caset-\*.crt`; do
		cat ${caset} >> ${path_ssl}/${fqdn}.p12t.cas;
	done
        if [ -f ${path_ssl}/${fqdn}.p12 ]; then
                rm -f ${path_ssl}/${fqdn}.p12;
        fi
        openssl pkcs12 -export ${p12pkstr} -in ${path_ssl}/${fqdn}.p12t -out ${path_ssl}/${fqdn}.p12 -CAfile ${path_ssl}/${fqdn}.p12t.cas -name "${fqdn}";
        rm -f ${path_ssl}/${fqdn}.p12t ${path_ssl}/${fqdn}.p12t.cas;
fi

# Convert to JKS & KDB
export JAVA_HOME=${path_gsk7sa}/java;
if [ -f ${path_ssl}/${fqdn}.jks ]; then
        rm -f ${path_ssl}/${fqdn}.jks;
fi
if [ -f ${path_ssl}/${fqdn}.kdb ]; then
        rm -f ${path_ssl}/${fqdn}.kdb ${path_ssl}/${fqdn}.rdb ${path_ssl}/${fqdn}.sth;
fi
${path_gsk7sa}/bin/gsk7cmd -keydb -create -db  ${path_ssl}/${fqdn}.jks -type jks ${jkspkstr} ${stash};
${path_gsk7sa}/bin/gsk7cmd -cert -import -db ${path_ssl}/${fqdn}.p12 -type pkcs12 -target ${path_ssl}/${fqdn}.jks -target_type jks -label ${fqdn} -new_label ${fqdn} ${jkspkstr2};
${path_gsk7sa}/bin/gsk7cmd -keydb -convert -db ${path_ssl}/${fqdn}.jks ${jkspkstr} -old_format jks -new_format cms ${stash};
CAName="`openssl x509 -noout -subject -in ${path_ssl}/ATTROOT-CA.crt | sed s/subject=\ //g`";
${path_gsk7sa}/bin/gsk7cmd -cert -add -db ${path_ssl}/${fqdn}.jks ${jkspkstr} -label "${CAName}" -file ${path_ssl}/ATTROOT-CA.crt -format ascii;
${path_gsk7sa}/bin/gsk7cmd -cert -add -db ${path_ssl}/${fqdn}.kdb ${jkspkstr} -label "${CAName}" -file ${path_ssl}/ATTROOT-CA.crt -format ascii;
CAName="`openssl x509 -noout -subject -in ${path_ssl}/ATT${env}-CA.crt | sed s/subject=\ //g`";
${path_gsk7sa}/bin/gsk7cmd -cert -add -db ${path_ssl}/${fqdn}.jks ${jkspkstr} -label "${CAName}" -file ${path_ssl}/ATT${env}-CA.crt -format ascii;
${path_gsk7sa}/bin/gsk7cmd -cert -add -db ${path_ssl}/${fqdn}.kdb ${jkspkstr} -label "${CAName}" -file ${path_ssl}/ATT${env}-CA.crt -format ascii;
for caset in `find ${path_ssl} -name caset-\*.crt`; do
	CAName="`openssl x509 -noout -subject -in ${caset} | sed s/subject=\ //g`";
	${path_gsk7sa}/bin/gsk7cmd -cert -add -db ${path_ssl}/${fqdn}.jks ${jkspkstr} -label "${CAName}" -file ${caset} -format ascii;
	${path_gsk7sa}/bin/gsk7cmd -cert -add -db ${path_ssl}/${fqdn}.kdb ${jkspkstr} -label "${CAName}" -file ${caset} -format ascii;
done

# Convert for logical objects
# MQ / Broker
if [ "${MQObjMap}" != "" ]; then
	if [ -f ${MQObjMap} ]; then
		for objectList in `cat ${MQObjMap} | grep ${hostname} | grep -v '^#' | grep . | head -n1 | awk -F: '{print $2}'`; do
			objectList="`echo \"objectList}\" | sed s/,/\ /g`";
	                for object in ${objectList}; do
				object="`echo ${object} | awk -F\( '{print $1}' | tr [:upper:] [:lower:]`";
				# Create keystore for object
				rm -f ${path_ssl}/wmq-${object}.p12 ${path_ssl}/wmq-${object}.jks ${path_ssl}/wmq-${object}.kdb ${path_ssl}/wmq-${object}.rdb ${path_ssl}/wmq-${object}.sth;
				cp ${path_ssl}/${fqdn}.p12 ${path_ssl}/wmq-${object}.p12;
				${path_gsk7sa}/bin/gsk7cmd -cert -rename -db ${path_ssl}/wmq-${object}.p12 -type p12 ${jkspkstr} -label "${fqdn}" -new_label "ibmwebspheremq${object}";
				cp ${path_ssl}/${fqdn}.jks ${path_ssl}/wmq-${object}.jks;
				${path_gsk7sa}/bin/gsk7cmd -cert -rename -db ${path_ssl}/wmq-${object}.jks -type jks ${jkspkstr} -label "${fqdn}" -new_label "ibmwebspheremq${object}";
				cp ${path_ssl}/${fqdn}.kdb ${path_ssl}/wmq-${object}.kdb;
				cp ${path_ssl}/${fqdn}.rdb ${path_ssl}/wmq-${object}.rdb;
				cp ${path_ssl}/${fqdn}.sth ${path_ssl}/wmq-${object}.sth;
				${path_gsk7sa}/bin/gsk7cmd -cert -rename -db ${path_ssl}/wmq-${object}.kdb -type kdb ${jkspkstr} -label "${fqdn}" -new_label "ibmwebspheremq${object}";
			done
		done
	fi
fi
if [ "${MBObjMap}" != "" ]; then
	if [ -f ${MBObjMap} ]; then
		for objectList in `cat ${MBObjMap} | grep ${hostname} | grep -v '^#' | grep . | head -n1 | awk -F: '{print $2}'`; do
			objectList="`echo \"${objectList}\" | sed s/,/\ /g`";
	                for object in ${objectList}; do
				object="`echo ${object} | awk -F\( '{print $1}' | tr [:upper:] [:lower:]`";
				# Create keystore for object
				rm -f ${path_ssl}/wmb-${object}.p12 ${path_ssl}/wmb-${object}.jks ${path_ssl}/wmb-${object}.kdb ${path_ssl}/wmb-${object}.rdb ${path_ssl}/wmb-${object}.sth;
				cp ${path_ssl}/${fqdn}.p12 ${path_ssl}/wmb-${object}.p12;
				${path_gsk7sa}/bin/gsk7cmd -cert -rename -db ${path_ssl}/wmb-${object}.p12 -type p12 ${jkspkstr} -label "${fqdn}" -new_label "${object}";
				cp ${path_ssl}/${fqdn}.jks ${path_ssl}/wmb-${object}.jks;
				${path_gsk7sa}/bin/gsk7cmd -cert -rename -db ${path_ssl}/wmb-${object}.jks -type jks ${jkspkstr} -label "${fqdn}" -new_label "${object}";
				cp ${path_ssl}/${fqdn}.kdb ${path_ssl}/wmb-${object}.kdb;
				cp ${path_ssl}/${fqdn}.rdb ${path_ssl}/wmb-${object}.rdb;
				cp ${path_ssl}/${fqdn}.sth ${path_ssl}/wmb-${object}.sth;
				${path_gsk7sa}/bin/gsk7cmd -cert -rename -db ${path_ssl}/wmb-${object}.kdb -type kdb ${jkspkstr} -label "${fqdn}" -new_label "${object}";
			done
		done
	fi
fi
	
# Correct all permissions
chmod 644 ${path_ssl}/*;
	
# End

###############################################################################################################################################################################################


openssl s_client -connect   localhost:7850 -showcerts -debug


openssl pkcs12 -export -out hlxc0mc010.unix.marksandspencercate.com -inkey hlxc0mc010.unix.marksandspencercate.com-privkey.pem -in hlxc0mc010.unix.marksandspencercate.com-sscert.cer

openssl pkcs12 -export -out hlxc0mc005.unix.marksandspencercate.com -inkey hlxc0mc005.unix.marksandspencercate.com-privkey.pem -in hlxc0mc005.unix.marksandspencercate.com.cer

/opt/IBM/ITM/li6243/gs/bin/gsk7cmd -keydb -create -db ~/cert/swmb-C2PSG02.jks -type jks -pw password -stash;

keytool -importkeystore -srckeystore hlxc0mc010.unix.marksandspencercate.com.p12 -srcstoretype pkcs12 -srcalias  71569448cn=hlxc0mc010.unix.marksandspencercate.comcn=hlxc0mc010.unix.marksandspencercate.com -destkeystore wmb-C2PSG02.jks -deststoretype jks -deststorepass password -destalias wmb-C2PSG02.jks


keytool -v -list -storetype pkcs12 -keystore hlxc0mc010.unix.marksandspencercate.com.p12

 diff <(echo `openssl x509 -noout -modulus -in hlxc0mc009.unix.marksandspencercate.com.selfsigned.crt | openssl md5` ) <(echo `openssl rsa -noout -modulus -in hlxc0mc009.unix.marksandspencercate.com.key | openssl md5`) | wc -l


##########################################################
# LATEST BROKER SSL SETUP 
#####################################
#Add broker keystore / truststore file to broker registry
mqsichangeproperties C2PSG02 -o BrokerRegistry -n brokerKeystoreFile -v /home/mqadmin/certs/wmb-C2PSG02.jks
mqsichangeproperties C2PSG02 -o BrokerRegistry -n brokerTruststoreFile -v /home/mqadmin/certs/wmb-C2PSG02.jks

#Enable SSL on the broker instance
mqsichangeproperties C2PSG02 -b httplistener -o HTTPListener -n enableSSLConnector -v true

#Associate a port for broker to serve HTTPS requests
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n port -v 7850
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n clientAuth -v false
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n sslProtocol -v SSL
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n keystoreFile -v /home/mqadmin/certs/wmb-C2PSG02.jks

#Set Password
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n keystorePass -v password
mqsisetdbparms C2PSG02 -n brokerTruststore::password -u ignore -p password
mqsisetdbparms C2PSG02 -n brokerKeystore::password -u ignore -p password
mqsisetdbparms C2PSG02 -n brokerTruststore::password -u ignore -p password

#Change the JVM attributes
mqsichangeproperties C2PSG02 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1048576000
mqsichangeproperties C2PSG02 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728




# LATEST BROKER SSL SETUP 
#####################################
#Add broker keystore / truststore file to broker registry
mqsichangeproperties C2PSG02 -o BrokerRegistry -n brokerKeystoreFile -v /home/mqadmin/certs/wmb-C2PSG02.jks
mqsichangeproperties C2PSG02 -o BrokerRegistry -n brokerTruststoreFile -v /home/mqadmin/certs/wmb-C2PSG02.jks

#Enable SSL on the broker instance
mqsichangeproperties C2PSG02 -b httplistener -o HTTPListener -n enableSSLConnector -v true

#Associate a port for broker to serve HTTPS requests
mqsireportproperties C2PSG02 -b httplistener -o HTTPSConnector -n port -v 7850
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n clientAuth -v false
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n sslProtocol -v SSL
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n keystoreFile -v /home/mqadmin/certs/wmb-C2PSG02.jks

#Set Password
mqsichangeproperties C2PSG02 -b httplistener -o HTTPSConnector -n keystorePass -v password
mqsisetdbparms C2PSG02 -n brokerTruststore::password -u ignore -p password
mqsisetdbparms C2PSG02 -n brokerKeystore::password -u ignore -p password
mqsisetdbparms C2PSG02 -n brokerTruststore::password -u ignore -p password

#Change the JVM attributes
mqsichangeproperties C2PSG02 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1048576000
mqsichangeproperties C2PSG02 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
####################################################################################################################################################################

################################## Execution Group POrt SSL #'#############################



--create execution group 
mqsicreateexecutiongroup $QM -$eg
mqsichangeproperties $QM -e $eg -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728
mqsichangeproperties $QM -e $eg -o ComIbmJVMManager -n jvmMaxHeapSize -v 1073741824



-- properties of execution group 
mqsichangeproperties $QM -e $eg -o HTTPSConnector -n sslProtocol -v SSL
mqsichangeproperties $QM -e $eg -o HTTPSConnector -n explicitlySetPortNumber -v 8801
mqsichangeproperties $QM -e $eg -o HTTPSConnector -n keystoreFile -v /var/mqsi/certs/broker.jks
mqsichangeproperties $QM -e $eg -o HTTPSConnector -n keystoreType -v JKS
mqsichangeproperties $QM -e $eg -o HTTPSConnector -n keystorePass -v password
mqsichangeproperties $QM -e $eg -o ComIbmJVMManager -n keystoreFile -v /var/mqsi/certs/broker.jks
mqsichangeproperties $QM -e $eg -o ComIbmJVMManager -n keystoreType -v JKS
mqsichangeproperties $QM -e $eg -o ComIbmJVMManager -n keystorePass -v brokerKeystore::password
mqsichangeproperties $QM -e $eg -o ComIbmJVMManager -n truststoreFile -v /var/mqsi/certs/broker.jks
mqsichangeproperties $QM -e $eg -o ComIbmJVMManager -n truststorePass -v brokerTruststore::password
mqsichangeproperties $QM -e $eg -o ExecutionGroup -n httpNodesUseEmbeddedListener -v true
mqsichangeproperties $QM -e $eg -o ExecutionGroup -n soapNodesUseEmbeddedListener -v true





#############################################################################################


aravind.rajaveeraswamy@marksandspencer.com
password16
Cool Comfort&trade; Light Control Secret Slimming&trade; Bonded Knickers 

p1217672
image2013

https://oms.sit1.att.mnscorp.net/smcfs/console/home.detail
admin
P@55w0rd

############################# remove all line breaks /spaces /tabs in xml ###################
tr -cd "[:print:]" < InputFile.xml > output.txt



Jump server p3013145/p3013145
ip
10.130.148.20 
Jump server ip - 10.130.148.20 
Prod Log server - P3013145
london2014 
let me know if it doesn't work


london2014


DR Mo71 sujiotha
201303110946 - User P1276775 reset. Email: Sujithasai.Selvaraju@mnscorp.net. Password set to L3qg7ITtdmDq


########################
##########################################################
# LATEST BROKER SSL SETUP 
#####################################
#Add broker keystore / truststore file to broker registry
mqsichangeproperties C1PSG01 -o BrokerRegistry -n brokerKeystoreFile -v /var/mqsi/verts/broker.jks
mqsichangeproperties C1PSG01 -o BrokerRegistry -n brokerTruststoreFile -v /var/mqsi/verts/broker.jks

#Enable SSL on the broker instance
mqsichangeproperties C1PSG01 -b httplistener -o HTTPListener -n enableSSLConnector -v true

#Associate a port for broker to serve HTTPS requests
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n port -v 7850
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n clientAuth -v false
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n sslProtocol -v SSL
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n keystoreFile -v /var/mqsi/verts/broker.jks

#Set Password
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n keystorePass -v password
mqsisetdbparms C1PSG01 -n brokerTruststore::password -u ignore -p password
mqsisetdbparms C1PSG01 -n brokerKeystore::password -u ignore -p password


#Change the JVM attributes
mqsichangeproperties C1PSG01 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1048576000
mqsichangeproperties C1PSG01 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728



###################################################### keystore

mqsichangeproperties C1PSG01 -o BrokerRegistry -n brokerKeystoreFile -v /var/mqsi/certs/broker.jks
mqsichangeproperties C1PSG01 -b httplistener -o HTTPListener -n enableSSLConnector -v true
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n port -v 7850
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n clientAuth -v false
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n sslProtocol -v SSL
mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n keystoreFile -v /var/mqsi/certs/broker.jks

mqsichangeproperties C1PSG01 -b httplistener -o HTTPSConnector -n keystorePass -v password
mqsisetdbparms C1PSG01 -n brokerKeystore::password -u ignore -p password
mqsichangeproperties C1PSG01 -o ComIbmJVMManager -n jvmMaxHeapSize -v 1048576000
mqsichangeproperties C1PSG01 -o ComIbmJVMManager -n jvmMinHeapSize -v 134217728




############################ trustore

mqsichangeproperties C1PSG01 -o BrokerRegistry -n brokerTruststoreFile -v /var/mqsi/certs/broker.jks
mqsisetdbparms C1PSG01 -n brokerTruststore::password -u ignore -p password




##########################




ip.addr==10.104.76.11 or ip.addr==10.104.140.11 or ip.addr==10.104.12.11 or ip.addr==141.1.1.1 or ip.addr==195.27.1.1 or ip.addr==195.27.1.2 


AES128-SHA


######################################statistics - Flow and Resource #############################################################

for each in `mqsilist ${1} | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`;
do 
for app in `mqsilist ${1} -e $each |grep -e BIP1276I| awk -F"'" {'print $2'}`;
if [ `mqsilist ${1} -e $each |grep -e BIP1275I| wc -l` == 0 ]; then
echo " $each has flows stopped , change trace is not run on these flows"
fi;
do 
for flow in `mqsilist ${1} -e $each -k $app | grep com.mns`;do
mqsichangeflowstats ${1} -s -e $each -k $app -f $flow -n basic -t none -o xml -c active
done;
done;
done


DEFINE QLOCAL('WMBSTATS.SNAPSHOT.STATISTICS') +
	DESCR('WMB Snapshot statistics target') +
	MAXDEPTH(100000) +
	REPLACE
	
DEFINE QLOCAL('WMBSTATS.RESOURCE.STATISTICS') +
	DESCR('WMB resource statistics target') +
	MAXDEPTH(100000) +
	REPLACE

DEFINE SUB('WMBSTATS.SNAPSHOT.SUBSCRIPTION') +
	DEST('WMBSTATS.SNAPSHOT.STATISTICS') +
	PSPROP(RFH2) +
	TOPICSTR('$SYS/Broker/+/StatisticsAccounting/#') +
	WSCHEMA(TOPIC)
	
DEFINE SUB('WMBSTATS.RESOURCE.SUBSCRIPTION') +
	DEST('WMBSTATS.RESOURCE.STATISTICS') +
	PSPROP(RFH2) +
	TOPICSTR('$SYS/Broker/+/ResourceStatistics/#') +
	WSCHEMA(TOPIC)
	
END	




mqsichangeresourcestats WMB01 -c active


mqsichangeflowstats WMB01 -s -g -j -c inactive
mqsichangeresourcestats WMB01 -c inactive


#######################################################################################################################
Amazon queues



BS_RETRIEVE_ORDER.TRANSITION


##########################mo71 SIT ############
http://p120663vaps5126.sit1.att.mnscorp.net/
P1276775
mns@12345

non prod jump ; 10.130.148.20
Jump Server:

10.130.148.20
p3009750/p3009750

ssh P3009750@logserver
DalalStreet



Filter queues with messages:

http://mo71.dr.att.mnscorp.net/mq/admin/Queues/P1EMBK01/?filter=cur (or)
http://mo71.dr.att.mnscorp.net/mq/admin/Queues/P1EMBK01/?filter=curdepth>0

list put & get time:

http://mo71.dr.att.mnscorp.net/mq/admin/qusage/P1EMBK01/?type=queue

browse messages:

http://mo71.dr.att.mnscorp.net/mq/admin/msgs/P1STC01/SYS_FAILURE?msgrange=1500

View message:

http://mo71.dr.att.mnscorp.net/mq/admin/msg/P1EMBK01/SYSTEM.DURABLE.SUBSCRIBER.QUEUE?pos=1;maxmsgsize=30000


huxc8123
p1201424
qwerty1234

##################


echo "dis ql(BS_RETRIEVE_ORDER.TRANSITION) PUT" | runmqsc S2MSBK01
echo "dis ql(SVC_RETRIEVE_AMAZONORDER_S2.PRQ) PUT" | runmqsc S2MSBK01
echo "dis ql(BTS_SVC_PROCESSAMAZONORDER.ERQ) PUT" | runmqsc S2MSBK01
echo "dis ql(SVC_RETRIEVE_AMAZONORDER_S2.PRS) PUT" | runmqsc S2MSBK01
echo "dis ql(BTS_SVC_RETRIEVE_AMAZONORDER_S2.ERS) PUT" | runmqsc S2MSBK01

echo "dis ql(POS_MS.ORD008_RETRIEVEORDER_REQ_V001.00.00.PPQ) PUT" | runmqsc S2MSBK01
echo "dis ql(POS_MS.ORD008_RETRIEVEORDER_REQ_V001.00.00.PPQ) PUT" | runmqsc S2MSBK01



export listg="mqsilist S2MSBK01 -e Generic_Bindings_01;mqsilist S2MSBK02 -e Generic_Bindings_01"
export listm="mqsilist S2MSBK01 -e MCFP;mqsilist S2MSBK02 -e MCFP"
export lista="mqsilist S2MSBK01 -e Amazon_01;mqsilist S2MSBK02 -e Amazon_01"
export stopres="mqsistopmsgflow S2MSBK01 -e MCFP -m RSFP_POS_Retrive_Transition_STERLING_Order_Resp;mqsistopmsgflow S2MSBK02 -e MCFP -m RSFP_POS_Retrive_Transition_STERLING_Order_Resp"
export startres="mqsistartmsgflow S2MSBK01 -e MCFP -m RSFP_POS_Retrive_Transition_STERLING_Order_Resp;mqsistartmsgflow S2MSBK02 -e MCFP -m RSFP_POS_Retrive_Transition_STERLING_Order_Resp"



 mqsistopmsgflow S2MSBK01 -e MCFP -m RSFP_POS_Retrive_Transition_STERLING_Order_Resp;mqsistopmsgflow S2MSBK02 -e MCFP -m RSFP_POS_Retrive_Transition_STERLING_Order_Resp
 
 
 
 
 
 ##################### 3 d enroll trace production
 
 mqsichangetrace -u $QM -e PSG06 -k PAY009_3D_ENROLL -f com.mns.ms.pay009.PAY009_3DSECURE_ENROLL_WCS_3DS_V001_00_00 -l debug -c 2000000 -r
mqsireadlog -u $QM -e PSG06 -o trace.xml;mqsiformatlog -i trace.xml -o trace.txt;mqsichangetrace $QM -u -e PSG06 -l none;


###################### master flow trace
mqsichangetrace -u $QM -e PSG02 -k PAY001_MASTER_FLOW -f com.mns.ms.pay001.PAY001_MASTER_FLOW_WCS_V001_00_00 -l debug -c 2000000 -r
mqsireadlog -u $QM -e PSG02 -o mtrace.xml;mqsiformatlog -i mtrace.xml -o mtrace.txt;mqsichangetrace $QM -u -e PSG02 -l none;





p1276775 - sujitha 


cert verify
openssl x509 -noout -modulus -in hlxc0mc005.unix.marksandspencercate.com.cer | openssl md5








################# xb60 password production ############### 
anit user : p1327254
pass : p1327254


MO71 -SIT
http://mo71.sit1.att.mnscorp.net/mq/admin/qusage/S2EMGW02/?type=queue

username:P3013145
password:mns@12345


################################################### MQCONFIG to check kernal http://www-01.ibm.com/support/docview.wss?uid=swg21271236&aid=1 ########################


#!/bin/sh
### NAME:      mqconfig
###
### VERSION:   3.7
###
### AUTHOR:    Justin Fries (justinf@us.ibm.com)
###
### COPYRIGHT:
### 
### (C) COPYRIGHT International Business Machines Corp. 2007-2013
### All Rights Reserved
### Licensed Materials - Property of IBM
###
### US Government Users Restricted Rights - Use, duplication or
### disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
###
### SYNOPSIS:
###
###  mqconfig -?
###  mqconfig -v Version
###  mqconfig -v Version [-p Project]...     (Solaris 10+ only)
###
###         -?: Display help for the mqconfig script
###         -v: WebSphere MQ version: 7.5, 7.1 or 7.0
###         -p: A project name to check
###
### DESCRIPTION:
###
### This script validates kernel parameters and other resource limits on
### AIX, HP-UX, Linux and Solaris systems against the recommendations in
### the WebSphere MQ documentation:
###
###   http://www.ibm.com/software/integration/wmq/library/
###
###
### CAVEATS/WARNINGS:
###
### Successful validation by this script only confirms your system meets
### the default recommendations.  If your system is heavily stressed, if
### you are running many queue managers at once, or if your system hosts
### other programs like databases which make heavy resource demands, you
### may need to increase your settings beyond the default values.
###
### Where possible this script issues a warning for parameters which are
### lower than recommended but sufficient for a small system.  Generally
### values at 75% or better of the recommended limit cause a warning and
### not a failure, but be aware WebSphere MQ can fail if it exhausts the
### resource on your system.  For further guidance see:
###
###   http://www.ibm.com/support/docview.wss?uid=swg21271236
###
### Certain limits are defined on a per-user basis, e.g. with the ulimit
### shell command.  These limits should be configured for the 'mqm' user
### so that queue managers started by mqm (directly, or using sudo) will
### run with the properly limits.  However, WebSphere MQ commands can be
### run by any user in the 'mqm' group, and sometimes by anybody.  Since
### the mqconfig script does not know what users will start WebSphere MQ
### processes on your system, it shows limits for the current user only.
### You can run mqconfig as mqm, as root, and again as any other user on
### the system to verify that those logins have the proper limits to run
### WebSphere MQ commands.
###
###
### RETURNED VALUES:
###
###   0  - Passed all tests
###   1  - Passed with warnings
###   2  - Failed some tests
###
###
### EXAMPLES:
###
### 1. To check your settings for WebSphere MQ 7.5:
###
###      mqconfig -v 7.5
###
###
### 2. To check the group.mqm and mqdev projects on Solaris 10+ for
###    WebSphere MQ 7.1:
###
###      mqconfig -p group.mqm -p mqdev -v 7.1
###
###
### 3. To get help with the mqconfig script:
###
###      mqconfig -?
###




### The Message function formats messages with caller-supplied values to
### fit an 80-character line and writes them to stdout.  In some Solaris
### shells the getopt builtin does not allow us to identify which option
### flag caused the error, so we suppress those messages.

  Message() {
    MSGID=$1; shift

    { case "${MSGID:=9999}" in
        1000) if [ -z "$1" ]; then
                return 0
              fi

              cat <<- :END
		Option -$1 requires an argument.
		:END
              ;;

        1001) if [ -z "$1" ]; then
                return 0
              fi

              cat <<- :END
		Option -$1 is not valid.
		:END
              ;;

        1002) cat <<- :END
		You must provide a WebSphere MQ version.
		:END
              ;;

        1003) cat <<- :END
		WebSphere MQ V$1 is not supported.
		:END
              ;;

        1004) cat <<- :END
		Unexpected parameters: $@
		:END
              ;;

        1005) cat <<- :END
		V3.7 analyzing $1 settings for WebSphere MQ V$2
		:END
              ;;

        1006) cat <<- :END
		This script does not support $@.
		:END
              ;;

        1007) cat <<- :END
		Project $1 does not exist.
		:END
              ;;

        1008) cat <<- :END
		No project given.  Analyzing $@.

		:END
              ;;

        1009) cat <<- :END
		WebSphere MQ V$1 does not exist.
		:END
              ;;

        1010) cat <<- :END
		WebSphere MQ V$1 does not support $2 $3.
		:END
              ;;

        1011) cat <<- :END
		WebSphere MQ V$1 is no longer supported by this script.
		Please download the mqconfig-old script from the IBM site in
		order to analyze a WebSphere MQ V6.0 or V5.3 system.
		:END
              ;;

        1012) cat <<- :END
		WebSphere MQ V7.0 requires AIX 5.3 Technology Level 4 or later,
		and at Technology Level 5 it requires Service Pack 2 or later,
		and at Technology Level 7 it requires Service Pack 1 or later.
		Please refer to the Systems Requirement page on the web for
		further details and current status.
		:END
              ;;

        1013) cat <<- :END
		WebSphere MQ V$1 requires AIX 6.1 Technology Level 5 or later.
		:END
              ;;

        1014) cat <<- :END
		You have a group.mqm project configured, but have started one or
		more queue managers under other projects $1.  Start WebSphere MQ
		as someone whose primary group is mqm, or use the newtask command
		to ensure queue managers run in the correct project.
		:END
              ;;

        1015) cat <<- :END
		You do not have a group.mqm project configured.  IBM recommends
		that you configure a group.mqm project with resource limits for
		WebSphere MQ, but you can run queue managers under other projects.
		If you plan to use a different project for WebSphere MQ, rerun
		mqconfig with the -p option to analyze that project.
		:END
              ;;

        1016) cat <<- :END
		The $1 program was not found on this system.  Please install
		$1 and try running mqconfig again.
		:END
              ;;

           *) cat <<- :END
		Cannot print message: $MSGID $@
		:END
              ;;
      esac } | env LANG=C tr -d '\t' | fmt -68 | {
        read LINE && printf "mqconfig: $LINE\n"
        while read LINE; do
          printf "          $LINE\n"
        done
    }

    return 0
  }


### The Error function prints a message to stderr, and optionally prints
### the message to stdout when stdout is redirected to a file.  Provided
### the shell supports the '-t' test, this ensures that IBM will receive
### a file which includes any errors reported to the user.

  Error() {
    Message "$@" >&2

    if [ -t 2 -a ! -t 1 ]; then
      Message "$@"
    fi

    return 0
  }


### Print the script syntax for this operating system to stderr.

  PrintSyntax() {
    printf "\n%s\n" "syntax:   mqconfig -?" >&2

    case "$OPSYS" in
      Solaris*) printf "%s\n" "          mqconfig -v Version [-p Project] ..." >&2
                ;;

             *) printf "%s\n" "          mqconfig -v Version" >&2
                ;;
    esac

    printf "\n          Version: 7.5, 7.1 or 7.0\n" >&2
    return 0
  }


### The PrintHelp function displays information about how mqconfig works
### and addresses frequently asked questions from users.  This method is
### invoked when a user runs 'mqconfig -?'.

  PrintHelp() {
    cat <<- :END
	Using mqconfig
	`PrintSyntax 2>&1 | sed 's/^/  /'`

	  The mqconfig script analyzes your AIX, HP-UX, Linux or Solaris system to make
	  sure its kernel paramaters and other settings match the values recommended by
	  IBM in the WebSphere MQ documentation.  For each parameter, mqconfig displays
	  the current value, the current resource usage where possible, the recommended
	  setting from IBM, and a PASS/WARN/FAIL grade.

	  The grade assigned to each setting is based on its proximity to the IBM value
	  and your resource usage.  For example, if the IBM recommended value is 10000,
	  a setting of 2000 will fail, 8000 will give a warning, and 10000 or more will
	  pass.  However, mqconfig will issue a warning if your system's resource usage
	  is high (typically 75% or more) even if your system meets the IBM recommended
	  value.  If your system is about to exhaust a resource (95% or more), mqconfig
	  will report that as a failure.  In such cases, you may need to choose a value
	  which exceeds the default IBM recommendation.


	User Limits

	  Certain resource limits affecting WebSphere MQ are user specific, and are set
	  using the ulimit shell command.  Even though WebSphere MQ effectively runs as
	  the mqm user, the resource limits applicable to the queue manager derive from
	  the shell of the user who starts it.  The mqconfig script displays the limits
	  for the current user only, so you should run mqconfig as mqm, or root, or any
	  other user who will start queue managers to ensure their resource limits will
	  not prevent the queue manager from running properly.


	Shell Options

	  The WebSphere MQ documentation warns of potential performance problems caused
	  by starting WebSphere MQ commands in a shell which runs background tasks at a
	  lower priority.  The mqconfig script will try to determine whether your shell
	  includes an option to reduce the priority of background processes, and if so,
	  it will show the current default.  If mqconfig identifies a problem with your
	  shell options, you can change them in your profile.  For example, 'ksh' users
	  can add the line 'set +o bgnice' to their profile to avoid this issue.


	Planning for Heavy Workloads

	  WebSphere MQ resource usage depends on how heavily you are using WebSphere MQ
	  including the number of channels, the number of clients, the number of queues
	  and messages on them.  A single busy queue manager may use far more resources
	  than ten test queue managers with light usage.  If you are using WebSphere MQ
	  very heavily, you should run mqconfig while processing your workload in order
	  to ensure that WebSphere MQ is not about to exhaust any resources.  It may be
	  necessary to increase your resource limits beyond the defaults recommended by
	  IBM in order to process heavy workloads.

	:END

    if [ $OPSYS = Solaris ]; then
      cat <<- :END

	Solaris Projects

	  Solaris does not have a single global set of kernel parameters.  Instead, you
	  must create projects, each with its own resource limits.  IBM recommends that
	  you create a project called group.mqm for WebSphere MQ, but you can choose to
	  run WebSphere MQ under any projects you wish.  Refer to the documentation for
	  the newtask command to see how to run WebSphere MQ under the right project.

	  Run mqconfig with the -p option to indicate which projects which are used for
	  running WebSphere MQ queue managers.  You can repeat the -p option to provide
	  a list of projects for mqconfig to analyze.  If you do not list any projects,
	  mqconfig will analyze the group.mqm project and any other projects which show
	  WebSphere MQ queue manager activity.  If there are no such projects, mqconfig
	  will analyze the current project.  If mqconfig gives warnings or failures for
	  project not intended for WebSphere MQ, rerun mqconfig with the '-p' option.

	:END
    fi

    return 0
  }


### The Sum function is a helper to sum up columns of numbers, while the
### Trim function removes leading and trailing space from values (useful
### when dealing with the output from 'wc -l').

  Sum() {
    SUM=0

    while read NUM ; do
      SUM=`expr $SUM + $NUM`
    done

    printf "$SUM"
  }


  Trim() {
    sed -e 's/^[ 	]*//' -e 's/[ 	]*$//'
  }


### Determine the current usage of those kernel parameters for which the
### operating system provides a method.  These results will be reflected
### in the output as a percentage of resources consumed.  For the number
### of processes per user we look at the number of processes running for
### the current user and any others with active queue manager processes,
### except for root, and print the highest value.  Although WebSphere MQ
### processes have an effective user of mqm, they count against the real
### user for accounting purposes.

  GetResourceUsage() {
    PARAM=$1

    case $OPSYS:$PARAM in
            Linux:file-max) GetLinuxValue fs.file-nr sys/fs/file-nr | awk '{print $1}'
                            ;;

      *:maxup*|Linux:nproc) { for USER in `id -un 2>/dev/null` `env UNIX95=1 ps -e -o user= -o comm= |
                               grep -E '[a]mqzxma0|[a]mqzmgr0' | awk '{print $1}' | sort -u`; do

                                if [ $USER != root ]; then
                                  env UNIX95=1 ps -o pid= -u $USER | wc -l
                                fi
                              done

                              printf "0\n"
                            } | sort -rn | head -n 1 | Trim
                            ;;

       Solaris:max-sem-ids) ipcs -sJ 2>/dev/null | grep -w $PROJECT | grep '^s' | wc -l | Trim
                            ;;

       Solaris:max-shm-ids) ipcs -mJ 2>/dev/null | grep -w $PROJECT | grep '^m' | wc -l | Trim
                            ;;

              Linux:semmni) ipcs -s 2>/dev/null | grep '^0x' | wc -l | Trim
                            ;;

         *:semmni|*:SEMMNI) ipcs -s 2>/dev/null | grep '^s' | wc -l | Trim
                            ;;

              Linux:semmns) ipcs -s 2>/dev/null | grep '^0x' | awk '{print $5}' | Sum
                            ;;

         *:semmns|*:SEMMNS) ipcs -sa 2>/dev/null | grep '^s' | sed 's/^./& /' |
                            awk '{print $9}' | Sum
                            ;;

              Linux:shmall) ipcs -u 2>/dev/null | grep 'pages allocated' | awk '{print $3}'
                            ;;

              Linux:shmmni) ipcs -m 2>/dev/null | grep '^0x' | wc -l | Trim
                            ;;

         *:shmmni|*:SHMMNI) ipcs -m 2>/dev/null | grep '^m' | wc -l | Trim
                            ;;
    esac
  }


### The DisplayLimit function compares the current value of an operating
### system parameter to the limit recommended by IBM, and where possible
### shows the current resource usage.  In addition to the IBM limit this
### function accepts an optional warning limit, expressed as an absolute
### value or as a percentage of the IBM limit.  Values which do not meet
### the IBM limit but are reasonably close will receive a warning.  When
### the warning limit is greater than the IBM limit, the parameter needs
### a low value; Simply negating all the values allows the same logic to
### calculate the grade.  We use bc to perform all comparisons and math,
### except for unknown or unlimited values, since it is easy to overflow
### the arithmetic precision of the shell.  After printing the parameter
### name, value, current usage (where possible), and the IBM recommended
### limit, this function assigns a grade based on these basic rules:
###
###  PASS: Meets or exceeds the IBM value and usage is less than 75%
###  WARN: Limit approaches the IBM value or usage is between 75-95%
###  FAIL: Limit is less than the IBM value or its usage exceeds 95%

  DisplayLimit() {
    PARAM=$1
    UNITS=$2
    VALUE=$3
    LIMIT=$4
    ALERT=$5

    CURRENT=`GetResourceUsage $PARAM`
    if [ -z "$LIMIT" ]; then
      return
    elif [ -z "$VALUE" ]; then
      return
    elif [ "$UNITS" = "$LITERAL" ]; then
      printf "  %-19s %-34s %-17s %b\n" "$PARAM" "$VALUE" "IBM:$LIMIT" "$ALERT"
      return
    elif [ "$LIMIT" = "$AUTO" ]; then
      printf "  %-19s %-34s %-17s %b\n" "$PARAM" "${CURRENT:=$UNKNOWN} $UNITS" "[Auto Tuned]" $PASS
      return
    elif [ -n "$CURRENT" -a "$VALUE" != "$UNKNOWN" -a "$VALUE" != "$UNLIMITED" ]; then
      PERCENT=`printf "$CURRENT * 100 / $VALUE\n" | bc 2>/dev/null`
      printf "  %-19s %-26s %-7s " "$PARAM" "$CURRENT of $VALUE $UNITS" "(${PERCENT}%)"
    else
      PERCENT=0
      printf "  %-19s %-34s " "$PARAM" "$VALUE $UNITS"
    fi

    case ${ALERT:=$LIMIT} in
      *%) ALERT=`printf "%s" "$ALERT" | env LANG=C tr -d %`
          ALERT=`printf "$LIMIT * $ALERT / 100\n" | env LANG=C tr -d % | bc 2>/dev/null`
          ;;
    esac

    if [ "$LIMIT" != "$UNLIMITED" -a -n "`printf \"if ($ALERT > $LIMIT) 1\n\" | bc 2>/dev/null`" ]; then
      if [ $LIMIT -eq 1 ]; then
        printf "%-17s " "IBM=$LIMIT"
      else
        printf "%-17s " "IBM<=$LIMIT"
      fi

      LIMIT=-$LIMIT; ALERT=-$ALERT; VALUE=-$VALUE
    else
      printf "%-17s " "IBM>=$LIMIT"
    fi

    if [ "$VALUE" = "$UNLIMITED" ]; then
      printf "%b\n" $PASS
    elif [ "$VALUE" = "$UNKNOWN" -o "$LIMIT" = "$UNLIMITED" ]; then
      WARNINGS=`expr $WARNINGS + 1`
      printf "%b\n" $WARN
    elif [ -n "`printf \"if ($VALUE < $ALERT) 1\n\" | bc 2>/dev/null`" -o $PERCENT -gt 95 ]; then
      FAILURES=`expr $FAILURES + 1`
      printf "%b\n" $FAIL
    elif [ -n "`printf \"if ($VALUE >= $LIMIT) 1\n\" | bc 2>/dev/null`" -a $PERCENT -lt 75 ]; then
      printf "%b\n" $PASS
    else
      WARNINGS=`expr $WARNINGS + 1`
      printf "%b\n" $WARN
    fi

    return
  }


### The WebSphere MQ documentation notes that shells with some notion of
### bgnice (reducing the priority of background processes) can introduce
### performance problems.  When a user starts commmands like runmqlsr in
### the background ('runmqlsr -m QM -t tcp -p 1414 1>/dev/null 2>&1 &'),
### those commands may hold WebSphere MQ locks longer than usual as they
### are runnning at reduced priority.  It is impossible to test the user
### shell since mqconfig is running in its own shell (/bin/sh).  However
### we can determine which shell is the parent to mqconfig and use it to
### determine the default value of bgnice or similar settings.  The test
### is not a perfect one, so any failure will at most provoke a warning.
### Shells with no notion of bgnice will not generate any output at all.
### From my testing, Bourne and bash shells have no bgnice, while shells
### based on Korn (ksh, pdksh) do.  The zsh shell has a nobgnice option,
### which is the exact inverse of bgnice.  When this function detects an
### option like bgnice, it calls DisplayLimit passing literal values for
### the current and IBM values as opposed to numeric values, and a score
### for the current setting.

  CheckShellDefaultOptions() {
    PSHID=`env UNIX95=1 ps -o ppid= -p $$ 2>/dev/null`
    PSHELL=`env UNIX95=1 ps -o comm= -p $PSHID 2>/dev/null | sed 's/^-*//'`
    OLDIFS="$IFS"
    IFS='
'

    for SETTING in `$PSHELL -ic "set -o" 2>/dev/null | grep bgnice`; do
      case $SETTING in
        nobgnice*off) printf "\nShell Default Options (%s)\n" "`id -un 2>/dev/null`"
                      DisplayLimit "$PSHELL" $LITERAL "nobgnice:off" on $WARN
                      ;;

         nobgnice*on) printf "\nShell Default Options (%s)\n" "`id -un 2>/dev/null`"
                      DisplayLimit "$PSHELL" $LITERAL "nobgnice:on" on $PASS
                      ;;

          bgnice*off) printf "\nShell Default Options (%s)\n" "`id -un 2>/dev/null`"
                      DisplayLimit "$PSHELL" $LITERAL "bgnice:off" off $PASS
                      ;;

           bgnice*on) printf "\nShell Default Options (%s)\n" "`id -un 2>/dev/null`"
                      DisplayLimit "$PSHELL" $LITERAL "bgnice:on" off $WARN
                      ;;
      esac
    done

    IFS="$OLDIFS"
  }


### AIX is special in that the kernel has no parameters for System V IPC
### resources; Instead, AIX supports such large values that WebSphere MQ
### cannot exhaust them, even with databases and other IPC users running
### on the same system.  This function prints the current usage of these
### parameters before checking other settings on the system.  Given that
### there are operating system HIPER APARs which affect WebSphere MQ, we
### also print their installation status on affected levels of AIX.  The
### instfix command may lack the data to accurately report the status of
### the APARs, so instead we look at the affected LPP versions:
###
###   AIX V7.1 TL0: bos.mp64 7.1.0.0 - 7.1.0.1 are vulnerable
###                 bos.mp64 7.1.0.2 and later include IZ84576
###            TL1: bos.mp64 7.1.1.0 and later are not vulnerable
###
###   AIX V6.1 TL6: bos.mp64 6.1.6.0 - 6.1.6.1 are vulnerable
###                 bos.mp64 6.1.6.2 - 6.1.6.14 include IZ84729
###                 bos.mp64 6.1.6.15 and later include IZ85204
###            TL7: bos.mp64 6.1.7.0 and later are not vulerable
###
### AIX customers often report data conversion problems when they do not
### have the necessary AIX Unicode conversion LPPs installed.  There are
### six conversion LPPs right now, of which three are always checked and
### the remaining ones may be checked based on the current locale.

  AnalyzeAIX() {
    IBM_MAXUPROC=1024
    IBM_NOFILES_HARD=10240
    IBM_NOFILES_SOFT=10240
    IBM_DATA_SOFT=$UNLIMITED
    IBM_STACK_SOFT=$UNLIMITED

    CUR_MAXUPROC=`lsattr -El sys0 -a maxuproc 2>/dev/null | awk '{print $2}'`
    CUR_NOFILES_HARD=`ulimit -Hn 2>/dev/null`
    CUR_NOFILES_SOFT=`ulimit -Sn 2>/dev/null`
    CUR_DATA_SOFT=`ulimit -Sd 2>/dev/null`
    CUR_STACK_SOFT=`ulimit -Ss 2>/dev/null`

    ABSTRACT="Applications using user trace hooks fail when trace is enabled"

    case "`lslpp -qcL bos.mp64 2>/dev/null | awk -F: '{print $3}'`" in
       7.1.0.[0-1]) printf "\nOperating System HIPER APARs\n"
                    printf "  %7s: %-63s %b\n" IZ84576 "$ABSTRACT" $FAIL
                    ;;

           7.1.0.*) printf "\nOperating System HIPER APARs\n"
                    printf "  %7s: %-63s %b\n" IZ84576 "$ABSTRACT" $PASS
                    ;;

       6.1.6.[0-1]) printf "\nOperating System HIPER APARs\n"
                    printf "  %7s: %-63s %b\n" IZ84729 "$ABSTRACT" $FAIL
                    ;;

       6.1.6.[2-9]) printf "\nOperating System HIPER APARs\n"
                    printf "  %7s: %-63s %b\n" IZ84729 "$ABSTRACT" $PASS
                    ;;

      6.1.6.1[0-4]) printf "\nOperating System HIPER APARs\n"
                    printf "  %7s: %-63s %b\n" IZ84729 "$ABSTRACT" $PASS
                    ;;

           6.1.6.*) printf "\nOperating System HIPER APARs\n"
                    printf "  %7s: %-63s %b\n" IZ85204 "$ABSTRACT" $PASS
                    ;;
    esac

    printf "\nSystem V Semaphores\n"
    DisplayLimit semmni                sets        0                       "$AUTO"
    DisplayLimit semmns                semaphores  0                       "$AUTO"

    printf "\nSystem V Shared Memory\n"
    DisplayLimit shmmni                sets        0                       "$AUTO"

    printf "\nSystem Settings\n"
    DisplayLimit maxuproc              processes  "$CUR_MAXUPROC"          "$IBM_MAXUPROC"       50%

    printf "\nUnicode Filesets used by WebSphere MQ Data Conversion\n"
    UCSLPPS="bos.iconv.ucs.com bos.iconv.ucs.ebcdic bos.iconv.ucs.pc"

    case "$LANG" in
            ZH_CN*|Zh_CN*) UCSLPPS="$UCSLPPS bos.iconv.ucs.ZH_CN bos.iconv.ucs.Zh_CN"
                           ;;

      Et_EE*|Lt_LT*|Lv_LV) UCSLPPS="bos.iconv.ucs.baltic $UCSLPPS"
                           ;;
    esac

    for LPPNAME in $UCSLPPS; do
      LPPSTAT=$PASS; lslpp -L $LPPNAME 1>/dev/null 2>&1 || LPPSTAT=$WARN

      case $LPPNAME in
        bos.iconv.ucs.baltic) LPPDESC="Unicode Converters for Baltic Countries"
                              ;;

           bos.iconv.ucs.com) LPPDESC="Unicode Converters for AIX Code Sets/Fonts"
                              ;;

        bos.iconv.ucs.ebcdic) LPPDESC="Unicode Converters for EBCDIC Code Sets"
                              ;;

            bos.iconv.ucs.pc) LPPDESC="Unicode Converters for Additional PC Code Sets"
                              ;;

         bos.iconv.ucs.ZH_CN) LPPDESC="Unicode Converters for Simplified Chinese (UTF)"
                              ;;

         bos.iconv.ucs.Zh_CN) LPPDESC="Unicode Converters for Simplified Chinese (GBK)"
                              ;;
      esac

      printf "  %-20.20s  %-49.49s  %b\n" $LPPNAME "$LPPDESC" $LPPSTAT
    done

    printf "\nCurrent User Limits (%s)\n" "`id -un 2>/dev/null`"
    DisplayLimit "nofiles      (-Hn)"  files       "$CUR_NOFILES_HARD"     "$IBM_NOFILES_HARD"   75%
    DisplayLimit "nofiles      (-Sn)"  files       "$CUR_NOFILES_SOFT"     "$IBM_NOFILES_SOFT"   75%
    DisplayLimit "data         (-Sd)"  kbytes      "$CUR_DATA_SOFT"        "$IBM_DATA_SOFT"      75%
    DisplayLimit "stack        (-Ss)"  kbytes      "$CUR_STACK_SOFT"       "$IBM_STACK_SOFT"     75%

    CheckShellDefaultOptions
  }



### HP-UX 11 provides the kctune command for querying and setting kernel
### parameters, or on earlier releases the kmtune command.  As the value
### may be in hex or octal, use bc to normalize it to decimal.

  GetHPUXValue() {
    PARAM=$1
    VALUE=

    if [ -x /usr/sbin/kctune ]; then
      VALUE=`/usr/sbin/kctune $PARAM 2>/dev/null | grep "^$PARAM" |
        awk '{print $2}' | env LANG=C tr [:lower:] [:upper:]`
    elif [ -x /usr/sbin/kmtune ]; then
      VALUE=`/usr/sbin/kmtune -q $PARAM 2>/dev/null | grep "^$PARAM" |
        awk '{print $2}' | env LANG=C tr [:lower:] [:upper:]`
    fi

    case $VALUE in
      0[xX]*) printf "ibase=16; %s\n" "$VALUE" | sed 's/0[xX]//' | bc 2>/dev/null
              ;;

          0*) printf "ibase=8;  %s\b" "$VALUE" | bc 2>/dev/null
              ;;

           *) printf "%s" "$VALUE"
              ;;
    esac
  }


### Analyze the HP-UX kernel parameter settings based on the values from
### the WebSphere MQ Inforamtion Center.  The 'nfile' parameter does not
### apply to HP-UX 11.31 or later.  Make sure the WebSphere MQ additions
### to the HP-UX data conversion files are in place; otherwise alert the
### user to add them again by running 'reset_iconv_table' as root.

  AnalyzeHPUX() {
    IBM_SEMMNI=1024
    IBM_SEMMNS=16384
    IBM_SEMMSL=100
    IBM_SEMMSL_MIN=64
    IBM_SEMMNU=16384
    IBM_SEMUME=256
    IBM_SEMAEM=16384
    IBM_SEMAEM_MIN=1
    IBM_SEMVMX=32767
    IBM_SEMVMX_MIN=1
    IBM_SHMMNI=1024
    IBM_SHMSEG=1024
    IBM_SHMMAX=536870912
    IBM_SHMMAX_MIN=33554432
    IBM_MAXUPRC=1024
    IBM_MAX_THREAD_PROC=66
    IBM_MAXFILES=10000
    IBM_MAXFILES_LIM=10000
    IBM_NFILE=20000
    IBM_MAXDSIZ_MIN=1073741824
    IBM_MAXDSIZ64_MIN=1073741824
    IBM_MAXSSIZ_MIN=8388608
    IBM_MAXSSIZ64_MIN=8388608

    CUR_SHMMNI=`GetHPUXValue shmmni`
    CUR_SHMSEG=`GetHPUXValue shmseg`
    CUR_SHMMAX=`GetHPUXValue shmmax`
    CUR_SEMMNI=`GetHPUXValue semmni`
    CUR_SEMMNS=`GetHPUXValue semmns`
    CUR_SEMMSL=`GetHPUXValue semmsl`
    CUR_SEMMNU=`GetHPUXValue semmnu`
    CUR_SEMUME=`GetHPUXValue semume`
    CUR_SEMAEM=`GetHPUXValue semaem`
    CUR_SEMVMX=`GetHPUXValue semvmx`
    CUR_MAXUPRC=`GetHPUXValue maxuprc`
    CUR_MAX_THREAD_PROC=`GetHPUXValue max_thread_proc`
    CUR_MAXFILES=`GetHPUXValue maxfiles`
    CUR_MAXFILES_LIM=`GetHPUXValue maxfiles_lim`
    CUR_MAXDSIZ=`GetHPUXValue maxdsiz`
    CUR_MAXDSIZ64=`GetHPUXValue maxdsiz_64bit`
    CUR_MAXSSIZ=`GetHPUXValue maxssiz`
    CUR_MAXSSIZ64=`GetHPUXValue maxssiz_64bit`
    CUR_NFILE=`GetHPUXValue nfile`

    printf "\nSystem V Semaphores\n"
    DisplayLimit semmni           sets        "$CUR_SEMMNI"           "$IBM_SEMMNI"           75% 
    DisplayLimit semmns           semaphores  "$CUR_SEMMNS"           "$IBM_SEMMNS"           75%
    DisplayLimit semmsl           semaphores  "$CUR_SEMMSL"           "$IBM_SEMMSL"           "$IBM_SEMMSL_MIN"
    DisplayLimit semmnu           undos       "$CUR_SEMMNU"           "$IBM_SEMMNU"           75%
    DisplayLimit semume           undos       "$CUR_SEMUME"           "$IBM_SEMUME"
    DisplayLimit semaem           units       "$CUR_SEMAEM"           "$IBM_SEMAEM"           "$IBM_SEMAEM_MIN"
    DisplayLimit semvmx           units       "$CUR_SEMVMX"           "$IBM_SEMVMX"           "$IBM_SEMVMX_MIN"

    printf "\nSystem V Shared Memory\n"
    DisplayLimit shmmni           sets        "$CUR_SHMMNI"           "$IBM_SHMMNI"           75%
    DisplayLimit shmmax           bytes       "$CUR_SHMMAX"           "$IBM_SHMMAX"           "$IBM_SHMMAX_MIN"
    DisplayLimit shmseg           sets        "$CUR_SHMSEG"           "$IBM_SHMSEG"           75%

    printf "\nSystem Settings\n"
    DisplayLimit maxuprc          processes   "$CUR_MAXUPRC"          "$IBM_MAXUPRC"          50%
    DisplayLimit max_thread_proc  threads     "$CUR_MAX_THREAD_PROC"  "$IBM_MAX_THREAD_PROC"
    DisplayLimit maxdsiz          bytes       "$CUR_MAXDSIZ"          "$IBM_MAXDSIZ_MIN"      60%
    DisplayLimit maxdsiz_64bit    bytes       "$CUR_MAXDSIZ64"        "$IBM_MAXDSIZ64_MIN"
    DisplayLimit maxssiz          bytes       "$CUR_MAXSSIZ"          "$IBM_MAXSSIZ_MIN"
    DisplayLimit maxssiz_64bit    bytes       "$CUR_MAXSSIZ64"        "$IBM_MAXSSIZ64_MIN"
    DisplayLimit maxfiles         files       "$CUR_MAXFILES"         "$IBM_MAXFILES"         75%
    DisplayLimit maxfiles_lim     files       "$CUR_MAXFILES_LIM"     "$IBM_MAXFILES_LIM"     75%

    if [ $OSREL -lt 31 ]; then
      DisplayLimit nfile          files       "$CUR_NFILE"            "$IBM_NFILE"            75%
    fi

    printf "\nSystem Configuration Files used by WebSphere MQ Data Conversion\n"
    ICONVFAIL=0

    case $ARCH in
      PA-RISC) ICONVFILES="/usr/lib/nls/iconv/config.iconv"
               ;;

      Itanium) ICONVFILES="/usr/lib/nls/iconv/config.iconv"
               ICONVFILES="$ICONVFILES /usr/lib/nls/iconv/hpux32/config.iconv"
               ICONVFILES="$ICONVFILES /usr/lib/nls/iconv/hpux64/config.iconv"
               ;;
    esac

    for ICONVFILE in $ICONVFILES; do
      ICONVSTAT=$FAIL
      grep -q '^#StartMQSeries' $ICONVFILE 2>/dev/null &&
        grep -q '^#EndMQSeries' $ICONVFILE 2>/dev/null && ICONVSTAT=$PASS

      if [ $ICONVSTAT = $PASS ]; then
        printf "  %-53.53s  %-16.16s  %b\n" "$ICONVFILE" "Configured" $PASS
      else
        printf "  %-53.53s  %-16.16s  %b\n" "$ICONVFILE" "Not Configured" $FAIL
        ICONVFAIL=`expr $ICONVFAIL + 1`
      fi
    done

    if [ $ICONVFAIL -gt 0 ]; then
      printf "> Run the WebSphere MQ 'reset_iconv_table' command as root to correct this!\n"
    fi

    CheckShellDefaultOptions
  }


### Most Linux systems today provide the sysctl program for querying the
### value of kernel parameters, but if that is not available they may be
### read from the proc filesystem.  The value string may contain several
### fields, so it is printed as a string for the caller to dissect.

  GetLinuxValue() {
    PARAM=$1
    PPATH=$2
    VALUE=

    if [ -x /sbin/sysctl ]; then
      VALUE=`/sbin/sysctl -n $PARAM 2>/dev/null`
    fi

    if [ -z "$VALUE" -a -n "$PROCPATH" ]; then
      PROC=`mount -t proc 2>/dev/null | awk '{print $3}'`
      if [ -n "$PROC" -a -r "$PROC/$PROCPATH" ]; then
        VALUE=`cat "$PROC/$PROCPATH"`
      fi
    fi

    printf "$VALUE"
  }


### Analyze the Linux kernel parameter settings based on the values from
### the WebSphere MQ Inforamtion Center.  The documentation does list an
### msgmni value, but that is an error and we do not query msgmni here.

  AnalyzeLinux() {
    IBM_SEMMSL=500
    IBM_SEMMNS=256000
    IBM_SEMOPM=250
    IBM_SEMMNI=1024
    IBM_SHMMNI=4096
    IBM_SHMALL=2097152
    IBM_SHMMAX=268435456
    IBM_SHMMAX_MIN=33554432
    IBM_KEEPALIVE=300
    IBM_KEEPALIVE_MAX=600
    IBM_FILEMAX=524288
    IBM_NOFILE_HARD=10240
    IBM_NOFILE_SOFT=10240
    IBM_NPROC_HARD=4096
    IBM_NPROC_SOFT=4096

    CUR_SHMMNI=`GetLinuxValue kernel.shmmni sys/kernel/shmmni`
    CUR_SHMALL=`GetLinuxValue kernel.shmall sys/kernel/shmall`
    CUR_SHMMAX=`GetLinuxValue kernel.shmmax sys/kernel/shmmax`
    CUR_SEM=`GetLinuxValue kernel.sem sys/kernel/sem`
    CUR_SEMMSL=`printf "%s" "$CUR_SEM" | awk '{print $1}'`
    CUR_SEMMNS=`printf "%s" "$CUR_SEM" | awk '{print $2}'`
    CUR_SEMOPM=`printf "%s" "$CUR_SEM" | awk '{print $3}'`
    CUR_SEMMNI=`printf "%s" "$CUR_SEM" | awk '{print $4}'`
    CUR_FILEMAX=`GetLinuxValue fs.file-max sys/fs/file-max`
    CUR_KEEPALIVE=`GetLinuxValue net.ipv4.tcp_keepalive_time`
    CUR_NOFILE_HARD=`ulimit -Hn 2>/dev/null`
    CUR_NOFILE_SOFT=`ulimit -Sn 2>/dev/null`
    CUR_NPROC_HARD=`ulimit -Hu 2>/dev/null`
    CUR_NPROC_SOFT=`ulimit -Su 2>/dev/null`

    printf "\nSystem V Semaphores\n"
    DisplayLimit "semmsl     (sem:1)"  semaphores  "$CUR_SEMMSL"       "$IBM_SEMMSL"
    DisplayLimit "semmns     (sem:2)"  semaphores  "$CUR_SEMMNS"       "$IBM_SEMMNS"       75%
    DisplayLimit "semopm     (sem:3)"  operations  "$CUR_SEMOPM"       "$IBM_SEMOPM"
    DisplayLimit "semmni     (sem:4)"  sets        "$CUR_SEMMNI"       "$IBM_SEMMNI"       75%

    printf "\nSystem V Shared Memory\n"
    DisplayLimit shmmax                bytes       "$CUR_SHMMAX"       "$IBM_SHMMAX"       "$IBM_SHMMAX_MIN"
    DisplayLimit shmmni                sets        "$CUR_SHMMNI"       "$IBM_SHMMNI"       75%
    DisplayLimit shmall                pages       "$CUR_SHMALL"       "$IBM_SHMALL"       50%

    printf "\nSystem Settings\n"
    DisplayLimit file-max              files       "$CUR_FILEMAX"      "$IBM_FILEMAX"      75%
    DisplayLimit tcp_keepalive_time    seconds     "$CUR_KEEPALIVE"    "$IBM_KEEPALIVE"    "$IBM_KEEPALIVE_MAX"

    printf "\nCurrent User Limits (%s)\n" "`id -un 2>/dev/null`"
    DisplayLimit "nofile       (-Hn)"  files       "$CUR_NOFILE_HARD"  "$IBM_NOFILE_HARD"  75%
    DisplayLimit "nofile       (-Sn)"  files       "$CUR_NOFILE_SOFT"  "$IBM_NOFILE_SOFT"  75%
    DisplayLimit "nproc        (-Hu)"  processes   "$CUR_NPROC_HARD"   "$IBM_NPROC_HARD"   75%
    DisplayLimit "nproc        (-Su)"  processes   "$CUR_NPROC_SOFT"   "$IBM_NPROC_SOFT"   75%

    CheckShellDefaultOptions
  }


### Determine the value of a Solaris 9 kernel parameter using the sysdef
### output which was gathered earlier, for performance reasons.

  GetSolarisV9Value() {
    PARAM=$1

    printf "%s" "$CUR_SYSDEF" | grep "($PARAM)" | awk '{print $1}'
  }


### Analyze Solaris 9 kernel parameter settings based on the values from
### the WebSphere MQ documentation.  WebSphere MQ 7.1 and later requires
### Solaris 10 or later.

  AnalyzeSolarisV9() {
    IBM_SEMMNI=1024
    IBM_SEMMNS=16384
    IBM_SEMMSL=100
    IBM_SEMMSL_MIN=64
    IBM_SEMMNU=16384
    IBM_SEMUME=256
    IBM_SEMAEM=16384
    IBM_SEMAEM_MIN=1
    IBM_SEMVMX=32767
    IBM_SEMVMX_MIN=1
    IBM_SEMOPM=100
    IBM_SEMOPM_MIN=5
    IBM_SEMMAP=`expr $IBM_SEMMNI + 2`
    IBM_SHMMNI=1024
    IBM_SHMSEG=1024
    IBM_SHMMAX=4294967295
    IBM_SHMMAX_MIN=33554432
    IBM_SHMMIN=1
    IBM_SHMMIN_MAX=1000
    IBM_MAXUPRC=1024
    IBM_FD_CUR=10000
    IBM_FD_MAX=10000

    CUR_SYSDEF=`/usr/sbin/sysdef -i 2>/dev/null`
    CUR_SHMMNI=`GetSolarisV9Value SHMMNI`
    CUR_SHMSEG=`GetSolarisV9Value SHMSEG`
    CUR_SHMMAX=`GetSolarisV9Value SHMMAX`
    CUR_SHMMIN=`GetSolarisV9Value SHMMIN`
    CUR_SEMMNI=`GetSolarisV9Value SEMMNI`
    CUR_SEMMNS=`GetSolarisV9Value SEMMNS`
    CUR_SEMMSL=`GetSolarisV9Value SEMMSL`
    CUR_SEMMNU=`GetSolarisV9Value SEMMNU`
    CUR_SEMUME=`GetSolarisV9Value SEMUME`
    CUR_SEMAEM=`GetSolarisV9Value SEMAEM`
    CUR_SEMVMX=`GetSolarisV9Value SEMVMX`
    CUR_SEMOPM=`GetSolarisV9Value SEMOPM`
    CUR_MAXUPRC=`GetSolarisV9Value v.v_maxup`
    CUR_FD_CUR=`ulimit -Sn 2>/dev/null`
    CUR_FD_MAX=`ulimit -Hn 2>/dev/null`

    printf "\nSystem V Semaphores\n"
    DisplayLimit SEMMNI                sets         "$CUR_SEMMNI"          "$IBM_SEMMNI"  75%
    DisplayLimit SEMMNS                semaphores   "$CUR_SEMMNS"          "$IBM_SEMMNS"  75%
    DisplayLimit SEMMSL                semaphores   "$CUR_SEMMSL"          "$IBM_SEMMSL"  "$IBM_SEMMSL_MIN"
    DisplayLimit SEMMNU                undos        "$CUR_SEMMNU"          "$IBM_SEMMNU"  75%
    DisplayLimit SEMUME                undos        "$CUR_SEMUME"          "$IBM_SEMUME"
    DisplayLimit SEMAEM                units        "$CUR_SEMAEM"          "$IBM_SEMAEM"  "$IBM_SEMAEM_MIN"
    DisplayLimit SEMVMX                units        "$CUR_SEMVMX"          "$IBM_SEMVMX"  "$IBM_SEMVMX_MIN"
    DisplayLimit SEMOPM                operations   "$CUR_SEMOPM"          "$IBM_SEMOPM"  "$IBM_SEMOPM_MIN"

    printf "\nSystem V Shared Memory\n"
    DisplayLimit SHMMNI                sets         "$CUR_SHMMNI"          "$IBM_SHMMNI"  75%
    DisplayLimit SHMMAX                bytes        "$CUR_SHMMAX"          "$IBM_SHMMAX"  "$IBM_SHMMAX_MIN"
    DisplayLimit SHMSEG                sets         "$CUR_SHMSEG"          "$IBM_SHMSEG"
    DisplayLimit SHMMIN                bytes        "$CUR_SHMMIN"          "$IBM_SHMMIN"  "$IBM_SHMMIN_MAX"

    printf "\nSystem Settings\n"
    DisplayLimit maxuprc               processes    "$CUR_MAXUPRC"         "$IBM_MAXUPRC" 50%

    printf "\nCurrent User Limits (%s)\n" "`id -un 2>/dev/null`"
    DisplayLimit "rlim_fd_max  (-Hn)"  descriptors  "${CUR_FD_MAX:=1024}"  "$IBM_FD_MAX"  75%
    DisplayLimit "rlim_fd_cur  (-Sn)"  descriptors  "${CUR_FD_CUR:=256}"   "$IBM_FD_CUR"  75%

    CheckShellDefaultOptions
  }


### In Solaris 10 and later, resource limits are managed using projects.
### Since the prctl command can't show limits of an inactive project use
### the projects command to query the project settings.  Fill in Solaris
### default values for any limit that is not explicitly set.

  GetSolarisValue() {
    PARAM=$1

    VALUE=`projects -l $PROJECT | grep "${PARAM}=" | sed 's/^.*=//' |
           env LANG=C tr ',' ' ' | awk '{print $2}'`

    if [ -z "$VALUE" ]; then
      case $PARAM in
        process.max-file-descriptor) VALUE=256
                                     ;;

                project.max-shm-ids) VALUE=128
                                     ;;

             project.max-shm-memory) VALUE=`/usr/sbin/prtconf |
                                       grep '^Memory size:' |
                                       sed -e 's/Megabytes/\* 1048576/' \
                                           -e 's/Gigabytes/\* 1073741824/' \
                                           -e 's/Terabytes/\* 1099511627776/' \
                                           -e 's/.*://' -e 's/$/ \/ 4/' | bc 2>/dev/null`
                                     ;;

                project.max-sem-ids) VALUE=128
                                     ;;
      esac
    fi

    printf "$VALUE"
  }


### Analyze Solaris project settings baseed on the recommended values in
### the WebSphere MQ documentation.  The user should provide one or more
### projects to analyze, but if not, analyze any project with one of the
### main WebSphere MQ queue manager processes (amqzxma0 or amqzmgr0, the 
### execution controller and service manager, respectively) and also the
### group.mqm project, if it exists.  Issue warnings when queue managers
### are found outside the group.mqm project or when no group.mqm project
### is found.  When all else fails, analyze the current project.

  AnalyzeSolaris() {
    if [ -z "$PROJLIST" ]; then
      PROJLIST=`ps -eo project,args | grep -E '[a]mqzxma0|[a]mqzmgr0' |
                awk '{print $1}' | uniq | grep -vw group\.mqm | tr '\n' ' '`
      COMMALIST="(`printf \"%s\n\" \"$PROJLIST\" | Trim | sed 's/ /, /g'`)"
      printf "\n"

      if projects -l group.mqm 1>/dev/null 2>&1; then
        if [ -n "$PROJLIST" ]; then
          Message 1014 "$COMMALIST"
          Message 1008 "group.mqm and other projects with queue manager activity $COMMALIST"
          PROJLIST="group.mqm $PROJLIST"
        else
          Message 1008 "the group.mqm project"
          PROJLIST="group.mqm"
        fi
      else
        Message 1015

        if [ -n "$PROJLIST" ]; then
          Message 1008 "all projects with queue manager activity $COMMALIST"
        else
          Message 1008 "the current project"
          PROJLIST=`id -p | sed -e 's/^.*projid=.*(//' -e 's/).*//'`
        fi
      fi
    fi


    IBM_SEMMNI=1024
    IBM_SHMMNI=1024
    IBM_SHMMAX=4294967296
    IBM_SHMMAX_MIN=4294967295
    IBM_MAXFDS=10000

    for PROJECT in ${PROJLIST:=default} ; do
      PROJID=`projects -l group.mqm 2>/dev/null | grep projid | sed 's/.*: *//'` || {
        Error 1007 $PROJECT
        continue
      }

      CUR_SHMMNI=`GetSolarisValue project.max-shm-ids`
      CUR_SHMMAX=`GetSolarisValue project.max-shm-memory`
      CUR_SEMMNI=`GetSolarisValue project.max-sem-ids`
      CUR_MAXFDS=`GetSolarisValue process.max-file-descriptor`

      printf "\nProject %s (%s): System V Semaphores\n" "$PROJECT" "$PROJID"
      DisplayLimit max-sem-ids          sets         "$CUR_SEMMNI"  "$IBM_SEMMNI"  75%

      printf "\nProject %s (%s): System V Shared Memory\n" "$PROJECT" "$PROJID"
      DisplayLimit max-shm-ids          sets         "$CUR_SHMMNI"  "$IBM_SHMMNI"  75%
      DisplayLimit max-shm-memory       bytes        "$CUR_SHMMAX"  "$IBM_SHMMAX"  "$IBM_SHMMAX_MIN"

      printf "\nProject %s (%s): Other Settings\n" "$PROJECT" "$PROJID"
      DisplayLimit max-file-descriptor  descriptors  "$CUR_MAXFDS"  "$IBM_MAXFDS"  75%
      printf "\n"
    done

    CheckShellDefaultOptions
  }


### Initialize variables, counters, and constants used by the script and
### tweak the syntax on Solaris 10 and later systems which use projects.

  unset PROJLIST MQVER OSVER OPSYS ARCH

  WARNINGS=0
  FAILURES=0

  if [ -t 1 ]; then
    PASS="\033[32mPASS\033[m"
    WARN="\033[33mWARN\033[m"
    FAIL="\033[31mFAIL\033[m"
  else
    PASS=PASS
    WARN=WARN
    FAIL=FAIL
  fi

  UNLIMITED=unlimited
  LITERAL=literal
  UNKNOWN="???"
  AUTO=auto

  OPTSTR=":v:"

  case `uname -s` in
    HP-UX) OPSYS=HPUX
           ;;

    SunOS) case `uname -r` in
             5.9) OPSYS=SolarisV9
                  ;;

               *) OPSYS=Solaris
                  OPTSTR="${OPTSTR}p:"
                  ;;
           esac
           ;;

        *) OPSYS=`uname -s`
           ;;
  esac


### Parse the command line to determine the WebSphere MQ version, and on
### Solaris 10 and later the project name(s) to analyze.  Issue an error
### if there are dangling arguments or no valid WebSphere MQ version was
### given, but be flexible in allowing different version formats.  Point
### WebSphere MQ 6.0 and 5.3 users to the mqconfig-old script.

  while getopts $OPTSTR OPT ; do
    case $OPT in
      \:) Error 1000 "$OPTARG" && PrintSyntax && exit 1
          ;;

      \?) if [ "${OPTARG:-?}" = "?" ]; then
            PrintHelp && exit 0
          else
            Error 1001 $OPTARG && PrintSyntax && exit 1
          fi
          ;;

       p) if [ "${PROJLIST:=$OPTARG}" != "$OPTARG" ]; then
            PROJLIST="$PROJLIST $OPTARG"
          fi
          ;;

       v) if [ "${MQVER:=$OPTARG}" != "$OPTARG" ]; then
            PrintSyntax && exit 1
          fi
          ;;
    esac
  done

  if [ $OPTIND -le $# ]; then
    shift `expr $OPTIND - 1`
    Error 1004 "$@" && exit 1
  fi

  MQVER=`printf "%s\n" "$MQVER" | tr -d 'vV' | Trim`

  if [ -z "$MQVER" ]; then
    Error 1002 && PrintSyntax && exit 1
  fi

  case $MQVER in
      75*|7.5*) MQVER=7.5
                ;;

      71*|7.1*) MQVER=7.1
                ;;

    7|70*|7.0*) MQVER=7.0
                ;;

    6|60*|6.0*) Error 1011 6.0 && exit 1
                ;;

      53*|5.3*) Error 1011 5.3 && exit 1
                ;;

      52*|5.2*) Error 1003 5.2 && exit 1
                ;;

      51*|5.1*) Error 1003 5.1 && exit 1
                ;;

    5|50*|5.0*) Error 1003 5.0 && exit 1
                ;;

            2*) Error 1003 2 && exit 1
                ;;

            1*) Error 1003 1 && exit 1
                ;;

             *) Error 1009 $MQVER && PrintSyntax && exit 1
                ;;
  esac


### Determine the operating system name and version as these will affect
### how the kernel is tuned.  On Linux we list the distribution name but
### do not otherwise check it, but on other platforms we do validate the
### operating system.  On HP-UX we verify that the hardware is supported
### (see /usr/include/sys/unistd.h) because WebSphere MQ dropped support
### for PA-RISC hardware in WebSphere MQ 7.1.  On AIX we avoid 'oslevel'
### when possible since it is quite slow.  We query the technology level
### from the bos.mp64 version and avoid checking the service pack except
### on AIX 5.3 where the WebSphere MQ V7.0 SOE requires us to do so.

  case `uname -s` in
       AIX) OSVER=`uname -v`
            OSREL=`uname -r`
            ARCH=`uname -p`
            TL=`lslpp -qcL bos.mp64 2>/dev/null | awk -F: '{print $3}' | awk -F. '{print $3}'`

            case $MQVER:$OSVER.$OSREL in
              7.[015]:7.1) ;;

               7.[15]:6.1) if [ $TL -lt 5 ]; then
                             Error 1013 $MQVER && exit 1
                           fi
                           ;;

                  7.0:6.1) ;;

                  7.0:5.3) SP=`oslevel -s | awk -F- '{print $3}'`

                           if [ $TL -lt 4 ]; then
                             Error 1012 && exit 1
                           elif [ $TL -eq 5 -a $SP -lt 2 ]; then
                             Error 1012 && exit 1
                           elif [ $TL -eq 7 -a $SP -lt 1 ]; then
                             Error 1012 && exit 1
                           fi
                           ;;

                        *) Error 1010 $MQVER AIX $OSVER.$OSREL && exit 1
                           ;;
            esac

            Message 1005 "AIX $OSVER.$OSREL TL$TL ($ARCH)" $MQVER
            ;;

     HP-UX) OSVER=`uname -r | sed -e 's/B\.//' -e 's/\..*//'`
            OSREL=`uname -r | sed 's/.*\.//'`

            CPUVER=`getconf CPU_VERSION 2>/dev/null`

            if [ ${CPUVER:=0} -eq 523 ]; then
              ARCH=PA-RISC
            elif [ $CPUVER -ge 524 -a $CPUVER -le 526 ]; then
              ARCH="Motorola 680x0"
            elif [ $CPUVER -ge 528 -a $CPUVER -le 767 ]; then
              ARCH=PA-RISC
            elif [ $CPUVER -ge 768 ]; then
              ARCH=Itanium
            else
              ARCH=Unknown
            fi

            case $MQVER:$ARCH in
                *:Itanium) ;;

              7.0:PA-RISC) ;;

                        *) Error 1010 $MQVER $ARCH hardware && exit 1
                           ;;
            esac

            case $MQVER:$OSVER in
              7.[15]:11) if [ $OSREL -lt 31 ]; then
                           Error 1010 $MQVER HP-UX $OSVER.$OSREL && exit 1
                         fi
                         ;;

                 7.0:11) if [ $OSREL -lt 23 ]; then
                           Error 1010 $MQVER HP-UX $OSVER.$OSREL && exit 1
                         fi
                         ;;

                      *) Error 1010 $MQVER HP-UX $OSVER.$OSREL && exit 1
                         ;;
            esac

            Message 1005 "HP-UX $OSVER.$OSREL ($ARCH)" "$MQVER"
            ;;

     Linux) OSVER=`uname -r`
            ARCH=`uname -p`

            if [ -x /usr/bin/lsb_release ]; then
              DIST=`/usr/bin/lsb_release -sd 2>/dev/null | env LANG=C tr -d \"`
            elif [ -r /etc/redhat-release ]; then
              DIST=`head -1 /etc/redhat-release 2>/dev/null`
            elif [ -r /etc/SuSE-release ]; then
              DIST=`head -1 /etc/SuSE-release 2>/dev/null`
            elif [ -r /etc/UnitedLinux-release ]; then
              DIST=`head -1 /etc/UnitedLinux-release 2>/dev/null`
            else
              DIST=`cat /etc/*-release 2>/dev/null | head -1`
            fi

            Message 1005 "${DIST:=Unknown Linux ($ARCH, $OSVER)}" "$MQVER"
            ;;

     SunOS) OSVER=`uname -r | sed 's/.*\.//'`
            ARCH=`uname -p`
            PATH=$PATH:/usr/xpg6/bin:/usr/xpg4/bin:$PATH:/usr/ucb

            case $MQVER:$OSVER in
              7.[015]:1[01]) ;;

                      7.0:9) if [ $ARCH != sparc ]; then
                               Error 1010 $MQVER $ARCH hardware && exit 1
                             fi
                             ;;

                          *) Error 1010 $MQVER Solaris $OSVER && exit 1
                             ;;
            esac

            Message 1005 "Solaris $OSVER ($ARCH)" "$MQVER"
            ;;

    Darwin) Error 1006 "OS X" && exit 1
            ;;

         *) Error 1006 `uname -s` && exit 1
            ;;
  esac


### Make sure the binary calculator (bc) is installed before proceeding.
### We rely on bc to handle arithmetic and comparisons since some of the
### values we check can overflow arithmetic precision of the shell.

  printf "quit\n" | bc 1>/dev/null 2>&1  || {
    Error 1016 bc && exit 1
  }


### Call the appropriate function to analyze each operating system.  Set
### the exit status based on the number of failures and warnings.

  eval Analyze$OPSYS

  if [ ${FAILURES:=0} -gt 0 ]; then
    exit 2
  elif [ ${WARNINGS:=0} -gt 0 ]; then
    exit 1
  else
    exit 0
  fi

##########################################################################
##########################################################################
##########################################################################
##########################################################################


checking the erors in oracle 
Log in as oracle user 

lsnrctl status

This will display two files check xml in that 



ONE LINE SCRIPTS
############################################## instances - threads of each flow
for each in `mqsilist $QM | grep Execution | awk -F"'" {'print $2'}`; do for app in `mqsilist $QM -e $each | grep BIP1275I | awk -F"'" {'print $2'}`;do for mf in `mqsilist $QM -e $each -k $app -d 2 | grep "Message flow" | awk -F"'" {'print $2'}`; do instances=`mqsilist $QM -e $each -k $app -d 2 | grep -A2 $mf | grep instances | awk -F"'" {'print $2'}`;printf "\n$each,$app,$mf,${instances}";done;done;done


############################################### Audit count per execution group #####################
select count(*),cme_intrfc_name,auditing_system,msg_direction from txn_cme_audit group by cme_intrfc_name,auditing_system,msg_direction order by 2 ;

########################################


################# all message flow properties

mqsireportproperties <BRK_NAME> -o  AllMessageFlows -e <EG_NAME> -a 
mqsireportproperties <BRK_NAME> -o  AllMessageFlows -e <EG_NAME> -r



############################ Monitoring profile xml generation ####################################
mkdir ~/monitor;for each in `mqsilist $QM | grep Execution | awk -F"'" {'print $2'}`; do for app in `mqsilist $QM -e $each | grep BIP1275I | awk -F"'" {'print $2'}`;do for mf in `mqsilist $QM -e $each -k $app -d 2 | grep "Message flow" | awk -F"'" {'print $2'}`; do mqsireportflowmonitoring $QM -e $each -k $app -f $mf -x -p ~/monitor/$mf.xml ;done;done;done






##################### web admin GUI broker setup ######################
# Broker WEB Admin user
#######################
sudo su -
useradd mbwebadmin
usermod -a -G mqbrkrs mbwebadmin
useradd mbwebview
usermod -a -G mqbrkrs mbwebview 

# Broker 1
mqsichangeproperties P1EMBK01 -b webadmin -o HTTPConnector -n port -v 4411 mqsireportproperties P1EMBK01 -b webadmin -o HTTPConnector -a mqsichangeproperties P1EMBK01 -b webadmin -o server -n enabled,enableSSL -v true,false mqsireportproperties P1EMBK01 -b webadmin -o server -a mqsistop P1EMBK01 
mqsichangebroker P1EMBK01 -s active   
mqsistart P1EMBK01 


# Broker 2
mqsichangeproperties P1EMBK02 -b webadmin -o HTTPConnector -n port -v 4412 mqsireportproperties P1EMBK02 -b webadmin -o HTTPConnector -a mqsichangeproperties P1EMBK02 -b webadmin -o server -n enabled,enableSSL -v true,false mqsireportproperties P1EMBK02 -b webadmin -o server -a mqsistop P1EMBK02 
mqsichangebroker P1EMBK02 -s active   
mqsistart P1EMBK02 


# Qmgr 1
su - mqm
mqsiwebuseradmin P1EMBK01 -c -u mbadmin -r mbwebadmin -a password setmqaut -m P1EMBK01 -t qmgr -g mbwebadmin -all +connect +inq setmqaut -m P1EMBK01 -t queue -g mbwebadmin -n SYSTEM.BROKER.AUTH -all +inq setmqaut -m P1EMBK01 -t queue -g mbwebadmin -n SYSTEM.BROKER.AUTH.** -all +inq setmqaut -m P1EMBK01 -t queue -g mbwebadmin -n SYSTEM.BROKER.DEPLOY.QUEUE -all +put setmqaut -m P1EMBK01 -t queue -g mbwebadmin -n SYSTEM.BROKER.DEPLOY.REPLY -all +get +put echo "refresh security" | runmqsc P1EMBK01 

# View User
mqsiwebuseradmin P1EMBK01 -c -u mbview -r mbwebview -a password setmqaut -m P1EMBK01 -t qmgr -g mbwebview -all +connect +inq setmqaut -m P1EMBK01 -t queue -g mbwebview -n SYSTEM.BROKER.AUTH -all +inq setmqaut -m P1EMBK01 -t queue -g mbwebview -n SYSTEM.BROKER.AUTH.** -all +inq echo "refresh security" | runmqsc P1EMBK01

# Qmgr 2
su - mqm
mqsiwebuseradmin P1EMBK02 -c -u mbadmin -r mbwebadmin -a password setmqaut -m P1EMBK02 -t qmgr -g mbwebadmin -all +connect +inq setmqaut -m P1EMBK02 -t queue -g mbwebadmin -n SYSTEM.BROKER.AUTH -all +inq setmqaut -m P1EMBK02 -t queue -g mbwebadmin -n SYSTEM.BROKER.AUTH.** -all +inq setmqaut -m P1EMBK02 -t queue -g mbwebadmin -n SYSTEM.BROKER.DEPLOY.QUEUE -all +put setmqaut -m P1EMBK02 -t queue -g mbwebadmin -n SYSTEM.BROKER.DEPLOY.REPLY -all +get +put echo "refresh security" | runmqsc P1EMBK02

# View User
mqsiwebuseradmin P1EMBK02 -c -u mbview -r mbwebview -a password setmqaut -m P1EMBK02 -t qmgr -g mbwebview -all +connect +inq setmqaut -m P1EMBK02 -t queue -g mbwebview -n SYSTEM.BROKER.AUTH -all +inq setmqaut -m P1EMBK02 -t queue -g mbwebview -n SYSTEM.BROKER.AUTH.** -all +inq echo "refresh security" | runmqsc P1EMBK02


####################################################################################################

NFT URLS

- <proxy_site_config>
- <!-- <entry destination='http://10.250.5.58:443' URI='/AddCard'></entry>
  --> 
- <!-- <entry destination='http://10.250.5.58:443' URI='/BalanceEnquiry'></entry>
  --> 
- <!-- <entry destination='http://10.250.5.58:443' URI='/SubmitPayment'></entry>
  --> 
- <!-- <entry destination='http://10.250.5.58:443' URI='/OMSPayAuth'></entry>
  --> 
- <!-- Defect 8864
  --> 
- <!-- <entry destination='http://10.250.5.58:443' URI='/PaymentAuthOMS'></entry>
  --> 
- <!-- Defect 8864
  --> 
  <entry destination="https://icnow01.accertify.net" URI="/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e" /> 
  <entry destination="https://ics2wstest.ic3.com" URI="/commerce/1.x/transactionProcessor/" /> 
- <!-- New VIP configurations. Done By Rajesh M - 10/10/2013
  --> 
  <entry destination="http://10.250.5.86:443" URI="/AddCard" /> 
  <entry destination="http://10.250.5.85:443" URI="/BalanceEnquiry" /> 
  <entry destination="http://10.250.5.87:443" URI="/SubmitPayment" /> 
  <entry destination="http://10.250.5.80:443" URI="/PaymentAuthOMS" /> 
  </proxy_site_config>
  
  
  ############################################## MQ SSL
  
  
## create the DB
runmqckm -keydb -create -db $QM.kdb -pw password -type cms -expire 7300

###import p12 inot kdb - need to do it after importing the CA certificate list
runmqckm -cert -import -target $QM.kdb  -target_pw password -file hlxc0mc010.unix.marksandspencercate.com.p12 -label hlxc0mc010.unix.marksandspencercate.com -new_label ibmwebspheremq$QM -pw password

####check
runmqckm -cert -details -label ibmwebspheremq$QM -db $QM.kdb -pw password

#####add cert to kdb
runmqckm -cert -add -file MarksandSpencerCA.cer -db $QM.kdb -pw password

####list all certs in kdb
runmqckm  -cert -list all -db $QM.kdb -pw password


### import certificates into a kdb
for each in `ls *.cer *.CER | grep -v hlxc0mc010`;do runmqckm -cert -add -file $each -db $QM.kdb -pw password;done
#

dpmqfte://MS_ECOM_GW01_ACT_BACK/?RequestQueue=MFT_XB60_DATAHUB_MQFTE&DestAgent=C01_HUXD0314.UNIX_C1MQFT03&DestQM=C1MQFT03&DestFile=//etl//IS//Data//mcfp_ft//inbound//jml//card_alloc_desp//ms-e-status.txt&SenderID=MESSAGING_APPLICATION_SUPPORT&ReceiverID=MESSAGING_APPLICATION_SUPPORT&ContentType=MFT_JML_DESPATCH_DS



curl -v -k --data @AddCard.xml https://10.250.5.86:443/AddCard
########################## lots of curl '##################
   32  history | grep 'curl'
   33   curl -v -k --data @21349_cc.xml https://10.250.5.48:443/SubmitPayment
   34   curl -v -k --data @BalenPos1.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
   36  history | grep curl
   38   curl -v -k -data @20542.xml https://10.250.5.48:443/SubmitPayment
   40  history | grep curl
   41  curl -v -k --data @VISA.xml https://10.250.5.48:443/SubmitPayment
   42  curl -v -k --data @Mastero.xml https://10.250.5.48:443/SubmitPayment
   53  curl -v -k --data @VISA.xml https://10.250.5.48:443/Detoken
   61  curl -v -k --data @posin1.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
   62  curl -v -k --data @posin.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
   67  curl -v -k --data @authpos.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
   70  curl -v -k --data @30SepPos.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
   79  curl -v -k --data @posin1.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
   84  curl -v -k --data @posin.xml https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
   88  curl -v -k --data @pos https://10.250.5.16:443/NP_SrcServlet/SourceServlet.do
  104   curl -v -k --data @subpay_mas.xml http://10.250.5.87:443/SubmitPayment
  155  hisrtory | grep curl
  156  history | grep curl
  157   curl -v -k --data @subpay_mas.xml https://10.250.5.48:443/SubmitPayment
  158   curl -v -k --data @subpay_mas.xml https://10.250.5.48:443/Detoken
  159   curl -v -k --data @subpay_mas.xml https://10.250.5.48:443/3DEnrollCheck
  164  curl -v -k --data @subpay_mas.xml https://10.250.5.48:443/3DEnrollCheck
  182  curl -k -v -H"Content-Type: text/xml" --data-binary @Accertify_in.xml --user mandsimportert35t:P74e357Gh$ https://10.130.148.24:8525/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e
  318  curl -k -v -H"Content-Type: text/xml" --data-binary @Accertify_in.xml --user mandsimportert35t:P74e357Gh$ https://10.130.148.24:8525/icNowImport/0a3ea44c-8f94-4872-95a0-6a2b6c7f811e
  422  curl -v -k --data @AddCard.xml https://10.250.5.48:443/AddCard
  424  curl -v -k --data @BalanceEnquiry.xml https://10.250.5.48:443/BalanceEnquiry
  426  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/Detoken
  427  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/3DEnrollCheck
  428  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/3DValidate
  429  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/3DEnrollCheck
  430  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/Detoken
  431  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/PaymentAuthWCS
  432  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/SubmitPayment
  435  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/SubmitPayment
  437  curl -v -k --data @PayAuthRevOMS.xml https://10.250.5.48:443/PaymentAUthOMS
  439  curl -v -k --data @PayAuthOMS.xml https://10.250.5.48:443/PaymentAuthOMS
  441  curl -v -k --data @PayAuthOMS.xml https://10.250.5.48:443/PaymentAuthOMS
  499  curl -v -k --data @SyncExc.xml https://10.250.5.48:448/3DEnrollCheck
  500  curl -v -k --data @SyncExc.xml https://10.250.5.48:443/3DEnrollCheck
  501  curl -v -k --data @SyncExc.xml https://10.250.5.48:443/PaymentAuthWCS
  504  curl -v -k --data @SyncExc.xml https://10.250.5.48:443/PaymentAuthWCS
  508  curl -v -k --data @SyncExc.xml https://10.250.5.48:443/PaymentAuthWCS
  516  curl -v -k --data @SyncExc.xml https://10.250.5.48:443/PaymentAuthWCS
  522  curl -v -k --data @PayAuthOMS.xml https://10.250.5.48:443/PaymentAuthOMS
  525  curl -v -k --data @PayAuthOMS.xml https://localhost:7801/PaymentAuthOMS
  527  curl -v -k --data @PayAuthOMS.xml https://localhost:7801/PaymentAuthOMS
  528  curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/PaymentAuthOMS
  542  curl -v -k --data @refund.xml https://10.250.5.48:443/PaymentAuthOMS
  547  curl -v -k --data @PayAuthWCS.xml https://10.250.5.48:443/PaymentAuthWCS
  548  curl -v -k --data @PayAuthWCS.xml https://10.250.5.48:443/PaymentAuthOMS
  556  curl -v -k --data @new.xml https://10.250.5.48:443/PaymentAuthOMS
  557  curl -v -k --data @refund.xml https://10.250.5.48:443/PaymentAuthOMS
  559  curl -v -k --data @steve.xml https://10.250.5.48:443/PaymentAuthOMS
  561  curl -v -k --data @refund.xml https://10.250.5.48:443/PaymentAuthOMS
  565  curl -v -k --data @refund.xml https://10.250.5.48:443/PaymentAuthOMS
  567  curl -v -k --data @refund.xml https://10.250.5.48:443/PaymentAuthOMS
  570  curl -v -k --data @sumit.xml https://10.250.5.48:443/PaymentAuthOMS
  572  curl -v -k --data @sumit.xml https://10.250.5.48:443/PaymentAuthOMS
  613  curl -v -k --data @sumit.xml https://10.250.5.48:443/PaymentAuthOMS
  633  curl -v -k --data @sumit.xml https://10.250.5.48:443/PaymentAuthOMS
  634  history | grep 'curl'
  635   curl -v -k --data @AddCard.xml https://10.250.5.48:443/AddCard
  640   curl -v -k --data @AddCard.xml https://10.250.5.48:443/AddCard
  641  history | grep 'curl'
  642   curl -v -k --data @PayAuthRevWCS.xml https://10.250.5.48:443/Detoken
  966  curl -v -k --data @gift_input.xml http://10.250.5.58:443/PaymentAuthWCS
  967  curl -v -k --data @14860.xml https://10.250.5.68:443/PaymentAuthWCS
  990  curl -v -k --data @subpay_mas.xml https://10.250.5.48:443/SubmitPayment
  996  curl -v -k --data @subpay_mas.xml https://10.250.5.71:443/SubmitPayment

  
  ####################### long running transaction ############# long log replay ################
  
 ffstsummary   - use this tool for reading through ffst easily
 mq hangdoc - run this tool during the process of long running transaction to identify the culprit (used for hanging queue managers etc)
 
 grep the FFDC for LONG_LOCK_WAIT (this is the process that shows there is a lock and no check point 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 ################################## Oracle partitioning on txn_cme_audit ###################################################
 ###### ###### ###### ######	STEP - 1	###### ###### ###### ######  
-- create new tablespace S2EMINST1_HIST and allocate 200G space 
###### ###### ###### ###### ###### ###### ###### ###### ###### ###### 

create tablespace s2eminst1_hist datafile '+DATA01' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA02' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA03' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA04' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA05' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA06' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA07' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA08' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA09' size 256m autoextend on next 256m maxsize 32767m;
alter tablespace s2eminst1_hist add datafile '+DATA10' size 256m autoextend on next 256m maxsize 32767m;

###### ###### ###### ######	STEP - 2		###### ###### ###### ######  
-- Stop  Audit Queue flow 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 
--These commands needs to executed as mqm user ($QM is Broker Name)  

mqsistopmsgflow $QM -e CTS -k STORE_EM_AUDIT_MSGS -w 200

mqsistopmsgflow $QM -e CTS01 -k STORE_EM_AUDIT_MSGS -w 200


###### ###### ###### ######	STEP - 3		###### ###### ###### ######  
-- Rename live table, indexes and constraints to History 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

rename TXN_CME_AUDIT to TXN_CME_AUDIT_Hist;

alter table S2eminst1.TXN_CME_AUDIT_HIST rename constraint CME_AUDIT_PK to CME_AUDIT_STG_PK;

alter index S2eminst1.CME_AUDIT_PK rename to CME_AUDIT_STG_PK;

###### ###### ###### ######	STEP - 4		###### ###### ###### ######  
-- Recreate Live table ,constraints and indexes with Partitioning
###### ###### ###### ######	######  ######	###### ###### ###### ###### 
 
CREATE TABLE s2eminst1.TXN_CME_AUDIT 
   ( MSG_ID VARCHAR2(100), 
  MSG_UNQ_ID VARCHAR2(750), 
  MSG_PROCESSED_TS TIMESTAMP (6), 
  INTRFC_PRTNR_SYS_ID VARCHAR2(30), 
  CORRL_ID VARCHAR2(100), 
  SRC_MSG_ID VARCHAR2(100), 
  AUDITING_SYSTEM VARCHAR2(100), 
  AUDITING_SYS_COMPONENT VARCHAR2(100), 
  AUDITING_USER_ID VARCHAR2(50), 
  MSG_DIRECTION CHAR(1), 
  COMPONENT_ID NUMBER(38), 
  SYSTEM_NETWK_LOCN VARCHAR2(3), 
  CME_SRC_APPLCN_NAME VARCHAR2(30), 
  CME_INTRFC_ID VARCHAR2(10), 
  CME_INTRFC_NAME VARCHAR2(50), 
  CME_PAYLOAD_NAME VARCHAR2(50), 
  MISC_DATA VARCHAR2(200), 
  SYS_INSERT_TSTMP TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) 
   PARTITION BY RANGE (MSG_PROCESSED_TS) 
INTERVAL(numtodsinterval(1,'day')) 
( PARTITION p0 VALUES LESS THAN (TO_DATE('01-01-2000', 'DD-MM-YYYY')) ) 
TABLESPACE S2EMINST1 INITRANS 32 NOLOGGING;

CREATE UNIQUE INDEX S2EMINST1.CME_AUDIT_PK ON S2EMINST1.TXN_CME_AUDIT(MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID) LOCAL TABLESPACE S2EMINST1 INITRANS 64 NOLOGGING;

ALTER TABLE S2EMINST1.TXN_CME_AUDIT ADD CONSTRAINT CME_AUDIT_PK PRIMARY KEY (MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID) USING INDEX ENABLE;

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (SYS_INSERT_TSTMP NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (CME_PAYLOAD_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (CME_INTRFC_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (CME_INTRFC_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (CME_SRC_APPLCN_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (SYSTEM_NETWK_LOCN NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (MSG_DIRECTION NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (AUDITING_SYSTEM NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (SRC_MSG_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (CORRL_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (INTRFC_PRTNR_SYS_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (MSG_PROCESSED_TS NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT MODIFY (MSG_ID NOT NULL ENABLE);


grant select on S2EMINST1.TXN_CME_AUDIT to read_only;
grant select on S2EMINST1.TXN_CME_AUDIT_HIST to read_only;

###### ###### ###### ######	STEP - 5		###### ###### ###### ######  
-- Start  Audit Queue flow 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 



--These commands needs to executed as mqm user ($QM is Broker Name)  

mqsistartmsgflow $QM -e CTS -k STORE_EM_AUDIT_MSGS -w 200
mqsistartmsgflow $QM -e CTS01 -k STORE_EM_AUDIT_MSGS -w 200




###### ###### ###### ######	STEP - 6		###### ###### ###### ######  
-- Export Backup of renamed table as part of DR Stretegy 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

--start export of TXN_CME_AUDIT_Hist table -- should complete within 2hrs

###### ###### ###### ######	STEP - 7		###### ###### ###### ######  
-- Create a Staging Table used for partitioning History table 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

CREATE TABLE S2EMINST1.TXN_CME_AUDIT_STG 
   (	MSG_ID VARCHAR2(100), 
	MSG_UNQ_ID VARCHAR2(750), 
	MSG_PROCESSED_TS TIMESTAMP (6), 
	INTRFC_PRTNR_SYS_ID VARCHAR2(30), 
	CORRL_ID VARCHAR2(100), 
	SRC_MSG_ID VARCHAR2(100), 
	AUDITING_SYSTEM VARCHAR2(100), 
	AUDITING_SYS_COMPONENT VARCHAR2(100), 
	AUDITING_USER_ID VARCHAR2(50), 
	MSG_DIRECTION CHAR(1), 
	COMPONENT_ID NUMBER(38), 
	SYSTEM_NETWK_LOCN VARCHAR2(3), 
	CME_SRC_APPLCN_NAME VARCHAR2(30), 
	CME_INTRFC_ID VARCHAR2(10), 
	CME_INTRFC_NAME VARCHAR2(50), 
	CME_PAYLOAD_NAME VARCHAR2(50), 
	MISC_DATA VARCHAR2(200), 
	SYS_INSERT_TSTMP TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   )
   PARTITION BY RANGE (MSG_PROCESSED_TS) 
INTERVAL(numtodsinterval(1,'day')) 
( PARTITION p0 VALUES LESS THAN (TO_DATE('01-01-2000', 'DD-MM-YYYY')) ) 
TABLESPACE S2EMINST1_HIST INITRANS 32 NOLOGGING;


###### ###### ###### ######	STEP - 8		###### ###### ###### ######  
-- Check for Redefinition of Source		
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

EXEC Dbms_Redefinition.Can_Redef_Table('S2EMINST1', 'TXN_CME_AUDIT_HIST');

###### ###### ###### ######	STEP - 9		###### ###### ###### ######  
-- Begin Redefinition Process, it will take 2hrs apprx.		
###### ###### ###### ######	######  ######	###### ###### ###### ###### 
--

BEGIN
  DBMS_REDEFINITION.start_redef_table(
    UNAME      => 'S2EMINST1',        
    ORIG_TABLE => 'TXN_CME_AUDIT_HIST',
    int_table  => 'TXN_CME_AUDIT_STG');
end;
/

###### ###### ###### ######	STEP - 10		###### ###### ###### ######  
-- Sync Staging Table	
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

BEGIN
  dbms_redefinition.sync_interim_table(
   UNAME      => 'S2EMINST1',        
    ORIG_TABLE => 'TXN_CME_AUDIT_HIST',
    int_table  => 'TXN_CME_AUDIT_STG');
end;
/


select count(*) from s2eminst1.TXN_CME_AUDIT_HIST;

select count(*) from s2eminst1.TXN_CME_AUDIT_STG;


###### ###### ###### ######	STEP - 11		###### ###### ###### ######  
-- create index & constrainsts on staging table
###### ###### ###### ######	######  ######	###### ###### ###### ###### 


-- index creation and below modification wil take 5/6hrs.
 
CREATE UNIQUE INDEX S2EMINST1.CME_AUDIT_HIST_PK ON S2EMINST1.TXN_CME_AUDIT_STG(MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID) LOCAL TABLESPACE S2EMINST1_HIST INITRANS 64 NOLOGGING;

ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG ADD CONSTRAINT CME_AUDIT_HIST_PK PRIMARY KEY (MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID) USING INDEX ENABLE;

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (SYS_INSERT_TSTMP NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_PAYLOAD_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_INTRFC_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_INTRFC_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_SRC_APPLCN_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (SYSTEM_NETWK_LOCN NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (MSG_DIRECTION NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (AUDITING_SYSTEM NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (SRC_MSG_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CORRL_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (INTRFC_PRTNR_SYS_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (MSG_PROCESSED_TS NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (MSG_ID NOT NULL ENABLE);



grant select on S2EMINST1.TXN_CME_AUDIT_STG to read_only;
grant select on S2EMINST1.TXN_CME_AUDIT_HIST to read_only;


###### ###### ###### ######	STEP - 12		###### ###### ###### ######  
-- Finish Table Redefinition	
###### ###### ###### ######	######  ######	###### ###### ###### ###### 


BEGIN
  dbms_redefinition.finish_redef_table(
  UNAME      => 'S2EMINST1',        
    ORIG_TABLE => 'TXN_CME_AUDIT_HIST',
    int_table  => 'TXN_CME_AUDIT_STG');
end;
/

###### ###### ###### ######	STEP - 13		###### ###### ###### ######  
-- Validate Table Redefinition 	
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

select count(*) from S2EMINST1.TXN_CME_AUDIT_HIST;
select COUNT(*) from S2EMINST1.TXN_CME_AUDIT_STG;

select index_name PARTITION_NAME,TABLESPACE_NAME, HIGH_VALUE,NUM_ROWS from DBA_IND_PARTITIONS where index_owner='S2EMINST1'  order by PARTITION_POSITION;

select TABLE_NAME,PARTITION_NAME,TABLESPACE_NAME, HIGH_VALUE,NUM_ROWS from DBA_TAB_PARTITIONS where TABLE_NAME='TXN_CME_AUDIT_HIST' order by PARTITION_POSITION;

select constraint_name from DBA_CONSTRAINTS where TABLE_NAME = 'TXN_CME_AUDIT_HIST' and CONSTRAINT_TYPE = 'P';

select index_name, PARTITION_NAME,TABLESPACE_NAME, HIGH_VALUE,NUM_ROWS from DBA_IND_PARTITIONS where index_owner='S2EMINST1' and status='UNUSABLE' order by PARTITION_POSITION;


### Insert current day partition data from Hist table to Live table and drop partition in HIST table


###### ###### ###### ######	STEP - 14		###### ###### ###### ######  
-- drop and recreate Staging table with index 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

drop table S2EMINST1.TXN_CME_AUDIT_STG; 

 CREATE TABLE S2EMINST1.TXN_CME_AUDIT_STG 
   (	MSG_ID VARCHAR2(100), 
	MSG_UNQ_ID VARCHAR2(750), 
	MSG_PROCESSED_TS TIMESTAMP (6), 
	INTRFC_PRTNR_SYS_ID VARCHAR2(30), 
	CORRL_ID VARCHAR2(100), 
	SRC_MSG_ID VARCHAR2(100), 
	AUDITING_SYSTEM VARCHAR2(100), 
	AUDITING_SYS_COMPONENT VARCHAR2(100), 
	AUDITING_USER_ID VARCHAR2(50), 
	MSG_DIRECTION CHAR(1), 
	COMPONENT_ID NUMBER(38), 
	SYSTEM_NETWK_LOCN VARCHAR2(3), 
	CME_SRC_APPLCN_NAME VARCHAR2(30), 
	CME_INTRFC_ID VARCHAR2(10), 
	CME_INTRFC_NAME VARCHAR2(50), 
	CME_PAYLOAD_NAME VARCHAR2(50), 
	MISC_DATA VARCHAR2(200), 
	SYS_INSERT_TSTMP TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) tablespace s2eminst1_hist initrans 32 NOLOGGING;

CREATE UNIQUE INDEX S2EMINST1.CME_AUDIT_STG_PK ON S2EMINST1.TXN_CME_AUDIT_STG(MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID) tablespace s2eminst1_hist initrans 64 NOLOGGING;

ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG ADD CONSTRAINT CME_AUDIT_STG_PK PRIMARY KEY (MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID) USING INDEX ENABLE;

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (SYS_INSERT_TSTMP NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_PAYLOAD_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_INTRFC_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_INTRFC_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CME_SRC_APPLCN_NAME NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (SYSTEM_NETWK_LOCN NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (MSG_DIRECTION NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (AUDITING_SYSTEM NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (SRC_MSG_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (CORRL_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (INTRFC_PRTNR_SYS_ID NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (MSG_PROCESSED_TS NOT NULL ENABLE);

  ALTER TABLE S2EMINST1.TXN_CME_AUDIT_STG MODIFY (MSG_ID NOT NULL ENABLE);


grant select on S2EMINST1.TXN_CME_AUDIT_STG to read_only;
grant select on S2EMINST1.TXN_CME_AUDIT_HIST to read_only;

###### ###### ###### ######	STEP - 15		###### ###### ###### ######  
-- Gather Stats for tables 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 


EXEC DBMS_STATS.gather_table_stats('S2EMINST1', 'TXN_CME_AUDIT_HIST', cascade => TRUE);


select TABLE_NAME,PARTITION_NAME,TABLESPACE_NAME, HIGH_VALUE,NUM_ROWS from DBA_TAB_PARTITIONS 
where TABLE_NAME='TXN_CME_AUDIT_HIST' order by partition_position;

select count(1) from s2eminst1.txn_cme_audit_hist partition (partition_name);

insert into s2eminst1.txn_cme_audit select * from s2eminst1.txn_cme_audit_hist partition (partition_name) parallel;
commit;

-- drop partition

ALTER TABLE s2eminst1.TXN_CME_AUDIT_HIST DROP partition partition_name;


EXEC DBMS_STATS.gather_table_stats('S2EMINST1', 'TXN_CME_AUDIT', cascade => TRUE);



select TABLE_NAME,PARTITION_NAME,TABLESPACE_NAME, HIGH_VALUE,NUM_ROWS from DBA_TAB_PARTITIONS 
where TABLE_NAME='TXN_CME_AUDIT'
order by PARTITION_POSITION;  

###### ###### ###### ######	STEP - 16		###### ###### ###### ######  
-- Create database procedure for moving data from 
-- Live to History and drop empty partition.
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

CREATE OR REPLACE PROCEDURE S2EMINST1.MOV_PART_TO_HIST (no_day in number) is
V_PART_DT varchar(31) := 'TIMESTAMP '''||TO_CHAR(systimestamp - no_day,'YYYY-MM-DD')||' 00:00:00''';
V_PART_NAME varchar(10) := 'P'||TO_CHAR(systimestamp - no_day,'DDMMYYYY');
begin
execute immediate 'alter table TXN_CME_AUDIT exchange partition for ('||V_PART_DT||') with table TXN_CME_AUDIT_STG INCLUDING INDEXES without validation' ;
execute immediate 'lock table TXN_CME_AUDIT_HIST partition for ('||V_PART_DT||') in share mode';
execute immediate 'alter table TXN_CME_AUDIT_HIST exchange partition for ('||V_PART_DT||') with table TXN_CME_AUDIT_STG INCLUDING INDEXES without validation';
execute immediate 'ALTER TABLE TXN_CME_AUDIT DROP partition for ('||V_PART_DT||')';
execute immediate 'ALTER TABLE TXN_CME_AUDIT_HIST move partition for ('||V_PART_DT||') UPDATE INDEXES tablespace S2EMINST1_HIST NOLOGGING';
execute immediate 'ALTER TABLE TXN_CME_AUDIT_HIST RENAME PARTITION for ('||V_PART_DT||') TO '||V_PART_NAME;
END MOV_PART_TO_HIST;
/


###### ###### ###### ######	STEP - 17		###### ###### ###### ######  
-- Create and schedule job to run above procedure 	
###### ###### ###### ######	######  ######	###### ###### ###### ###### 
-- create a program with all job arguments

BEGIN
dbms_scheduler.create_program
(
program_name=>'PRG_MOV_PART',
program_action=>'S2EMINST1.MOV_PART_TO_HIST',
program_type=>'STORED_PROCEDURE',
number_of_arguments=>1,
enabled=>FALSE,
comments       => 'Program fro Partition Move');
END;
/

col OWNER format a10
col PROGRAM_ACTION format a70
col COMMENTS format a70
SELECT owner, program_name, program_type, program_action, enabled, comments
FROM dba_scheduler_programs;

-- set program argument

SELECT overload, position, argument_name, data_type FROM dba_arguments
WHERE object_name = 'MOV_PART_TO_HIST';
 

BEGIN
dbms_scheduler.DEFINE_PROGRAM_ARGUMENT(
program_name=>'PRG_MOV_PART',
argument_position=>1,
argument_type=>'NUMBER',
DEFAULT_VALUE=>'8');  
END;
/
 

col DEFAULT_VALUE format a50
col ARGUMENT_TYPE format a20
SELECT program_name, argument_name, argument_position, argument_type, default_value
FROM dba_scheduler_program_args where PROGRAM_NAME='PRG_MOV_PART';
 
-- create job

BEGIN
   dbms_scheduler.create_job(
   job_name => 'JOB_MOV_PART',
   program_name => 'PRG_MOV_PART',
   start_date => dbms_scheduler.stime,
   repeat_interval => 'freq=daily;byhour=00;byminute=30',
   end_date        => NULL,
   enabled => FALSE,
   auto_drop => FALSE,
   comments => 'Job for Moving Partition');
END;
/

col PROGRAM_NAME format a70
col START_DATE format a70 
SELECT job_name, program_name, start_date, ENABLED FROM dba_scheduler_jobs;

###### ###### ###### ######	STEP - 18		###### ###### ###### ######  
-- Create and schedule job to run above procedure 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

-- enable the program

exec dbms_scheduler.enable('PRG_MOV_PART');

-- enable the job

exec dbms_scheduler.enable('JOB_MOV_PART');
 
-- test the job

exec dbms_scheduler.set_job_argument_value('JOB_MOV_PART',1,'8');

exec dbms_scheduler.run_job('JOB_MOV_PART', TRUE);

col JOB_NAME format a30
col OPERATION format a30 
SELECT job_name, operation, status, additional_info FROM dba_scheduler_job_log where job_name='JOB_MOV_PART';
 
SELECT job_name, state, run_count, next_run_date FROM dba_scheduler_jobs where JOB_NAME='JOB_MOV_PART';




###### ###### ###### ######	BACKOUT STEPS	###### ###### ###### ######  
-- Steps performed to Backout 
###### ###### ###### ###### ###### ###### ###### ###### ###### ###### 

We would come to know of any issue immediately when we start the flow in implementation step# 5 .The audit  messages will start going into the exception .To revert to original state, we follow following steps 
--Stop  Audit Queue flow 

--These commands needs to executed as mqm user ($QM is Broker Name)  

mqsistopmsgflow $QM -e CTS -k STORE_EM_AUDIT_MSGS -w 200

mqsistopmsgflow $QM -e CTS01 -k STORE_EM_AUDIT_MSGS -w 200

--Drop the newly created live table, indexes and constraints to Old.

Drop table  TXN_CME_AUDIT;

--Rename the History table, indexes and constraints to Live.

rename TXN_CME_AUDIT_HIST to TXN_CME_AUDIT;

alter table S2eminst1.TXN_CME_AUDIT  rename constraint CME_AUDIT_STG_PK to CME_AUDIT_PK;

alter index S2eminst1.CME_AUDIT_STG_PK rename to CME_AUDIT_PK;

--Start  Audit Queue flow

--These commands needs to executed as mqm user ($QM is Broker Name)  

mqsistartmsgflow $QM -e CTS -k STORE_EM_AUDIT_MSGS -w 200
mqsistartmsgflow $QM -e CTS01 -k STORE_EM_AUDIT_MSGS -w 200

--Replay the Audit Messages which went into exception

--These commands needs to executed by the EM Support team  


########################################################################################################################################################################
############################ greyhound



Use the below link to access the XI52 log (at present for SP)

http://10.141.25.10/streams/52160bbe4d5bc052f2000002-xi52/dashboard

xisupport
anit123


Below is the link to query 

http://support.torch.sh/help/kb/graylog2-web-interface/timeframe-filters 

#########################################################################################
DV01438
p3010996
london13

sh -x /secure/migration/MQFTE_Scripts/MCFACCERTIFY.sh /secure/migration/customer/cust_mapping /secure/migration/MQFTE_Scripts/Logs CATEB sample.txt

################################## primary and secondary logs and log extents



Use the amqldmpa command with -H option to dump the state of the logger. The following amqldmpa command dumps the logger state to logger.out file in /tmp directory.

amqldmpa -m <qmgr> -c H -d 8 -f /tmp/logger.out

In the output file, search for the following attributes. The following is an example:

logactive: 3
loginactive: 2
..................................
FileCount: 3
filenum [0,1,2]

logactive : Number of primary log file
loginactive : Number of secondary log files
FileCount : Number of active logs. If this number is greater than the logactive, then that indicates the queue manager started using secondary logs files.
filenum : List of log extents currently in use

########################################################################################### convert xml to single line
perl -i -pe 'chomp unless eof; s/\t//g'  inputfile



################################### partitiioning 

-	Create an empty new table TXN_CME_AUDIT_STG with same columns as original Audit table.
This table would be partitioned daily and have a  PK made of  4 columns (MSG_PROCESS_TS,MSG_ID,INTRFC_PRTNR_ID,MSG_DIRECTION)
-	Stop the Audit flow
-	Export the Source Audit table
-	Import the data into new table
-	Rename the table TXN_CME_AUDIT to TXN_CME_AUDIT_OLD
-	Rename the new table TXN_CME_AUDIT_STG  to TXN_CME_AUDIT
-	Start the flow
-	Create History table TXN_CME_AUDIT_HIST having same structure as new Audit table
-	Move all partitions older than 7 days from main Audit table to History table
-	Create a DB Job which would initiate at night 12:30 and move a partition of 8th day into history table.
-	Drop the non-partitioned table TXN_CME_AUDIT_OLD
-	All data older than 7 days would be available in History table. To purge the data from History, support team would raise a request to DBA for dropping partition older than a particular date (e.g. 90st day)


############################################partitioning script and archiving

###### ###### ###### ######	STEP - 1	###### ###### ###### ######  
- Create an empty new table TXN_CME_AUDIT_STG with same columns as original Audit table
###### ###### ###### ###### ###### ###### ###### ###### ###### ###### 
CREATE TABLE PSGINST1.TXN_CME_AUDIT_STG 
   (	MSG_ID VARCHAR2(100), 
	MSG_UNQ_ID VARCHAR2(750), 
	MSG_PROCESSED_TS TIMESTAMP (6), 
	INTRFC_PRTNR_SYS_ID VARCHAR2(30), 
	CORRL_ID VARCHAR2(100), 
	SRC_MSG_ID VARCHAR2(100), 
	AUDITING_SYSTEM VARCHAR2(100), 
	AUDITING_SYS_COMPONENT VARCHAR2(100), 
	AUDITING_USER_ID VARCHAR2(100), 
	MSG_DIRECTION CHAR(1), 
	COMPONENT_ID NUMBER(*,0), 
	SYSTEM_NETWK_LOCN VARCHAR2(3), 
	CME_SRC_APPLCN_NAME VARCHAR2(30), 
	CME_INTRFC_ID VARCHAR2(20), 
	CME_INTRFC_NAME VARCHAR2(50), 
	CME_PAYLOAD_NAME VARCHAR2(50), 
	MISC_DATA VARCHAR2(3000), 
	SYS_INSERT_TSTMP TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   )
   PARTITION BY RANGE (MSG_PROCESSED_TS) 
INTERVAL(numtodsinterval(1,'day')) 
( PARTITION p0 VALUES LESS THAN (TO_DATE('01-01-2000', 'DD-MM-YYYY')) ) 
TABLESPACE <TS name>   NOLOGGING;

ALTER TABLE PSGINST1.TXN_CME_AUDIT_STG MODIFY (SYS_INSERT_TSTMP NOT NULL ENABLE);

CREATE UNIQUE INDEX PSGINST1.CME_AUDIT_STG_PK ON PSGINST1.TXN_CME_AUDIT_STG(MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID,MSG_DIRECTION ) LOCAL TABLESPACE <TS NAME> NOLOGGING;

ALTER TABLE PSGINST1.TXN_CME_AUDIT_STG ADD CONSTRAINT CME_AUDIT_STG_PK PRIMARY KEY (MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID,MSG_DIRECTION ) USING INDEX ENABLE;

###### ###### ###### ######	STEP - 2		###### ###### ###### ######  
-- Stop  Audit Queue flow 
###### ###### ###### ######		######  ######	###### ###### ###### ###### 
--These commands needs to executed as mqm user ($QM is Broker Name)  


###### ###### ###### ######	STEP - 3		###### ###### ###### ######  
-- Export Backup of table TXN_CME_AUDIT 
###### ###### ###### ######		######  ######	###### ###### ###### ###### 

###### ###### ###### ######	STEP - 4		###### ###### ###### ######  
-- Import data only of table TXN_CME_AUDIT into TXN_CME_AUDIT_STG and check count
###### ###### ###### ######		######  ######	###### ###### ###### ###### 

select count(*) from s2eminst1.TXN_CME_AUDIT_HIST;

select count(*) from s2eminst1.TXN_CME_AUDIT_STG;


###### ###### ###### ######	STEP - 5		###### ###### ###### ######  
-- Rename live table, indexes and constraints to old and stg to live
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

rename TXN_CME_AUDIT to TXN_CME_AUDIT_OLD;

alter table PSGINST1.TXN_CME_AUDIT rename constraint CME_AUDIT_PK to CME_AUDIT_OLD_PK;

alter index PSGINST1.CME_AUDIT_PK rename to CME_AUDIT_OLD_PK;

rename TXN_CME_AUDIT_STG to TXN_CME_AUDIT;

alter table PSGINST1.TXN_CME_AUDIT_STG rename constraint CME_AUDIT_STG_PK to CME_AUDIT_PK;

alter index PSGINST1.CME_AUDIT_STG_PK rename to CME_AUDIT_PK;

grant select on PSGINST1.TXN_CME_AUDIT to PSGINST_RO;

grant select,insert,update,delete on PSGINST1.TXN_CME_AUDIT to PSGINST_RW;

###### ###### ###### ######	STEP - 6		###### ###### ###### ######  
-- Start  Audit Queue flow 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 


--These commands needs to executed as mqm user ($QM is Broker Name)  

###### ###### ###### ######	STEP - 7		###### ###### ###### ######  
-- Create a History Table used for data older than 7 days 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

CREATE TABLE PSGINST1.TXN_CME_AUDIT_HIST 
   (	MSG_ID VARCHAR2(100), 
	MSG_UNQ_ID VARCHAR2(750), 
	MSG_PROCESSED_TS TIMESTAMP (6), 
	INTRFC_PRTNR_SYS_ID VARCHAR2(30), 
	CORRL_ID VARCHAR2(100), 
	SRC_MSG_ID VARCHAR2(100), 
	AUDITING_SYSTEM VARCHAR2(100), 
	AUDITING_SYS_COMPONENT VARCHAR2(100), 
	AUDITING_USER_ID VARCHAR2(100), 
	MSG_DIRECTION CHAR(1), 
	COMPONENT_ID NUMBER(*,0), 
	SYSTEM_NETWK_LOCN VARCHAR2(3), 
	CME_SRC_APPLCN_NAME VARCHAR2(30), 
	CME_INTRFC_ID VARCHAR2(20), 
	CME_INTRFC_NAME VARCHAR2(50), 
	CME_PAYLOAD_NAME VARCHAR2(50), 
	MISC_DATA VARCHAR2(3000), 
	SYS_INSERT_TSTMP TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   )
   PARTITION BY RANGE (MSG_PROCESSED_TS) 
INTERVAL(numtodsinterval(1,'day')) 
( PARTITION p0 VALUES LESS THAN (TO_DATE('01-01-2000', 'DD-MM-YYYY')) ) 
TABLESPACE <TS name>   NOLOGGING;

ALTER TABLE PSGINST1.TXN_CME_AUDIT_HIST MODIFY (SYS_INSERT_TSTMP NOT NULL ENABLE);

CREATE UNIQUE INDEX PSGINST1.CME_AUDIT_HIST_PK ON PSGINST1.TXN_CME_AUDIT_HIST(MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID,MSG_DIRECTION ) LOCAL TABLESPACE <TS NAME> NOLOGGING;

ALTER TABLE PSGINST1.TXN_CME_AUDIT_HIST ADD CONSTRAINT CME_AUDIT_HIST_PK PRIMARY KEY (MSG_PROCESSED_TS, INTRFC_PRTNR_SYS_ID,MSG_ID,MSG_DIRECTION ) USING INDEX ENABLE;


grant select on PSGINST1.TXN_CME_AUDIT_HIST to PSGINST_RO;

grant select,insert,update,delete on PSGINST1.TXN_CME_AUDIT_HIST to PSGINST_RW;

###### ###### ###### ######	STEP - 8		###### ###### ###### ######  
-- Create database procedure for moving data from 
-- Live to History and drop empty partition.
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

CREATE OR REPLACE PROCEDURE PSGINST1.MOV_PART_TO_HIST (no_day in number) is
V_PART_DT varchar(31) := 'TIMESTAMP '''||TO_CHAR(systimestamp - no_day,'YYYY-MM-DD')||' 00:00:00''';
V_PART_NAME varchar(10) := 'P'||TO_CHAR(systimestamp - no_day,'DDMMYYYY');
begin
execute immediate 'alter table TXN_CME_AUDIT exchange partition for ('||V_PART_DT||') with table TXN_CME_AUDIT_STG INCLUDING INDEXES without validation' ;
execute immediate 'lock table TXN_CME_AUDIT_HIST partition for ('||V_PART_DT||') in share mode';
execute immediate 'alter table TXN_CME_AUDIT_HIST exchange partition for ('||V_PART_DT||') with table TXN_CME_AUDIT_STG INCLUDING INDEXES without validation';
execute immediate 'ALTER TABLE TXN_CME_AUDIT DROP partition for ('||V_PART_DT||')';
execute immediate 'ALTER TABLE TXN_CME_AUDIT_HIST move partition for ('||V_PART_DT||') UPDATE INDEXES tablespace S2EMINST1_HIST NOLOGGING';
execute immediate 'ALTER TABLE TXN_CME_AUDIT_HIST RENAME PARTITION for ('||V_PART_DT||') TO '||V_PART_NAME;
END MOV_PART_TO_HIST;
/


###### ###### ###### ######	STEP - 8		###### ###### ###### ######  
-- Run the procedure for all days greater than 7 

### ###### ###### ######	######  ######	###### ###### ###### ###### 

###### ###### ###### ######	STEP - 9		###### ###### ###### ######  
-- Gather Stats for tables 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 


EXEC DBMS_STATS.gather_table_stats('PSGINST1', 'TXN_CME_AUDIT_HIST', cascade => TRUE);


select TABLE_NAME,PARTITION_NAME,TABLESPACE_NAME, HIGH_VALUE,NUM_ROWS from DBA_TAB_PARTITIONS 
where TABLE_NAME='TXN_CME_AUDIT_HIST' order by partition_position;

EXEC DBMS_STATS.gather_table_stats('PSGINST1', 'TXN_CME_AUDIT', cascade => TRUE);

select TABLE_NAME,PARTITION_NAME,TABLESPACE_NAME, HIGH_VALUE,NUM_ROWS from DBA_TAB_PARTITIONS 
where TABLE_NAME='TXN_CME_AUDIT'
order by PARTITION_POSITION;  



###### ###### ###### ######	STEP - 10		###### ###### ###### ######  
-- Create and schedule job to run above procedure 	
###### ###### ###### ######	######  ######	###### ###### ###### ###### 
-- create a program with all job arguments

BEGIN
dbms_scheduler.create_program
(
program_name=>'PRG_MOV_PART',
program_action=>'PSGINST1.MOV_PART_TO_HIST',
program_type=>'STORED_PROCEDURE',
number_of_arguments=>1,
enabled=>FALSE,
comments       => 'Program fro Partition Move');
END;
/

col OWNER format a10
col PROGRAM_ACTION format a70
col COMMENTS format a70
SELECT owner, program_name, program_type, program_action, enabled, comments
FROM dba_scheduler_programs;

-- set program argument

SELECT overload, position, argument_name, data_type FROM dba_arguments
WHERE object_name = 'MOV_PART_TO_HIST';
 

BEGIN
dbms_scheduler.DEFINE_PROGRAM_ARGUMENT(
program_name=>'PRG_MOV_PART',
argument_position=>1,
argument_type=>'NUMBER',
DEFAULT_VALUE=>'8');  
END;
/
 

col DEFAULT_VALUE format a50
col ARGUMENT_TYPE format a20
SELECT program_name, argument_name, argument_position, argument_type, default_value
FROM dba_scheduler_program_args where PROGRAM_NAME='PRG_MOV_PART';
 
-- create job

BEGIN
   dbms_scheduler.create_job(
   job_name => 'JOB_MOV_PART',
   program_name => 'PRG_MOV_PART',
   start_date => dbms_scheduler.stime,
   repeat_interval => 'freq=daily;byhour=00;byminute=30',
   end_date        => NULL,
   enabled => FALSE,
   auto_drop => FALSE,
   comments => 'Job for Moving Partition');
END;
/

col PROGRAM_NAME format a70
col START_DATE format a70 
SELECT job_name, program_name, start_date, ENABLED FROM dba_scheduler_jobs;

###### ###### ###### ######	STEP - 11		###### ###### ###### ######  
-- Create and schedule job to run above procedure 
###### ###### ###### ######	######  ######	###### ###### ###### ###### 

-- enable the program

exec dbms_scheduler.enable('PRG_MOV_PART');

-- enable the job

exec dbms_scheduler.enable('JOB_MOV_PART');
 
-- test the job

exec dbms_scheduler.set_job_argument_value('JOB_MOV_PART',1,'8');

exec dbms_scheduler.run_job('JOB_MOV_PART', TRUE);

col JOB_NAME format a30
col OPERATION format a30 
SELECT job_name, operation, status, additional_info FROM dba_scheduler_job_log where job_name='JOB_MOV_PART';
 
SELECT job_name, state, run_count, next_run_date FROM dba_scheduler_jobs where JOB_NAME='JOB_MOV_PART';



###### ###### ###### ######	BACKOUT STEPS	###### ###### ###### ######  
-- Steps performed to Backout 
###### ###### ###### ###### ###### ###### ###### ###### ###### ###### 

We would come to know of any issue immediately when we start the flow in implementation step# 5.
The audit  messages will start going into the exception .To revert to original state, we follow following steps 
--Stop  Audit Queue flow 

--These commands needs to executed as mqm user ($QM is Broker Name)  


--Drop the newly created live table, indexes and constraints to Old.

Drop table  TXN_CME_AUDIT;

--Import the table from export backup

--Start  Audit Queue flow

--These commands needs to executed as mqm user ($QM is Broker Name)  


--Replay the Audit Messages which went into exception

--These commands needs to executed by the EM Support team  



##########################################################################################################################################################################
IBM PMR ..... best way is runmqras    - it creates and takes all the files necessary 


qload based on search option
qload -m <qmgr> -I input queue -f file -s ''




###################################################ecom broker stats ########################

echo "DEFINE QLOCAL(INT_BROKER_STATS_DATA) BOQNAME('SYS_FAILURE') BOTHRESH(1) DESCR('ECOM SYNC BROKER STATS QUEUE') DISTL(NO) MAXDEPTH(5000000) QDEPTHLO(20) QDPHIEV(ENA
BLED) QDEPTHHI(80) QDPMAXEV(ENABLED) REPLACE | runmqsc $QM
echo "DEFINE SUB(BROKER_STATS) TOPICSTR('\$SYS/Broker/$QM/StatisticsAccounting/SnapShot/#')  WSCHEMA(TOPIC) DEST(INT_BROKER_STATS_DATA) REPLACE" | runmqsc $QM

mqsichangeflowstats $QM -s -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP04 -k CUS004 -f com.mns.ms.cus004.CUS004_CUS_PREF_WCS_EXT_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP05 -k DEL001 -f com.mns.ms.del001.DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP05 -k DEL002 -f com.mns.ms.del002.DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP04 -k INV005 -f com.mns.ms.inv005.INV005_RSRV_REL_STK_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP03 -k INV008 -f com.mns.ms.inv008.INV008_ATP_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP02 -k INV008 -f com.mns.ms.inv008.INV008_NDD_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP01 -k MAP001 -f com.mns.ms.map001.MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_AMND_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP04 -k ORD007 -f com.mns.ms.ord007.ORD007_ORD_HISTORY_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active
mqsichangeflowstats $QM -s -e MCFP05 -k ORD008 -f com.mns.ms.ord008.ORD008_ORD_DETAIL_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active




###############off

mqsichangeflowstats $QM -s -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00 -c inactive
mqsichangeflowstats $QM -s -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP04 -k CUS004 -f com.mns.ms.cus004.CUS004_CUS_PREF_WCS_EXT_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP05 -k DEL001 -f com.mns.ms.del001.DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP05 -k DEL002 -f com.mns.ms.del002.DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP04 -k INV005 -f com.mns.ms.inv005.INV005_RSRV_REL_STK_WCS_OMS_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP03 -k INV008 -f com.mns.ms.inv008.INV008_ATP_WCS_OMS_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP02 -k INV008 -f com.mns.ms.inv008.INV008_NDD_WCS_OMS_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP01 -k MAP001 -f com.mns.ms.map001.MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_AMND_WCS_OMS_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP04 -k ORD007 -f com.mns.ms.ord007.ORD007_ORD_HISTORY_WCS_OMS_V001_00_00  -c inactive
mqsichangeflowstats $QM -s -e MCFP05 -k ORD008 -f com.mns.ms.ord008.ORD008_ORD_DETAIL_WCS_OMS_V001_00_00  -c inactive




###################################wmbstata code


/********************************************************************************************************************************/
/* Procedure..:	WMBSTATS_Processor        																						*/
/*	     	  :																													*/
/* Purpose....:	Decompose the Message Broker generated multi-level XML statistics record into its constituent parts for			*/
/*	          :	subsequent processing as appropriate.																			*/
/*	  	      :																													*/
/* Parameters.:	NONE																											*/
/*	     	  :																													*/
/* Author.....: Alasdhair Buchanan																								*/
/* Department.: IBM ISSW, UK&I																									*/
/* Company....: IBM United Kingdom Ltd.																							*/
/*	      	  :																													*/	
/* Changes....: Version |   Date   | Inits. | Description																		*/
/*	     	  :	  1.00	 04/09/2012   AMB     Initial version																	*/
/*	    	  :																													*/
/* Notes......: None																											*/
/*	      	  :																													*/
/* Copyright..: IBM United Kingdom Limited, 2012																				*/
/********************************************************************************************************************************/
CREATE COMPUTE MODULE WMBSTATS_Processor_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
/* Don't need the payload in the output */
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE version CHARACTER 'V-1.00';
		DECLARE copyright CHARACTER 'IBM United Kingdom Limited, 2012';
		DECLARE Origin CHARACTER;
		DECLARE StartDate CHARACTER;
		DECLARE StartTime CHARACTER;
		DECLARE EndDate CHARACTER;
		DECLARE EndTime CHARACTER;
		DECLARE QueueManager CHARACTER;
        DECLARE Broker CHARACTER;
       	DECLARE ExecutionGroup CHARACTER;
		DECLARE MsgFlow CHARACTER;
		DECLARE NodeName CHARACTER;
		DECLARE destQ CHARACTER;	
		DECLARE outputtype CHARACTER; 
		DECLARE termDataProcessed BOOLEAN;	
		DECLARE threadDataProcessed BOOLEAN;	
		DECLARE inRef REFERENCE TO InputRoot.XMLNSC.WMQIStatisticsAccounting;
	
		
/* Lose the RFH2 header */
		DELETE FIELD OutputRoot.MQRFH2;
		
/* High level (One per message) */
		MOVE inRef FIRSTCHILD NAME 'MessageFlow';
		IF LASTMOVE(inRef) 
		THEN
		
/* Assume we found a MessageFlow */
/* Set message type, save common data */
			SET outputtype = 'MessageFlowMsg';
			SET Origin = inRef.AccountingOrigin;
			SET StartDate = inRef.StartDate;
			SET StartTime = inRef.StartTime;
			SET EndDate = inRef.EndDate;
			SET EndTime = inRef.EndTime;
			SET QueueManager = TRIM(InputRoot.MQMD.ReplyToQMgr);
			SET Broker = inRef.BrokerLabel;
			SET ExecutionGroup = inRef.ExecutionGroupName;
			SET MsgFlow = inRef.MessageFlowName;
			
/* Set up start of first output message */
			SET OutputRoot.MRM.StatisticsType = 'MessageFlow';
			SET OutputRoot.MRM.Origin = Origin;
			SET OutputRoot.MRM.StartDate = StartDate;
			SET OutputRoot.MRM.StartTime = StartTime;
			SET OutputRoot.MRM.EndDate = EndDate;
			SET OutputRoot.MRM.EndTime = EndTime;
			SET OutputRoot.MRM.QueueManager = QueueManager;
			SET OutputRoot.MRM.Broker = Broker;
			SET OutputRoot.MRM.ExecutionGroup = ExecutionGroup;
			SET OutputRoot.MRM.MessageFlow = MsgFlow;
				
/* Build the MessageFlow output message body */
			IF inRef.TotalInputMessages IS NULL THEN
				SET OutputRoot.MRM.MessageCount = 0;
			ELSE	
				SET OutputRoot.MRM.MessageCount = inRef.TotalInputMessages;
			END IF;
			IF inRef.MinimumElapsedTime IS NULL THEN
				SET OutputRoot.MRM.MinimumElapsed = 0;
			ELSE	
				SET OutputRoot.MRM.MinimumElapsed = inRef.MinimumElapsedTime;
			END IF;
			IF inRef.MaximumElapsedTime IS NULL THEN
				SET OutputRoot.MRM.MaximumElapsed = 0;
			ELSE	
				SET OutputRoot.MRM.MaximumElapsed = inRef.MaximumElapsedTime;
			END IF;
			IF inRef.TotalElapsedTime IS NULL THEN
				SET OutputRoot.MRM.TotalElapsed = 0;
			ELSE	
				SET OutputRoot.MRM.TotalElapsed = inRef.TotalElapsedTime;
			END IF;
			IF inRef.MinimumCPUTime IS NULL THEN
				SET OutputRoot.MRM.MinimumCPU = 0;
			ELSE	
				SET OutputRoot.MRM.MinimumCPU = inRef.MinimumCPUTime;
			END IF;
			IF inRef.MaximumCPUTime IS NULL THEN
				SET OutputRoot.MRM.MaximumCPU = 0;
			ELSE	
				SET OutputRoot.MRM.MaximumCPU = inRef.MaximumCPUTime;
			END IF;
			IF inRef.TotalCPUTime IS NULL THEN
				SET OutputRoot.MRM.TotalCPU = 0;
			ELSE	
				SET OutputRoot.MRM.TotalCPU = inRef.TotalCPUTime;
			END IF;
			IF inRef.CPUTimeWaitingForInputMessage IS NULL THEN
				SET OutputRoot.MRM.WaitCPU = 0;
			ELSE	
				SET OutputRoot.MRM.WaitCPU = inRef.CPUTimeWaitingForInputMessage;
			END IF;
			IF inRef.ElapsedTimeWaitingForInputMessage IS NULL THEN
				SET OutputRoot.MRM.WaitElapsed = 0;
			ELSE	
				SET OutputRoot.MRM.WaitElapsed = inRef.ElapsedTimeWaitingForInputMessage;
			END IF;
			IF inRef.MinimumSizeOfInputMessages IS NULL THEN
				SET OutputRoot.MRM.MinimumMessageSize = 0;
			ELSE	
				SET OutputRoot.MRM.MinimumMessageSize = inRef.MinimumSizeOfInputMessages;
			END IF;
			IF inRef.MaximumSizeOfInputMessages IS NULL THEN
				SET OutputRoot.MRM.MaximumMessageSize = 0;
			ELSE	
				SET OutputRoot.MRM.MaximumMessageSize = inRef.MaximumSizeOfInputMessages;
			END IF;
			IF inRef.TotalSizeOfInputMessages IS NULL THEN
				SET OutputRoot.MRM.TotalMessageSize = 0;
			ELSE	
				SET OutputRoot.MRM.TotalMessageSize = inRef.TotalSizeOfInputMessages;
			END IF;
			IF inRef.TotalNumberOfMQErrors IS NULL THEN
				SET OutputRoot.MRM.WMQErrors = 0;
			ELSE	
				SET OutputRoot.MRM.WMQErrors = inRef.TotalNumberOfMQErrors;
			END IF;
			IF inRef.TotalNumberOfMessagesWithErrors IS NULL THEN
				SET OutputRoot.MRM.MessageErrors = 0;
			ELSE	
				SET OutputRoot.MRM.MessageErrors = inRef.TotalNumberOfMessagesWithErrors;
			END IF;
			IF inRef.TotalNumberOfErrorsProcessingMessages IS NULL THEN
				SET OutputRoot.MRM.ErrorsProcessed = 0;
			ELSE	
				SET OutputRoot.MRM.ErrorsProcessed = inRef.TotalNumberOfErrorsProcessingMessages;
			END IF;
			IF inRef.TotalNumberOfTimeOutsWaitingForRepliesToAggregateMessages IS NULL THEN
				SET OutputRoot.MRM.AggregateTimeOuts = 0;
			ELSE	
				SET OutputRoot.MRM.AggregateTimeOuts = inRef.TotalNumberOfTimeOutsWaitingForRepliesToAggregateMessages;
			END IF;
			IF inRef.TotalNumberOfCommits IS NULL THEN
				SET OutputRoot.MRM.CommitCount = 0;
			ELSE	
				SET OutputRoot.MRM.CommitCount = inRef.TotalNumberOfCommits;
			END IF;
			IF inRef.TotalNumberOfBackouts IS NULL THEN
				SET OutputRoot.MRM.BackoutCount = 0;
			ELSE	
				SET OutputRoot.MRM.BackoutCount = inRef.TotalNumberOfBackouts;
			END IF;
			IF inRef.NumbeOfThreadsInPool IS NULL THEN
				SET OutputRoot.MRM.ThreadCount = 0;
			ELSE	
				SET OutputRoot.MRM.ThreadCount = inRef.NumbeOfThreadsInPool;
			END IF;
			IF inRef.TimesMaximumNumberOfThreadsReached IS NULL THEN
				SET OutputRoot.MRM.ThreadsMaxd = 0;
			ELSE	
				SET OutputRoot.MRM.ThreadsMaxd = inRef.TimesMaximumNumberOfThreadsReached;
			END IF;
		/* No data - no output */
				SET OutputLocalEnvironment.DataProcessed = 'YES';
				CALL WriteMessageToQ(outputtype);
			
		END IF;
		
	/* Process Thread data */
--		SET threadDataProcessed = FALSE;
--		MOVE inRef NEXTSIBLING NAME 'Threads';
--		IF LASTMOVE(inRef)
--		THEN
--			MOVE inRef FIRSTCHILD NAME 'ThreadStatistics';
--			/* Thread Statistics Loop */
--			WHILE LASTMOVE(inRef) 
--			DO
--				SET threadDataProcessed = TRUE;
--                SET outputtype = 'ThreadMsg'; 
--				SET OutputRoot.MRM.StatisticsType = 'Thread';
--				SET OutputRoot.MRM.Origin = Origin;
--				SET OutputRoot.MRM.StartDate = StartDate;
--				SET OutputRoot.MRM.StartTime = StartTime;
--				SET OutputRoot.MRM.EndDate = EndDate;
--				SET OutputRoot.MRM.EndTime = EndTime;
--				SET OutputRoot.MRM.QueueManager = QueueManager;
--				SET OutputRoot.MRM.Broker = Broker;
--				SET OutputRoot.MRM.ExecutionGroup = ExecutionGroup;
--				SET OutputRoot.MRM.MessageFlow = MsgFlow;
--				SET OutputRoot.MRM.ThreadNumber = inRef.Number;
--				IF inRef.TotalNumberOfInputMessages IS NULL THEN
--					SET OutputRoot.MRM.MessageCount = 0;
--				ELSE	
--					SET OutputRoot.MRM.MessageCount = inRef.TotalNumberOfInputMessages;
--				END IF;
--				IF inRef.TotalElapsedTime IS NULL THEN
--					SET OutputRoot.MRM.TotalElapsed = 0;
--				ELSE	
--					SET OutputRoot.MRM.TotalElapsed = inRef.TotalElapsedTime;
--				END IF;
--				IF inRef.TotalCPUTime IS NULL THEN
--					SET OutputRoot.MRM.TotalCPU = 0;
--				ELSE	
--					SET OutputRoot.MRM.TotalCPU = inRef.TotalCPUTime;
--				END IF;
--				IF inRef.CPUTimeWaitingForInputMessage IS NULL THEN
--					SET OutputRoot.MRM.WaitCPU = 0;
--				ELSE	
--					SET OutputRoot.MRM.WaitCPU = inRef.CPUTimeWaitingForInputMessage;
--				END IF;
--				IF inRef.ElapsedTimeWaitingForInputMessage IS NULL THEN
--					SET OutputRoot.MRM.WaitElapsed = 0;
--				ELSE	
--					SET OutputRoot.MRM.WaitElapsed = inRef.ElapsedTimeWaitingForInputMessage;
--				END IF;
--				IF inRef.MinimumSizeOfInputMessages IS NULL THEN
--					SET OutputRoot.MRM.MinimumMessageSize = 0;
--				ELSE	
--					SET OutputRoot.MRM.MinimumMessageSize = inRef.MinimumSizeOfInputMessages;
--				END IF;
--				IF inRef.MaximumSizeOfInputMessages IS NULL THEN
--					SET OutputRoot.MRM.MaximumMessageSize = 0;
--				ELSE	
--					SET OutputRoot.MRM.MaximumMessageSize = inRef.MaximumSizeOfInputMessages;
--				END IF;
--				IF inRef.TotalSizeOfInputMessages IS NULL THEN
--					SET OutputRoot.MRM.TotalMessageSize = 0;
--				ELSE	
--					SET OutputRoot.MRM.TotalMessageSize = inRef.TotalSizeOfInputMessages;
--				END IF;
--				
--				SET OutputLocalEnvironment.DataProcessed = 'YES';
--				CALL WriteMessageToQ(outputtype);
--				
--				MOVE inRef NEXTSIBLING NAME 'Threadstatistics';	
--			/* Thread Statistics Loop */
--			END WHILE;
--		/* Threads */		
--		END IF;	
--				
--	/* If there was thread data, go up the tree 1 level */	
--		IF threadDataProcessed  
--		THEN
--	 		MOVE inRef PARENT;
--		END IF;				
--						
--		MOVE inRef NEXTSIBLING NAME 'Nodes';
--		IF LASTMOVE(inRef)
--		THEN
--			MOVE inRef FIRSTCHILD NAME 'NodeStatistics';
--			/* NodeStatistics Loop */
--			WHILE LASTMOVE(inRef) 
--			DO
--				SET termDataProcessed = FALSE;
--                SET outputtype = 'NodeMsg'; 
--				SET NodeName = inRef.Label;
--				SET OutputRoot.MRM.StatisticsType = 'Node';
--				SET OutputRoot.MRM.Origin = Origin;
--				SET OutputRoot.MRM.StartDate = StartDate;
--				SET OutputRoot.MRM.StartTime = StartTime;
--				SET OutputRoot.MRM.EndDate = EndDate;
--				SET OutputRoot.MRM.EndTime = EndTime;
--				SET OutputRoot.MRM.QueueManager = QueueManager;
--				SET OutputRoot.MRM.Broker = Broker;
--				SET OutputRoot.MRM.ExecutionGroup = ExecutionGroup;
--				SET OutputRoot.MRM.MessageFlow = MsgFlow;
--				SET OutputRoot.MRM.Node = NodeName;
--				IF inRef.CountOfInvocations IS NULL THEN
--					SET OutputRoot.MRM.MessageCount = 0;
--				ELSE	
--					SET OutputRoot.MRM.MessageCount = inRef.CountOfInvocations;
--				END IF;
--				IF inRef.MinimumElapsedTime IS NULL THEN
--					SET OutputRoot.MRM.MinimumElapsed = 0;
--				ELSE	
--					SET OutputRoot.MRM.MinimumElapsed = inRef.MinimumElapsedTime;
--				END IF;
--				IF inRef.MaximumElapsedTime IS NULL THEN
--					SET OutputRoot.MRM.MaximumElapsed = 0;
--				ELSE	
--					SET OutputRoot.MRM.MaximumElapsed = inRef.MaximumElapsedTime;
--				END IF;
--				IF inRef.TotalElapsedTime IS NULL THEN
--					SET OutputRoot.MRM.TotalElapsed = 0;
--				ELSE	
--					SET OutputRoot.MRM.TotalElapsed = inRef.TotalElapsedTime;
--				END IF;
--				IF inRef.MinimumCPUTime IS NULL THEN
--					SET OutputRoot.MRM.MinimumCPU = 0;
--				ELSE	
--					SET OutputRoot.MRM.MinimumCPU = inRef.MinimumCPUTime;
--				END IF;
--				IF inRef.MaximumCPUTime IS NULL THEN
--					SET OutputRoot.MRM.MaximumCPU = 0;
--				ELSE	
--					SET OutputRoot.MRM.MaximumCPU = inRef.MaximumCPUTime;
--				END IF;
--				IF inRef.TotalCPUTime IS NULL THEN
--					SET OutputRoot.MRM.TotalCPU = 0;
--				ELSE	
--					SET OutputRoot.MRM.TotalCPU = inRef.TotalCPUTime;
--				END IF;
--				IF inRef.NumberOfOutputTerminals IS NULL THEN
--					SET OutputRoot.MRM.OutputTerminals = 0;
--				ELSE	
--					SET OutputRoot.MRM.OutputTerminals = inRef.NumberOfOutputTerminals;
--				END IF;
--				IF inRef.NumberOfInputTerminals IS NULL THEN
--					SET OutputRoot.MRM.InputTerminals = 0;
--				ELSE	
--					SET OutputRoot.MRM.InputTerminals = inRef.NumberOfInputTerminals;
--				END IF;
--				
--				SET OutputLocalEnvironment.DataProcessed = 'YES';
--				CALL WriteMessageToQ(outputtype);
--				
--				MOVE inRef FIRSTCHILD NAME 'TerminalStatistics';
--				/* TerminalStatistics Loop */
--				WHILE LASTMOVE(inRef) 
--				DO
--					SET termDataProcessed = TRUE;
--					SET outputtype = 'TerminalMsg';
--					SET OutputRoot.MRM.StatisticsType = 'Terminal';
--					SET OutputRoot.MRM.Origin = Origin;
--					SET OutputRoot.MRM.StartDate = StartDate;
--					SET OutputRoot.MRM.StartTime = StartTime;
--					SET OutputRoot.MRM.EndDate = EndDate;
--					SET OutputRoot.MRM.EndTime = EndTime;
--					SET OutputRoot.MRM.QueueManager = QueueManager;
--					SET OutputRoot.MRM.Broker = Broker;
--					SET OutputRoot.MRM.ExecutionGroup = ExecutionGroup;
--					SET OutputRoot.MRM.MessageFlow = MsgFlow;
--					SET OutputRoot.MRM.Node = NodeName;
--					SET OutputRoot.MRM.Terminal = inRef.Label;
--					SET OutputRoot.MRM.TerminalType = inRef.Type;
--					IF inRef.CountOfInvocations IS NULL THEN
--						SET OutputRoot.MRM.MessageCount = 0;
--					ELSE	
--						SET OutputRoot.MRM.MessageCount = inRef.CountOfInvocations;
--					END IF;
--				
--					SET OutputLocalEnvironment.DataProcessed = 'YES';
--					CALL WriteMessageToQ(outputtype);
--				
--					MOVE inRef NEXTSIBLING NAME 'TerminalStatistics';	
--				/* TerminalStatistics Loop */
--				END WHILE;				
--				IF termDataProcessed  
--				THEN
--			 		MOVE inRef PARENT;
--				END IF;				
--				MOVE inRef NEXTSIBLING NAME 'NodeStatistics';	
--			/* NodeStatistics Loop */
--			END WHILE;
--		/* Nodes */		
--		END IF;	
--			
--		RETURN FALSE;
--		
	END;


/********************************************************************************************************************************/
/* Procedure..:	WriteMessageToQ																									*/
/*	     	  :																													*/
/* Purpose....:	Write a decomposed message broker statistics record to the appropriate queue in XML format.				 		*/
/*	  	      :																													*/
/* Parameters.:	outq	- Character - Destination queue name																	*/
/*	      	  :	msgtype	- Character - Message type identifier																	*/
/*	     	  :																													*/
/* Author.....: Alasdhair Buchanan																								*/
/* Department.: IBM ISSW, UK&I 																									*/
/* Company....: IBM United Kingdom Ltd.																							*/
/*	      	  :																													*/	
/* Changes....: Version |   Date   | Inits. | Description																		*/
/*	     	  :	  1.00	 04/09/2012   AMB     Initial version																	*/
/*	    	  :																													*/
/* Notes......: None																											*/
/*	      	  :																													*/
/* Copyright..: IBM United Kingdom Limited, 2007																				*/
/********************************************************************************************************************************/
	CREATE PROCEDURE WriteMessageToQ(IN msgtype CHAR)
	BEGIN
		
/* Set message properties */
        SET OutputRoot.Properties.MessageSet = 'WMB_StatsMsgSet';
        SET OutputRoot.Properties.MessageType = msgtype;
        SET OutputRoot.Properties.MessageFormat = 'CSV1';
		SET OutputRoot.MQMD.Format = 'MQSTR';
		
/* Write the message */
		PROPAGATE;
		
/* Set up for the next message */
		CALL CopyMessageHeaders();
		DELETE FIELD OutputRoot.MQRFH2;
	END; 
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


/********************************************************************************************************************************/
/* Procedure..:	WMBSTATS_Processor_Test_for_Data                                                                                */
/*	     	  :																													*/
/* Purpose....:	Only flag message for output if there is data.              													*/
/*	  	      :																													*/
/* Parameters.:	NONE																											*/
/*	     	  :																													*/
/* Author.....: Alasdhair Buchanan																								*/
/* Department.: IBM ISSW, UK&I																									*/
/* Company....: IBM United Kingdom Ltd.																							*/
/*	      	  :																													*/	
/* Changes....: Version |   Date   | Inits. | Description																		*/
/*	     	  :	  1.00	 04/09/2012   AMB     Initial version																	*/
/*	    	  :																													*/
/* Notes......: None																											*/
/*	      	  :																													*/
/* Copyright..: IBM United Kingdom Limited, 2012																				*/
/********************************************************************************************************************************/
CREATE FILTER MODULE WMBSTATS_Processor_Test_for_Data
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CASE LocalEnvironment.DataProcessed 
			WHEN 'YES'
			THEN	
				RETURN TRUE;
			WHEN('NO')
			THEN
				RETURN FALSE;	
			WHEN('DUMP')
			THEN
				RETURN FALSE;	
			ELSE	
				THROW USER EXCEPTION MESSAGE 3001 VALUES('A theoretically impossible situation has occurred....');
		END CASE;
	END;

END MODULE;
###########################

<WMQIStatisticsAccounting RecordType="SnapShot" RecordCode="SnapShot">
 <MessageFlow BrokerLabel="C1EMBK01" BrokerUUID="ccff50ea-5eaf-11e3-826c-0a6899370000" ExecutionGroupName="MCFP02" ExecutionGroupUUID="236078c9-4201-0000-0080-ac2284343ffb" MessageFlowName="com.mns.ms.ord004.ORD004_DC_STERLING_MS_V001_00_00" ApplicationName="ORD004" StartDate="2013-12-23" StartTime="12:53:50.771936" EndDate="2013-12-23" EndTime="12:54:11.761704" TotalElapsedTime="54100" MaximumElapsedTime="17141" MinimumElapsedTime="10052" TotalCPUTime="24998" MaximumCPUTime="10999" MinimumCPUTime="4000" CPUTimeWaitingForInputMessage="19999" ElapsedTimeWaitingForInputMessage="20934131" TotalInputMessages="4" TotalSizeOfInputMessages="4772" MaximumSizeOfInputMessages="1193" MinimumSizeOfInputMessages="1193" NumberOfThreadsInPool="1" TimesMaximumNumberOfThreadsReached="4" TotalNumberOfMQErrors="0" TotalNumberOfMessagesWithErrors="0" TotalNumberOfErrorsProcessingMessages="0" TotalNumberOfTimeOutsWaitingForRepliesToAggregateMessages="0" TotalNumberOfCommits="4" TotalNumberOfBackouts="0" AccountingOrigin="Anonymous"/>
 <Threads Number="1">
  <ThreadStatistics Number="36" TotalNumberOfInputMessages="4" TotalElapsedTime="54100" TotalCPUTime="24998" CPUTimeWaitingForInputMessage="19999" ElapsedTimeWaitingForInputMessage="20934131" TotalSizeOfInputMessages="4772" MaximumSizeOfInputMessages="1193" MinimumSizeOfInputMessages="1193"/>
 </Threads>
 <Nodes Number="0"/>
</WMQIStatisticsAccounting>



################################################# configurable service ######################################################################
#!/bin/bash
##########################################################################################
## Broker Deploy Script
##
## This script is used to run the Topic, subscription and the Profile scripts 
##for the Monitoring Profiles while deploying into any new Environment for
##the first time.
##
##########################################################################################

mkdir /home/mqm/Audit_Implementation/DEPLOYMENT_LOGS
log=/home/mqm/Audit_Implementation/DEPLOYMENT_LOGS/Deploy_$QM_`date +%Y%m%d-%H%M.log`

mkdir Audit_Implementation
cd Audit_Implementation
SYS='$SYS' 

############################################################################################


mqsicreateconfigurableservice $QM -c MonitoringProfiles -o ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o CUS004_CUS_PREF_WCS_EXT_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o INV005_RSRV_REL_STK_WCS_OMS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o INV008_ATP_WCS_OMS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o INV008_NDD_WCS_OMS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o ORD003_ORD_AMND_WCS_OMS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o ORD007_ORD_HISTORY_WCS_OMS_V001_00_00
mqsicreateconfigurableservice $QM -c MonitoringProfiles -o ORD008_ORD_DETAIL_WCS_OMS_V001_00_00


mqsistop $QM ; 
mqsistart $QM;
sleep 100;

echo "One time per an environment commands ends here "


mqsichangeproperties $QM -c MonitoringProfiles -o ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o CUS004_CUS_PREF_WCS_EXT_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/CUS004_CUS_PREF_WCS_EXT_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o INV005_RSRV_REL_STK_WCS_OMS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/INV005_RSRV_REL_STK_WCS_OMS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o INV008_ATP_WCS_OMS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/INV008_ATP_WCS_OMS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o INV008_NDD_WCS_OMS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/INV008_NDD_WCS_OMS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o ORD003_ORD_AMND_WCS_OMS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/ORD003_ORD_AMND_WCS_OMS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o ORD007_ORD_HISTORY_WCS_OMS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/ORD007_ORD_HISTORY_WCS_OMS_V001_00_00.xml
mqsichangeproperties $QM -c MonitoringProfiles -o ORD008_ORD_DETAIL_WCS_OMS_V001_00_00 -n profileProperties -p /var/mqsi/monitor_xmls/ORD008_ORD_DETAIL_WCS_OMS_V001_00_00.xml


mqsichangeproperties $QM -c MonitoringProfiles -o ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o CUS004_CUS_PREF_WCS_EXT_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o INV005_RSRV_REL_STK_WCS_OMS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o INV008_ATP_WCS_OMS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o INV008_NDD_WCS_OMS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o ORD003_ORD_AMND_WCS_OMS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o ORD007_ORD_HISTORY_WCS_OMS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE
mqsichangeproperties $QM -c MonitoringProfiles -o ORD008_ORD_DETAIL_WCS_OMS_V001_00_00 -n useParserNameInMonitoringPayload -v TRUE


mqsichangeflowmonitoring $QM -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00 -m ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00 -m ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP04 -k CUS004 -f com.mns.ms.cus004.CUS004_CUS_PREF_WCS_EXT_V001_00_00 -m CUS004_CUS_PREF_WCS_EXT_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP05 -k DEL001 -f com.mns.ms.del001.DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00 -m DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP05 -k DEL002 -f com.mns.ms.del002.DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00 -m DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP04 -k INV005 -f com.mns.ms.inv005.INV005_RSRV_REL_STK_WCS_OMS_V001_00_00 -m INV005_RSRV_REL_STK_WCS_OMS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP03 -k INV008 -f com.mns.ms.inv008.INV008_ATP_WCS_OMS_V001_00_00 -m INV008_ATP_WCS_OMS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP02 -k INV008 -f com.mns.ms.inv008.INV008_NDD_WCS_OMS_V001_00_00 -m INV008_NDD_WCS_OMS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP01 -k MAP001 -f com.mns.ms.map001.MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00 -m MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_AMND_WCS_OMS_V001_00_00 -m ORD003_ORD_AMND_WCS_OMS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00 -m ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00 -m ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP04 -k ORD007 -f com.mns.ms.ord007.ORD007_ORD_HISTORY_WCS_OMS_V001_00_00 -m ORD007_ORD_HISTORY_WCS_OMS_V001_00_00
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD008 -f com.mns.ms.ord008.ORD008_ORD_DETAIL_WCS_OMS_V001_00_00 -m ORD008_ORD_DETAIL_WCS_OMS_V001_00_00


mqsichangeflowmonitoring $QM -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_HTTP_RESPONSE.HTTP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP04 -k CUS004 -f com.mns.ms.cus004.CUS004_CUS_PREF_WCS_EXT_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP05 -k DEL001 -f com.mns.ms.del001.DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP05 -k DEL002 -f com.mns.ms.del002.DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP04 -k INV005 -f com.mns.ms.inv005.INV005_RSRV_REL_STK_WCS_OMS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP03 -k INV008 -f com.mns.ms.inv008.INV008_ATP_WCS_OMS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP02 -k INV008 -f com.mns.ms.inv008.INV008_NDD_WCS_OMS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP01 -k MAP001 -f com.mns.ms.map001.MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_AMND_WCS_OMS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP04 -k ORD007 -f com.mns.ms.ord007.ORD007_ORD_HISTORY_WCS_OMS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD008 -f com.mns.ms.ord008.ORD008_ORD_DETAIL_WCS_OMS_V001_00_00 -s "SF_AUDIT_VALIDATE_LOAD_CONFIG_INPUT.MAIN.terminal.out,SF_RESPONSE.SOAP Reply.terminal.in" -i enable


mqsichangeflowmonitoring $QM -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_OMS_EQAS_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP01 -k ADD001 -f com.mns.ms.add001.ADD001_VALIDATE_ADDRESS_WCS_EQAS_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP04 -k CUS004 -f com.mns.ms.cus004.CUS004_CUS_PREF_WCS_EXT_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP05 -k DEL001 -f com.mns.ms.del001.DEL001_GET_CONSIGNMENT_WCS_STERLING_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP05 -k DEL002 -f com.mns.ms.del002.DEL002_UPD_CONSIGNMENT_WCS_STERLING_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP04 -k INV005 -f com.mns.ms.inv005.INV005_RSRV_REL_STK_WCS_OMS_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP03 -k INV008 -f com.mns.ms.inv008.INV008_ATP_WCS_OMS_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP02 -k INV008 -f com.mns.ms.inv008.INV008_NDD_WCS_OMS_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP01 -k MAP001 -f com.mns.ms.map001.MAP001_BING_MAPS_SOAP_REQ_RESP_WCS_BING_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_AMND_WCS_OMS_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CANCEL_WCS_STERLING_V001_00_00  -c active
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD003 -f com.mns.ms.ord003.ORD003_ORD_CPTR_ISA_WCS_OMS_V001_00_00  -c active
mqsichangeflowmonitoring $QM -e MCFP04 -k ORD007 -f com.mns.ms.ord007.ORD007_ORD_HISTORY_WCS_OMS_V001_00_00 -c active
mqsichangeflowmonitoring $QM -e MCFP05 -k ORD008 -f com.mns.ms.ord008.ORD008_ORD_DETAIL_WCS_OMS_V001_00_00 -c active


<?xml version="1.0" encoding="UTF-8"?>
chmod 777 $log
echo "Deployment is Done ...! Please check logs at "$log



<inputURL>dpmq://MS_ECOM_GRP_G1_FRONT/MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ-1?RequestQueue=MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ</inputURL>
<destinationURL>dpmq://MS_CORP_GW_BACK/?RequestQueue=MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ;Transactional=true</destinationURL>



#####################################################################SSLROLLOUT SCRIPT #######

host=`hostname`
#trust_cert="/home/mqadmin/SSL"
trust_cert="/var/mqsi/certs"
kdb_store="/MQHA/qmgrs/$QM/kdb"
jks_store="/var/mqsi/jks"
cipher="TLS_RSA_WITH_AES_128_CBC_SHA"
PASSPHRASE="password"
QMSMALL=`echo $QM | tr '[:upper:]' '[:lower:]'`

#Generate Random password
#PASSPHRASE=`head -c 500 /dev/urandom | tr -dc a-z0-9A-Z | head -c 15`

#usage portion
usage(){

if [[ "$#" = 0 || "$1" = '-?' || "$1" = '?' || "$1" = '-help' || "$1" = 'help' ]] 
then 
	printf "
 "
	printf "\nThis command must be entered in the following format:"
	printf "\n "
	printf "\n ./sslRollout -e <eg.rpoperties>/-b <broker.properties> -q <mq.properties> -j -c" 
	printf "\nWhere <eg. properties> contains the eg and port in the format eg,port(each eg in separate lines)"	
	printf "\n "
	printf "\n With the following optional parameters:"
	printf "\n "
	printf "\n -j :     	Create jks from a cer file"
	printf "\n -c :     	generate a csr and a self signed certificate"
	printf "\n -k :     	create a kdb from the existing files (should be specified with -j)"
	printf "\n -q :     	Deploy the MQ SSL (considering kdb already exists in $kdb_store\n "
	printf "\n -e : 		should  be specified with the name of property file"
	printf "\n For Rollout of MQ SSL " 
	printf "\n ./sslRollout -q <mq.rpoperties>"
	printf "\n To create the KDB and then rollout mqssl " 
	printf "\n ./sslRollout -j -k -q <mq.rpoperties>"
	printf "\n To create the jks from existing certs and then rollout eg level ssl " 
	printf "\n ./sslRollout -j -e <eg.rpoperties>"
	printf "\n To create new certs and if needed to rollout with created certs specify above parameters" 
	printf "\n ./sslRollout -c"
	exit 0
fi


}

#catching errors
fail_if_error() {
[ $1 != 0 ] && {
exit 10
}
}
  
# Procedure to create private key and self signed certificate along with a CSR request.
create_cert(){ 
# Generate a passphrase


 
# Certificate details; replace items in angle brackets with your own info
subj="
C=GB
O=MarksandSpencer
localityName=London
commonName=${host}
emailAddress=steven.gonsalvez@marksandspencer.com
"
 
# Generate the server private key
openssl genrsa -des3 -out ${host}.key -passout pass:${PASSPHRASE} 2048 
fail_if_error $?
 
# Generate the CSR
openssl req \
-new \
-batch \
-subj "$(echo -n "$subj" | tr "\n" "/")" \
-key ${host}.key \
-out ${host}.csr \
-passin pass:${PASSPHRASE}
fail_if_error $?

#cp ${host}.key ${host}.key.org
#fail_if_error $?
 
# Strip the password so we don't have to type it every time we restart Apache
openssl rsa -in ${host}.key -out ${host}.key -passin pass:${PASSPHRASE}
fail_if_error $?
 
# Generate the cert (good for 10 years)
openssl x509 -req -days 3650 -in ${host}.csr -signkey ${host}.key -out ${host}.cer
fail_if_error $?
}

# Procedure to conver cer to jks.
conv_cer() {
openssl pkcs12 -export -out ${host}.p12 -inkey ${host}.key -in ${host}.cer -passout pass:${PASSPHRASE} -name ${host}`
fail_if_error $?
keytool -importkeystore -destkeystore broker.jks -deststorepass ${PASSPHRASE} -srckeystore ${host}.p12 -srcstoretype PKCS12 -srcstorepass ${PASSPHRASE}
fail_if_error $?
}

#procedure to add trust certs to jks
add_jks() {
for cacert in `find ${trust_cert} -name "*.crt" -o -name "*.cer" -o -name "*.CER"`; do 
echo $cacert 
keytool -import -file $cacert -alias $cacert -keystore broker.jks -storepass ${PASSPHRASE} -trustcacerts -noprompt
done
}

#procedure to rename spaces in files
rename(){
find ${trust_cert}/. -type f -name "*" > /tmp/dev_spacelist
		
        ORIGIFS=$IFS
        IFS=$(printf "\n")

        exec < /tmp/dev_spacelist
        while read filename
        do
                newfilename=`echo $filename | sed 's/ /_/g'`
                mv $filename $newfilename >>/dev/null 2>&1
        done
        IFS=$ORIGIFS

        rm /tmp/dev_spacelist
}

egssl(){

mkdir $jks_store >>/dev/null 2>&1
cp ${trust_cert}/broker.jks $jks_store
ls $egprop
fail_if_error $?


while read line;do
port=`echo $line| awk -F"," {'print $2'}`
each=`echo $line| awk -F"," {'print $1'}`

mqsichangeproperties $QM -e $each -o HTTPConnector -n explicitlySetPortNumber -v 0
mqsichangeproperties $QM -e $each -o HTTPSConnector -n sslProtocol -v SSL
mqsichangeproperties $QM -e $each -o HTTPSConnector -n explicitlySetPortNumber -v $port
mqsichangeproperties $QM -e $each -o HTTPSConnector -n keystoreFile -v ${jks_store}/broker.jks
mqsichangeproperties $QM -e $each -o HTTPSConnector -n keystoreType -v JKS
mqsichangeproperties $QM -e $each -o HTTPSConnector -n keystorePass -v password
mqsichangeproperties $QM -e $each -o ComIbmJVMManager -n keystoreFile -v ${jks_store}/broker.jks
mqsichangeproperties $QM -e $each -o ComIbmJVMManager -n keystoreType -v JKS
mqsichangeproperties $QM -e $each -o ComIbmJVMManager -n keystorePass -v brokerKeystore::password
mqsichangeproperties $QM -e $each -o ComIbmJVMManager -n truststoreFile -v ${jks_store}/broker.jks
mqsichangeproperties $QM -e $each -o ComIbmJVMManager -n truststorePass -v brokerTruststore::password
mqsichangeproperties $QM -e $each -o ExecutionGroup -n httpNodesUseEmbeddedListener -v true
mqsichangeproperties $QM -e $each -o ExecutionGroup -n soapNodesUseEmbeddedListener -v true

done<$egprop

printf "\n please restart the broker \n"
}

# Verify if the execution groups have the correct details
verify() {

printf "\n ex-group ,httpport , httpsport , keystore , soapnode , httpnode \n"
while read check;do
port=`echo $check| awk -F"," {'print $2'}`
each=`echo $check| awk -F"," {'print $1'}`

httpport=`mqsireportproperties $QM -e $each -o HTTPConnector -n explicitlySetPortNumber | grep -v BIP | grep -v "^$"`
httpsport=`mqsireportproperties $QM -e $each -o HTTPSConnector -n explicitlySetPortNumber | grep -v BIP | grep -v "^$" `
keystore=`mqsireportproperties $QM -e $each -o HTTPSConnector -n keystoreFile | grep -v BIP | grep -v "^$"`
soapnode=`mqsireportproperties $QM -e $each -o ExecutionGroup -n httpNodesUseEmbeddedListener | grep -v BIP | grep -v "^$"`
httpnode=`mqsireportproperties $QM -e $each -o ExecutionGroup -n soapNodesUseEmbeddedListener | grep -v BIP | grep -v "^$"`

printf "$each,$httpport,$httpsport,$keystore,$soapnode, $httpnode \n"

done<prop
}

create_kdb(){
openssl pkcs12 -export -out ${host}.p12 -inkey ${host}.key -in ${host}.cer -passout pass:${PASSPHRASE} -name ${host}
fail_if_error $?

## create the DB
runmqckm -keydb -create -db $QM.kdb -pw ${PASSPHRASE} -type cms -stash -expire 7300

##import the P12 into the kdb
runmqckm -cert -import -target $QM.kdb  -target_pw ${PASSPHRASE} -file ${host}.p12 -label ${host} -new_label ibmwebspheremq$QMSMALL -pw ${PASSPHRASE}


### import certificates into a kdb
for each in `ls *.cer *.CER 2> /dev/null | grep -v ${host}`;do runmqckm -cert -add -file $each -db $QM.kdb -pw ${PASSPHRASE};done

####list all certs in kdb
runmqckm  -cert -list all -db $QM.kdb -pw ${PASSPHRASE}

mkdir ${kdb_store} 2> /dev/null
cp $QM.kdb $QM.rdb $QM.sth ${kdb_store} 2> /dev/null
chmod 777 ${kdb_store}/*

}


mqssl(){

kdb_file=${kdb_store}/$QM
echo "ALTER QMGR SSLKEYR('${kdb_file}')" | runmqsc $QM

ls $mqprop
fail_if_error $?

while read line;do
chl=`echo $line | awk -F"," {'print $1'}`
type=`echo $line | awk -F"," {'print $2'}`

echo "alter chl(${chl}) chltype(${type})  sslciph($cipher)" | runmqsc $QM 

done<$mqprop

echo "refresh security type(ssl)" | runmqsc $QM 
}

while getopts M:m:b:B:e:E:q:Q:jJcCvVkK OPTS
do
   case $OPTS in
     q|Q) # Rollout MQ SSL - using the property file passed
       mqprop=$OPTARG
	   rm $QM.kdb $QM.rdb $QM.sth 2>/dev/null
	   mqssl
	   ;;
	   
      k|K) # CCreate kdb
       create_kdb
       ;;
	  
     j|J) # Create jks from cer files
       conv_cer
	   rename
	   add_jks
       ;;
       
     b|B) # Rollout broker SSL
	   brokerprop=$OPTARG
       brokerssl 
       ;;
	   
	 e|E) # Rollout broker SSL
	   egprop=$OPTARG
       egssl 
       ;;
	   
	  v|V) # Rollout broker SSL
	   verify
       ;;
     
	 c|C) # Rollout broker SSL
       create_cert 
       ;; 
       *) # invalid flag
       usage
       ;;
   
   esac

done





#######################################################################################################################################################



	############### execution group parameters check
for each in `mqsilist $QM | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`; do printf "##########$each##########\n">>$QM.report;  mqsireportproperties $QM -e $each -o ComIbmSocketConnectionManager -r >>$QM.report;done
 
	####### environment variables check
export >env.properties


###################################threads for all flows
for each in `mqsilist $QM | grep Execution | awk -F"'" {'print $2'}`; do for app in `mqsilist $QM -e $each | grep BIP1275I | awk -F"'" {'print $2'}`;do for mf in `mqsilist $QM -e $each -k $app -d 2 | grep "Message flow" | awk -F"'" {'print $2'}`; do instances=`mqsilist $QM -e $each -k $app -d 2 | grep -A2 $mf | grep instances | awk -F"'" {'print $2'}`;printf "\n$each,$app,$mf,${instances}";done;done;done >>$QM.Thread.Report
 
 
######################################URL and port for all flows
for each in `mqsilist $QM | grep Execution | awk -F" " {'print $4'} | awk -F "'"  {'print $2'}`; do url=`mqsireportproperties $QM -e $each -o HTTPSConnector -r | grep url | awk -F"'" {'print $2'}`;port=`mqsireportproperties $QM -e $each -o HTTPSConnector -r |  grep -m 1 port | awk -F"'" {'print $2'}`; printf "\n $each,$port,$url";done >> $QM.port.report


 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/3/AvailableToPromiseRequest
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/2/NominatedDateDelivery
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/4/ReserveStockRequest
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/4/OrderHistory
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/5/OrderDetails
 curl -X HEAD -v -k  http://embroker.dr.att.mnscorp.net/5/OrderCancel
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/5/OrderAmend
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/5/ISAOrderCreate
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/5/UpdateConsignment
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/5/GetConsignment
 curl -X HEAD -v -k  http://embroker.dr.att.mnscorp.net/1/OMSEQAS
 curl -X HEAD -v -k  http://embroker.dr.att.mnscorp.net/1/WCSEQAS
 curl -X HEAD -v -k  http://embroker.dr.att.mnscorp.net/1/BingMaps
 curl -X HEAD -v -k  https://embroker.dr.att.mnscorp.net/4/CustomerPreferences

 
 
 CRQ0002670088 - CR for prod for PSG internal stuff
 
 
 
	DEV/SYSTEST/SIT	CATE/CATE(OT)	Production/DR
<installerLocation>	/tmp	/tmp	/tmp
<responseFileLocation>			
<InstallDir>	/opt/IBM/WMQFTE/	/opt/IBM/WMQFTE/	/opt/IBM/WMQFTE/
<ConfigDir>	/var/IBM/WMQFTE/config	/var/IBM/WMQFTE/config	/var/IBM/WMQFTE/config
<coordQmgr>	C1MQFT01	C1MQFT01	P1MQFT01
<coordQmgrHost>	mshsrmnsukc1228.mnsukcate.adrootcate.marksandspencercate.com	mshsrmnsukc1228.mnsukcate.adrootcate.marksandspencercate.com	mshsrmnsukp0853.mnsuk.adroot.marksandspencer.com
<coordQmgrHostPort>	11443	11443	11453
<coordQmgrHostChl>	MQFT01.COORD.SVRCONN	MQFT01.COORD.SVRCONN	MQFT01.COORD.SVRCONN
<commandQMgr>	C1MQFT03	C1MQFT02	P1MQFT02
<commandQMgrHost>	mshsrmnsukc1229.mnsukcate.adrootcate.marksandspencercate.com	mshsrmnsukc1228.mnsukcate.adrootcate.marksandspencercate.com	mshsrmnsukp0853.mnsuk.adroot.marksandspencer.com
<commandQMgrPort>	11423	11444	11454
<commandQMgrChl>	MQFT03.AGENT.SVRCONN	MQFT02.AGENT.SVRCONN	MQFT02.AGENT.SVRCONN
<fteConfigDir>	/var/IBM/WMQFTE/config/C1MQFT01/agents/<agentId>	/var/IBM/WMQFTE/config/C1MQFT01/agents/<agentId>	/var/IBM/WMQFTE/config/C1MQFT01/agents/<agentId>
<fteAgentgroup>	ITFTEAGENTLOCAL
	ITFTEAGENTLOCAL
	ITFTEAGENTLOCAL

<fteAgentUser>	y0134079	y0134079	y0134079
<temp_dir>	C:\tmp	C:\tmp	C:\tmp


 
Note:

############################# convert hex to ascii  ########## unconvertable exception message broker to text ###############


#!/bin/bash
function hex2string () {
  I=0
  while [ $I -lt ${#1} ];
  do
    echo -en "\x"${1:$I:2}
    let "I += 2"
  done
}
hex2string "48656C6C6F2074686572652021"

################################################## Error from sftp ########################



): tid(630081): SFTP Server: New connection established.
20140131T165856Z [sftp][debug] source-ssh-server(E2Iservermode): tid(389683)[94.103.18.107]: SFTP C: INIT ver 3
20140131T165856Z [sftp][debug] source-ssh-server(E2Iservermode): tid(389683)[94.103.18.107]: SFTP S: VERSION (3)
20140131T165856Z [sftp][debug] source-ssh-server(E2Iservermode): tid(389683)[94.103.18.107]: SFTP C: OPEN (1000)(/MFT_DW_INB_GF/IrelandSite_2014-01-31 16-59-06.xml.zip)
20140131T165856Z [sftp][error] source-ssh-server(E2Iservermode): tid(389683)[94.103.18.107]: SFTP Server: SSH_FXP_OPEN [/MFT_DW_INB_GF/IrelandSite_2014-01-31 16-59-06.xml.zip] failed due to unsupported mode [1B].
20140131T165856Z [sftp][debug] source-ssh-server(E2Iservermode): tid(389683)[94.103.18.107]: SFTP S: STATUS (1000)(4)()()
20140131T165857Z [mq][debug] source-mqfte(MQFTE_BAS_FSH): tid(389619): Disable the message property parsing.



#######################################commands for testing stuff ########################################


MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ-1
source-mq: MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ-1 [up]
--------------------------------------------------
 admin-state enabled
 queue-manager MS_ECOM_GRP_G1_FRONT  [up]
 get-queue MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ
 ccsi 0
 get-message-options 4097
 parse-properties off
 async-put on
 exclude-headers MQRFH+MQRFH2
 concurrent-connections 1
 polling-interval 30 seconds
 batch-size 0
 content-type-header None
 retrieve-backout-settings off
 use-qm-in-url off



MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ-2

source-mq: MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ-2 [up]
--------------------------------------------------
 admin-state enabled
   MS_ECOM_GRP_G2_FRONT  [up]
 get-queue MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ
 ccsi 0
 get-message-options 4097
 parse-properties off
 async-put on
 exclude-headers MQRFH+MQRFH2
 concurrent-connections 1
 polling-interval 30 seconds
 batch-size 0
 content-type-header None
 retrieve-backout-settings off
 use-qm-in-url off


 
 
 <inputURL>dpmq://MS_ECOM_GW01_ACT_BACK/STEP_MS.PRD_APPROVAL_FSH?RequestQueue=STEP_MS.PROD_APROV_P1593.PRQ</inputURL>

 
 queue-manager MS_ECOM_GW01_ACT_BACK  [up]
 get-queue STEP_MS.PROD_APROV_P1593.PRQ
 
 source-mq MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ-1;get-queue MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ;queue-manager MS_ECOM_GRP_G1_FRONT;exit
 source-mq MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ-2;get-queue MS_ICOS.ORD004_OF_FURN_V001.00.00.ERQ;queue-manager MS_ECOM_GRP_G2_FRONT;exit
 
 
 ################################# WMB flows Java API ######################################################################
 
include  ConfigManagerProxy.jar ..... 

This will open the following java application: 

        public static void main(String[] args) { 
                // TODO Auto-generated method stub 
                try { 
                        
                  // Add in the code to find and open an existing message flow 
                  // This code can be found in Snippet1.java         
                        File msgFlowST = new File("C:\ellering\\workspace\\MFAPI_MessageFlows\\StartingFlow.msgflow"); 
                        MessageFlow mfST = FlowRendererMSGFLOW.read(msgFlowST);                           
                        
                  // Add in the code to set the name of the modified message flow 
                  // This code can be found in Snippet2.java 
                        mfST.setName(mfST.getName()+"Modified");   
                        
                  // Create an additional MQOutput node and set some of its properties 
                  // This code can be found in Snippet3.java 
                        MQOutputNode mqout1 = new MQOutputNode(); 
                        mqout1.setLocation(new Point(554,79)); 
                        mqout1.setNodeName("MQOutput1"); 
                        mqout1.setQueueName("MFAPI.OUT2"); 
                        mfST.addNode(mqout1); 
                                                          
          // Locate the two existing nodes you will be changing 
                  // This code can be found in Snippet4.java 
                        ComputeNode compute = (ComputeNode)mfST.getNodeByName("Compute"); 
                        MQOutputNode mqout = (MQOutputNode)mfST.getNodeByName("MQOutput"); 
                                  
          // Move one of the existing connections 
                  // This code can be found in Snippet5.java 
                        mfST.disconnect(compute.OUTPUT_TERMINAL_OUT, mqout.INPUT_TERMINAL_IN); 
                        mfST.connect(compute.OUTPUT_TERMINAL_OUT, mqout1.INPUT_TERMINAL_IN);     
                                  
          // Write the modified flow to disk 
                  // This code can be found in Snippet6.java 
                        FlowRendererMSGFLOW.write(mfST, "C:\\student\\workspace\\MFAPI_MessageFlows"); 
                                                
                } catch (Exception e) { 
                        // TODO Auto-generated catch block 
                        e.printStackTrace(); 
                } 
        } 
                                                


Unless stated otherwise above:
IBM United Kingdom Limited - Registered in England and Wales with number 741598. 
Registered office: PO Box 41, North Harbour, Portsmouth, Hampshire PO6 3AU


###################################################################################################################################
MQFTE OAM #########################################

#!/bin/bash

# mqmftAuth.sh
#
# Created: 22 January 2012
# Author: Oliver Wynn, IBM Software Services for WebSphere
# Team: IBM - EM@M&S
# 
# Change History #
#
# 21/1/13 - OBW - ISSW - Created the script
# 29/1/13 - OBW - ISSW - Changed to not add security stanza each time to qm.ini.  
# 						 A lookup is done to check if it is there first.


# Description:
# Enables mqmft to operate under a non-mqm user
# Creates the auth required for mqmft1 user
# Alters the mca user on the FTE.SVRCONN channel for agent/command and coordination
# queue managers

# Pre Reqs:
# Users mqmft1 must be present on the system
# MQ must be installed and running on the system
# Coordination queue manager is {env}EMMFT01
# Agent/Command queue manager is {env}EMMFT02
# You must be an mqm user to run this script

function usage {
	echo "Usage: $(basename $0) [-c coordinationQMName] [-a AgentQMName -c coordinationQMName -x AgentName]"
	echo "Run against the coordination queue manager on its own"
	echo 
	echo "When running against the Agent queue manager you must specify the name of the coordination queue manager for the remote connection auth"
	echo 
}

#exception handler
function error {
        local PARENT_LINENO="$1"

        echo
        echo "Script aborted on or near line ${PARENT_LINENO}"
        echo
        exit -1
}


if [ $(whoami) = "mqm" ]; then
        echo "user is: mqm"
	echo
else
    echo "This script must be executed as mqm"
	usage
	echo
        error $LINENO $?
fi

if [ $# -lt 1 ]; then
	usage
	error $LINENO $?
fi

# Check input options
while getopts "c:a:x:?" OPTION
do
     case $OPTION in
         c)
             CoordQM=$OPTARG;;
		 a)
			 AgentQM=$OPTARG;;
		 x)
			 AgentName=$OPTARG;;
         ?)
             usage
             exit;;
     esac
done

qmini=/MQHA/$AgentQM/qmgrs/$AgentQM/qm.ini
if [[ -n $AgentQM ]]; then
	if [[ -n $AgentName ]]; then
		if [[ -n $CoordQM ]]; then
			echo "Agent/Command queue manager: $AgentQM"
			echo "Running setmqaut commands against agent/command qm....."
			setmqaut -m $AgentQM -t qmgr -g mqmft1 +connect +inq +setid
			setmqaut -m $AgentQM -t queue -n SYSTEM.FTE -g mqmft1 +put +get
			setmqaut -m $AgentQM -t queue -n SYSTEM.DEFAULT.MODEL.QUEUE -g mqmft1 +get +dsp +put
			setmqaut -m $AgentQM -t queue -n SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE -g mqmft1 +put +setall
			setmqaut -m $AgentQM -t queue -n SYSTEM.FTE.COMMAND.$AgentName -g mqmft1 +put +get +setid
			setmqaut -m $AgentQM -t queue -n SYSTEM.FTE.DATA.$AgentName -g mqmft1 +get +put
			setmqaut -m $AgentQM -t queue -n SYSTEM.FTE.EVENT.$AgentName -g mqmft1 +get +put
			setmqaut -m $AgentQM -t queue -n SYSTEM.FTE.REPLY.$AgentName -g mqmft1 +get +put
			setmqaut -m $AgentQM -t queue -n SYSTEM.FTE.STATE.$AgentName -g mqmft1 +get +put +inq
			setmqaut -m $AgentQM -t topic -n SYSTEM.FTE -g mqmft1 +sub +pub
			setmqaut -m $AgentQM -t queue -n WMQFTE.** -g mqmft1 +put +get +inq
			### This works against the MFT_MQFTE_STEP_XB60 queue.  To use other queues for different agents 
			### please add an extra line
			### setmqaut -m $AgentQM -t queue -n <<NewQueue>> -g mqmft1 +browse +inq +get
			setmqaut -m $AgentQM -t queue -n MFT_MQFTE_STEP_XB60 -g mqmft1 +browse +inq +get
			setmqaut -m $AgentQM -t rqmname -n $CoordQM -g mqmft1 +put
			echo
			if [ -e $qmini ]; then
				qmString=`cat $qmini | grep "Security:
   ClusterQueueAccessControl=RQMName"`
				echo "qm.ini file exists for $AgentQM"
				if [[ -n $qmString ]]; then
					echo $qmString
					echo "Security Stanza already defined in qm.ini"
				else
					echo "Security Stanza not defined in qm.ini"
					echo "Writing ClusterQueueAccessControl=RQMName to Security Stanza in qm.ini..."
					echo "Security:" >> $qmini
					echo "   ClusterQueueAccessControl=RQMName" >> $qmini
					echo "Write Successful"
				fi
			else
				echo "qm.ini not found please add Security: ClusterQueueAccessControl=RQMName to the qm.ini file"
			fi
			echo "Authorization set on Agent queue manager: $AgentQM"
			echo
		else
			echo "No Coordination queue manager given for the agent configuration"
			echo
			usage
		fi
	else
		echo "No Agent name given"
		echo
		usage
	fi
else
	echo "No Agent/Command queue manager given"
fi

if [[ -n $CoordQM ]]; then
	if [[ -z $AgentQM ]]; then
		echo "No Coordination queue manager actions to take"
		echo "Coordination queue manager: $CoordQM"
		echo "Running setmqaut commands against coordination qm....."
		setmqaut -m $CoordQM -t qmgr -g mqmft1 +connect +inq +setid
		setmqaut -m $CoordQM -t topic -n SYSTEM.FTE -g mqmft1 +sub +pub
		setmqaut -m $CoordQM -t queue -n SYSTEM.DEFAULT.MODEL.QUEUE -g mqmft1 +get +dsp +put
		echo "ALTER CHANNEL(FTE.SVRCONN) CHLTYPE(SVRCONN) MCAUSER('mqmft1')" | runmqsc $CoordQM
		echo "REFRESH SECURITY" | runmqsc $CoordQM
		echo
		echo "Authorization set on Coordination queue manager: $CoordQM"
		echo
	fi
else
	echo "No Coordination queue manager actions to taken"
fi
exit 1;

###########################################################################################################################################
MQFTE OAM -- ATT

# BROKER HOST
useradd mqmft1
setmqaut -m S1EMBK01 -t qmgr -g mqmft1 +connect +inq +setid
setmqaut -m S1EMBK01 -t queue -n SYSTEM.FTE.COMMAND.S1EMBK01.MCFP02 -g mqmft1 +get +put +inq +browse +setid

setmqaut -m S1EMBK02 -t qmgr -g mqmft1 +connect +inq +setid
setmqaut -m S1EMBK02 -t queue -n SYSTEM.FTE.COMMAND.S1EMBK02.MCFP02 -g mqmft1 +get +put +inq +browse +setid

# FTE AGENT HOST PIM
usermod -a -G stibosw mqm
# FTE AGENT HOST WCS
usermod -a -G wasgroup mqm

# COORD QMGR HOST
setmqaut -m S1EMMFT01 -t qmgr -g mqmft1 +connect +inq +setid
setmqaut -m S1EMMFT01 -t queue -n SYSTEM.CLUSTER.TRANSMIT.QUEUE -g mqmft1 +put +get +inq
setmqaut -m S1EMMFT01 -t queue -n SYSTEM.DEFAULT.MODEL.QUEUE -g mqmft1 +get +put +inq +dsp
setmqaut -m S1EMMFT01 -t topic -n SYSTEM.FTE -g mqmft1 +sub +pub

# AGENT QMGR
setmqaut -m S1EMMFT02 -t qmgr -g mqmft1 +connect +inq +setid
setmqaut -m S1EMMFT02 -t rqmname -n S1EMMFT01 -g mqmft1 +put 
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE -g mqmft1 +put +get +inq 
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.CLUSTER.TRANSMIT.QUEUE -g mqmft1 +put +get +inq
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.DEFAULT.MODEL.QUEUE -g mqmft1 +get +dsp +put +inq
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE -g mqmft1 +put +setall
setmqaut -m S1EMMFT02 -t topic -n SYSTEM.FTE -g mqmft1 +sub +pub
setmqaut -m S1EMMFT02 -t queue -n WMQFTE.** -g mqmft1 +put +get +inq

# AGENT SPECIFIC BELOW
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.COMMAND.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +put +get +setall +inq +dsp +browse +setid
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.DATA.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +setall +inq +dsp +browse
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.EVENT.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +setall +inq +dsp +browse
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.REPLY.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +setall +inq +dsp +browse
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.STATE.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +setall +inq +dsp +browse

setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.AUTHAGT1.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.AUTHTRN1.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.AUTHOPS1.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.AUTHSCH1.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.AUTHMON1.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.FTE.AUTHADM1.S01_SIT1WCS01_S1EMMFT02 -g mqmft1 +get +put +inq

# AGENT QUEUE SPECIFIC
setmqaut -m S1EMMFT02 -t queue -n MFT_MQFTE_STEP_XB60 -g mqmft1 +browse +inq +get +put
setmqaut -m S1EMMFT02 -t queue -n MFT_XB60_WCSIAA_MQFTE -g mqmft1 +browse +inq +get +put
setmqaut -m S1EMMFT02 -t queue -n MFT_MQFTE_WCS_XB60 -g mqmft1 +browse +inq +get +put
setmqaut -m S1EMMFT02 -t queue -n MFT_MQFTE_MIGRATION_XB60 -g mqmft1 +browse +inq +get +put

setmqaut -m S1EMMFT02 -t queue -n MFT_MQFTE_NEW_CHANNELS_XB60 -g mqmft1 +browse +inq +get +put
setmqaut -m S1EMMFT02 -t queue -n MFT_MQFTE_BAZAAR_VOICE_XB60 -g mqmft1 +browse +inq +get +put
setmqaut -m S1EMMFT02 -t queue -n MFT_MQFTE_FUSEPUMP_XB60 -g mqmft1 +browse +inq +get +put
setmqaut -m S1EMMFT02 -t queue -n MFT_MQFTE_RICH_RELEVANCE_XB60 -g mqmft1 +browse +inq +get +put

# GW FTE setup
# setmqaut -m S1EMGW01 -t qmgr -g mqmft1 +connect +inq +setid
setmqaut -m S1EMMFT02 -t queue -n SYSTEM.CLUSTER.TRANSMIT.S1_ECL01.S1EMGW01 -g mqmft1 +browse +inq +get +put


#####################################################################################################################

Ip address and DNS , and domain name resolution ...... website########################
http://centralops.net/co/

#################################


########################################### Packet Capture CLI########################################

Login to the WebSphere DataPower device through SSH to get to the Command Line Interface (CLI):

    Type co at the prompt to enter Global configuration mode.
    Type int <ethernet interface > where <ethernet interface> is one of the interfaces that is configured on the DataPower device
    Type "packet-capture temporary:///eth1trace.pcap -1 10000"
    where 10000 is the file size in kilobytes (the file size can be in the range of 10 through 50000 kilobytes) and eth1trace.pcap is the name of the file to store the generated packet data.
    Perform the test for which you would like to collect the packet capture
    As soon as you see the problem, on the command line type:
    no packet-capture temporary:///eth1trace.pcap
    Download the file through the CLI using the copy command
    xi50(config)# copy temporary:///eth1trace.pcap
       scp://test@x.xx.xx.xxx/trace1.pcap        
       Password: ******                            
       File copy success        

For more details on the copy command, refer to the IBM WebSphere DataPower CLI Reference Guide.
Alternatively, you can also download the file from the WebGUI. From the WebGUI, navigate to the File Management temporary directory > download the file.

For example:

xi50# co
Global configuration mode
xi50(config)# int eth1
Interface configuration mode (eth1 )
xi50(config-if[eth1])# packet-capture temporary:///eth1trace.pcap -1 10000 9000
Trace begun.
xi50(config-if[eth1])# no packet-capture temporary:///eth1trace.pcap
Packet capture to temporary:///eth1trace.pcap on eth1 Stopped.

Example of capturing packet traces for all interfaces:

xi50# co
Global configuration mode
xi50(config)#   packet-capture-advanced all temporary:///all-capture.pcap -1 10000 9000
Trace begun.

xi50(config)# no packet-capture-advanced all temporary:///all-capture.pcap
Packet capture to temporary:///all-capture.pcap on all stopped. 

###########################################################################################################
TCS webex
alamuriniharika.yashaswi

Happy12@2013

#####################################POS teste

Production URL (Broker VIP)
http://10.250.2.4:80/MS_RetrieveAmazonOrder
sample message:


<?xml version="1.0"?>
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<soapenv:Header>
	</soapenv:Header>
<soapenv:Body>	
<OrderViewRequest xmlns="http://merchantorderupdate.amazonaws.com/doc/2006-01-01">
	<Marketplace>www.marksandspencer-cate.com</Marketplace>
	<OrderId>301-0000000-0695612</OrderId>
	<IdempotentId>8ea59db0-6ee9-11e2-8a64-0003560a9c8f</IdempotentId>
	<StoreId>0220</StoreId>
</OrderViewRequest>
</soapenv:Body>
</soapenv:Envelope>


Non Production VIP
####################### MQSI version


Code:

C:\Documents and Settings\myusername\Application Data\Subversion\config

[miscellany]
enable-auto-props = yes

[auto-props]
*.esql = svn:keywords=Date Revision Author Id
*.java = svn:keywords=Date Revision Author Id
*.msgflow = svn:keywords=Date Revision Author Id
*.mset = svn:keywords=Date Revision Author Id
*.properties = svn:keywords=Date Revision Author Id


And then this in the Long description of the flow:
Code:

$MQSI_$Id:$:$MQSI
$MQSI_$Revision:$:$MQSI
$MQSI_$Date:$:$MQSI
$MQSI_$Author:$:$MQSI


After commit, it was updated in WMBT with:
Code:

$MQSI_$Id: MyVersionTestFlow.msgflow 150065 2011-08-08 14:40:51Z magnus.palmer $:$MQSI
$MQSI_$Revision: 150065 $:$MQSI
$MQSI_$Date: 2011-08-08 16:40:51 +0200 (m㪠08 aug 2011) $:$MQSI
$MQSI_$Author: magnus.palmer $:$MQSI


########################################################################################################################################################

######################################################## code improvements ############################################
$MQSI_...... MQSI$usage -  This will help populate SVN revision into the deployed artefact - can be viewed at run time retrieved at run time(post deployment) etc
STEPS

	C:\Documents and Settings\myusername\Application Data\Subversion\config

	[miscellany]
	enable-auto-props = yes

	[auto-props]
	*.esql = svn:keywords=Date Revision Author Id
	*java = svn:keywords=Date Revision Author Id
	*.msgflow = svn:keywords=Date Revision Author Id
	*.mset = svn:keywords=Date Revision Author Id
	*.properties = svn:keywords=Date Revision Author Id


	And then this in the Long description of the flow:
	Code:

		$MQSI_$Id:$:$MQSI
		$MQSI_$Revision:$:$MQSI
		$MQSI_$Date:$:$MQSI
		$MQSI_$Author:$:$MQSI

Monitoring audit for all flows in AT&T - currently only implemented for synchronous interfaces , more robust framework for all flows
performance tuning and Infra sizing details not in SVN - Current parameter setup (not prestent in Infra build nor part of EM build - For new environment it will be missed)
DOMD version usage in mapping ESQL files - Currently there is no link to any update reflecting version of DOMD(tracebility backwards absent)
Proper use of sharepoint versioning for DOMDs - Storage of DOMD's needs to be discussed and fine tuned.
source schema and source wsdl (either SVN or sharepoint decision) - only modelled message set is in SVN , the application original artefacts also need to be in source control or sharepoint and the message model should be traceble back to the original artefact.
Few folders in SVN (for message sets ) - in camel case . Established pattern is to be CAPS for all Application and Libraries
XI52 /XB60 automated backup of any new configuration
MQFTE OAM scripts not in SVN (custom implemented - needs to be part of automated build or environment build)
Monitoring profile implementation needs to be automated into the build (at the moment it is manually executed as part of deployment notes.)
Corporate Subcversion structure and code revisioning needs to be discussed
Include comments on the flow description as well - through the pallete (Insert text comment - would prove a lot worth while for complex flow logic like payment/Comms hub)

	
	
	
################################ STATS ON

-- To turn on the stats for NDD

echo "DEFINE QLOCAL(INT_BROKER_STATS_DATA) BOQNAME('SYS_FAILURE') BOTHRESH(1) DESCR('ECOM SYNC BROKER STATS QUEUE') DISTL(NO) MAXDEPTH(5000000) QDEPTHLO(20) QDPHIEV(ENA
BLED) QDEPTHHI(80) QDPMAXEV(ENABLED) REPLACE" | runmqsc $QM
echo "DEFINE SUB(BROKER_STATS) TOPICSTR('\$SYS/Broker/$QM/StatisticsAccounting/SnapShot/#')  WSCHEMA(TOPIC) DEST(INT_BROKER_STATS_DATA) REPLACE" | runmqsc $QM

mqsichangeflowstats $QM -s -e MCFP02 -k INV008 -f com.mns.ms.inv008.INV008_NDD_WCS_OMS_V001_00_00 -n basic -t none -o xml -c active




#################################### make file for compiling c programs amqsput amqbcg compile for size ####################################
[mqm@s220823vaps2042 hari]$ cat ./myMQmakefile.sh
# Created by Hari Madiraju <hari.madiraju@att.com> for M+S
# Version 1.0 of compilation ... 2012 Jun 14 for all thread/32/64/non-thread
# Version 1.3 of compilation ...

#2. For 64-bit unthreaded application


gcc -m64 -g -fsigned-char -o $1_64 $1.c -I/opt/mqm/inc -L/opt/mqm/lib64 -Wl,-rpath=/opt/mqm/lib64 -L/opt/mqm/lib64 -Wl,-rpath=/opt/mqm/lib64 -Wl,-rpath=/usr/lib64 -limqs23gl -limqb23gl -lmqm


###################################################################################################
###################################################################################################





<routing inputval='MS_CORP_GW.MFT_MQFTE_WCS_XB60' dstqname='MFT_MQFTE_WCS_XB60' dstqmgrname='MS_ECOM_GRP_BACK'></routing>

/etl/ControlM/CATE/mcfp/scripts/testmqfte.sh /etl/IS/Data/CATE/mcfp/outbound/wcs/price /etl/ControlM/CATE/mcfp/scripts/logs CATEB MSUK_PRICE 

source-mqfte MQFTE_WCS_SOD_INV003_FSH;admin-state enabled;exit
source-mqfte MQFTE_WCS_SOD_INV003_FSH;admin-state disabled;exit

echo "12312341234" > MSUKProducts_123.csv ;echo "asjdnfasdjfnasfkjn" > MSUKProducts_456.csv ;echo "dfdfdfdfd" > MSUKProducts_789.csv



/etl/ControlM/CATE/mcfp/scripts/testprd.sh /etl/IS/Data/CATE/mcfp/outbound/wcs/product /etl/ControlM/CATE/mcfp/scripts/logs CATEB MSUKProducts_


UPDATE CFG_END_POINT SET END_POINT_NAME1='https://ukpromswsconvip01.interface.anana.com:8002',END_POINT_NAME2='/anana/1/contact' WHERE END_POINT_ID=215 ;
UPDATE CFG_END_POINT SET END_POINT_NAME1='https://ukpromswsixnhvip01.interface.anana.com:8003',END_POINT_NAME2='/anana/1/ixnhistory/email' WHERE END_POINT_ID=232;
UPDATE CFG_END_POINT SET END_POINT_NAME1='https://ukpromswsixnhvip01.interface.anana.com:8003',END_POINT_NAME2='/anana/1/ixnhistory/sms' WHERE END_POINT_ID=250;




('215','130','','HTTP','CCA','http://10.128.57.148:7800','/CustomerUpdates',CURRENT_TIMESTAMP);
('232','135','','HTTP','CCA','http://10.128.57.168:7080','/CustomerUpdates',CURRENT_TIMESTAMP);
('250','146','','HTTP','CCA','https://ukppmswsixnhvip01.interface.anana.com:8003','/anana/1/ixnhistory/sms',CURRENT_TIMESTAMP);



##################################################### RETRIEVE PERSISTANT MESSAGES ###############################
http://www-01.ibm.com/support/docview.wss?uid=swg21660642


##################################### dashboard AT&T ##################################
http://p120663vaps5127.att.mnscorp.net/l/dashboard/   - Amsterdam
http://s220816vaps5126.att.mnscorp.net/l/            - Production  
http://s220823vaps5126.att.mnscorp.net/dashboard/ - VP


Non Prod log server
http://p120663vaps5126.sit1.att.mnscorp.net/  - SIT 1

SIT MO71 access
P1178475
mns@12345


##################### selecting JSON for the CCCA exception

select substr(regexp_substr(substr(c.exception,instr(c.exception,'<Text>CCA Request:')),':[^<]+'),2) JSON from EXC_MSG_EXCEPTION c where queue_name = 'SVC.CCA_CUS009_UPDATES_V001.00.00.CRQ' and replay_status = 'O' and exception_id ='9345722'; 




################################################### create a replay file from the log server #############################################
export ORACLE_HOME=/apps/oracle/client;export PATH=${PATH}:${ORACLE_HOME}/bin;sqlplus report/REPORT@DREM3B00 @y.sql | grep -v "\-\-\-\-" | grep service >export.txt


######################### dbatabse reorg

he REORG operation performs the following functions:

    Checks referential integrity, if applicable for the target table, and either deletes rows that violate it or invalidates any affected indexes. (Referential integrity is the relational property that each foreign-key value in a table exists as a primary-key value in the referenced table.

    Performs an internal reorganization of one or more of the indexes for the table (all types) to improve the internal storage of this information and thereby the performance when the index is used to access data. It can rebuild all indexes, selectively rebuild one or more named indexes, or selectively rebuild one or more segments of one or more named indexes.

    Populates a DEFERRED index that is created with a CREATE INDEX statement. A DEFERRED index is an empty index structure that can be populated at a later date.

    Rebuilds precomputed views. For example, if precomputed view maintenance is set to OFF in your application, you can use the REORG command to rebuild precomputed views only, without touching the indexes on the target table. Alternatively, you can use the REORG command to rebuild both indexes and views.

In addition to rebuilding aggregate table data, the REORG command rebuilds indexes on aggregate tables.

A REORG operation is necessary in the following cases:

    To rebuild the affected indexes if you use a database restore operation to restore individual segments of a table or index.

    Whenever modifications to a database affect more than about 30 percent of the data, run the TMU with a REORG statement for any tables directly modified. Periodically rebuilding such tables and indexes with a REORG statement ensures referential integrity and optimal performance.

    To reorganize invalid STAR indexes. Certain operations can invalidate STAR indexes. For example, increasing the MAXROWS PER SEGMENT or the MAXSEGMENTS parameter on a table, or using an ALTER statement to expand a segment, can invalidate STAR indexes on tables that reference the altered table. These operations always generate a warning message that says STAR indexes based on the altered table might be invalid, in which case the affected STAR indexes need to be reorganized. You can either reorganize affected indexes when the message is issued or schedule the REORG operation for a more convenient time. However, any non-query (INSERT, UPDATE, or DELETE) operation against a table that has an invalid index results in an error message that says the index must be reorganized. You must perform a REORG operation before the table can be accessed for an INSERT, UPDATE, DELETE, or LOAD operation.

REORG is unnecessary in the following cases:

    If no changes are made to the database except by complete loads of data.

    If the table and indexes are segmented alike and new index data is loaded into new index segments corresponding to new table segments.



####################################analyse the query wether it would use index or not ####################

explain plan for  <query> - This will show the plan for the query execution wether it will use the index or not

http://docs.oracle.com/cd/B10500_01/server.920/a96533/ex_plan.htm

http://xenappwisz.mnsuk.adroot.marksandspencer.com/Citrix/XenApp/External/auth/login.aspx?CTX_FromLoggedoutPage=1



####################################################################### postillion and tokeniser times ############################################


select X.msg_unq_id,
X.msg_id, 
X.TOK_F_IN,
X.TOK_APP_START,
X.TOK_APP_FIN,
X.TOK_APP_TIME,
X.TOK_F_OUT,
Y.PA_F_IN,
Y.POS_CD1_REQ,
Y.POS_CD2_REQ,
Y.POS_CD3_REQ,
Y.PA_F_OUT,
X.CHECK_DATE
from 
(select 
                                A.msg_id ,
                                A.msg_unq_id,
                                A.msg_direction TOK_DIRECTION_IN,
                                to_char(A.msg_processed_ts,'hh24:mi:ss.FF3') TOK_F_IN,
                                substr(to_char(b.misc_data),to_number(instr(to_char(b.misc_data),'/',2,2))+1,to_number(instr(to_char(b.misc_data),'/',2,3))-to_number(instr(to_char(b.misc_data),'/',2,2))-1) TOK_APP_START,
                                substr(to_char(b.misc_data),to_number(instr(to_char(b.misc_data),'/',2,3))+1,20) TOK_APP_FIN,
                                substr(to_char(b.misc_data),to_number(instr(to_char(b.misc_data),'/',2,1))+1,to_number(instr(to_char(b.misc_data),'/',2,2))-to_number(instr(to_char(b.misc_data),'/',2,1))-1) TOK_APP_TIME,
                                B.msg_direction TOK_DIRECTION_OUT,
                                to_char(B.msg_processed_ts,'hh24:mi:ss.FF3') TOK_F_OUT,
                                A.msg_processed_ts CHECK_DATE
                                from
                                (select 
                                                d.msg_id,
                                                d.msg_direction,
                                                d.msg_unq_id,
                                                d.msg_processed_ts,
                                                d.component_id,
                                                d.misc_data
                                                from 
                                                psginst1.txn_cme_audit d where d.component_id = '4' and d.msg_direction = 'I' and d.msg_processed_ts > '04-MAR-2014 06:00:00') A,
                                (select  
                                                d.msg_id,
                                                d.msg_direction,
                                                d.msg_unq_id,
                                                d.msg_processed_ts,
                                                d.component_id,
                                                d.misc_data 
                                                from 
                                                psginst1.txn_cme_audit d where d.component_id = '4' and d.msg_direction IN ('O','F')) B
                                                where A.msg_unq_id = B.msg_unq_id and A.msg_id = B.msg_id) X,
                                                
                                                           
                              (SELECT 
                                A.msg_unq_id,
                                to_char(A.msg_processed_ts,'hh24:mi:ss.FF3') PA_F_IN ,
                                regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD:1'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,2) POS_CD1_REQ,
                                regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD:2'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,2) POS_CD2_REQ,
                                regexp_substr(substr(to_char(B.misc_data),NULLIF(instr(to_char(B.misc_data),'CARD:3'),0),instr(to_char(B.misc_data),';')),'[^/]+',1,2) POS_CD3_REQ,
                                to_char(B.msg_processed_ts,'hh24:mi:ss.FF3') PA_F_OUT,                          
                                A.msg_direction,
                                B.msg_direction
                                from
                                (select  
                                                d.msg_id,
                                                d.msg_direction,
                                                d.msg_unq_id,
                                                d.msg_processed_ts,
                                                d.component_id,
                                                d.misc_data 
                                                from 
                                                psginst1.txn_cme_audit d where d.component_id = '2' and d.msg_direction = 'I') A,
                                (select  
                                                d.msg_id,
                                                d.msg_direction,
                                                d.msg_unq_id,
                                                d.msg_processed_ts,
                                                d.component_id,
                                                d.misc_data 
                                                from psginst1.txn_cme_audit d where d.component_id = '2' and d.msg_direction IN ('O','F')) B 
                                                where A.msg_unq_id = B.msg_unq_id and A.msg_id = B.msg_id)Y
                                                
                                              where X.msg_unq_id = Y.msg_unq_id and X.CHECK_DATE > '04-MAR-2014 06:00:00'
                              
                              
##################################################### Usr mqfte
      
TargetAgent=T01_STGPIM01_T1EMMFT02
WMQFTEDestinationQM=S1EMMFT02           
destination_path=//upload//hotfolders//Interface_Inbound_I016//in//52F6ABCA1A7530A0E10080000A9020E8_S3MSBK01_2014021018485817I016.xml
SenderID=MS                  
ReceiverID=STEP                
ContentType=text
destination_support_group=XB60_MQFTE_SUPPORT
source_support_group=NTSS_SUPPORT
jobname=MFT_MCFP_MS_I016_STEP
severity=2



####################### STAT xslt
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:csv="csv:csv" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">
	<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/Root">
		<xsl:text>StatisticsType</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>StartDate</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>StartTime</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>EndDate</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>EndTime</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>MessageBroker</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>ExecutionGroup</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>MessageFlow</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>Node</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>MessageCount</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>ElapsedTimeTotal</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>CPUTimeTotal</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>CPUwaitTime</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>ElapsedWaitTime</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>MaxMsgSize</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>MinMsgSize</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>TotalMsgSize</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>WMQErrors</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>MessageErrors</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>ErrorsProcessed</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>AggregateReplyTimeouts</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>CommitCount</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>BackoutCount</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>ThreadCount</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>ThreadMaxd</xsl:text>
		<xsl:value-of select="','"/>
		<xsl:text>&#xa;</xsl:text>
		<xsl:for-each select="WMQIStatisticsAccounting">
			<xsl:for-each select="MessageFlow">
				<xsl:text>MessageFlow</xsl:text>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@StartDate"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@StartTime"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@EndDate"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@EndTime"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@BrokerLabel"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@ExecutionGroupName"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@MessageFlowName"/>
				<xsl:value-of select="','"/>
				<xsl:text>NULL</xsl:text>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalInputMessages"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalElapsedTime"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalCPUTime"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@CPUTimeWaitingForInputMessage"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@ElapsedTimeWaitingForInputMessage"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@MaximumSizeOfInputMessages"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@MinimumSizeOfInputMessages"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalSizeOfInputMessages"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalNumberOfMQErrors"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalNumberOfMessagesWithErrors"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalNumberOfErrorsProcessingMessages"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalNumberOfTimeOutsWaitingForRepliesToAggregateMessages"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalNumberOfCommits"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalNumberOfBackouts"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@NumberOfThreadsInPool"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TimesMaximumNumberOfThreadsReached"/>
				<xsl:text>&#xa;</xsl:text>
			</xsl:for-each>
			<xsl:for-each select="Nodes/NodeStatistics">
				<xsl:text>Node</xsl:text>
				<xsl:value-of select="','"/>
				<xsl:value-of select="ancestor::*[2]/MessageFlow/@StartDate"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="ancestor::*[2]/MessageFlow/@StartTime"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="ancestor::*[2]/MessageFlow/@EndDate"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="ancestor::*[2]/MessageFlow/@EndTime"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="ancestor::*[2]/MessageFlow/@BrokerLabel"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="ancestor::*[2]/MessageFlow/@ExecutionGroupName"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="ancestor::*[2]/MessageFlow/@MessageFlowName"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@Label"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@CountOfInvocations"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalElapsedTime"/>
				<xsl:value-of select="','"/>
				<xsl:value-of select="@TotalCPUTime"/>
				<xsl:text>&#xa;</xsl:text>
			</xsl:for-each>
		</xsl:for-each>
	</xsl:template>
</xsl:stylesheet>
########################################################## Execute XSL
  amqsget AAA $QM >test;  sed 's/message <//g' test | sed 's/>>/>/g' | grep -v -e AMQSGET0 -e "no more messages" -e "MQGET" -e "xml version"> test1
  java org.apache.xalan.xslt.Process -IN (input XML) -XSL (XSLT) -OUT(Output file name)
  

  
  
  #######################best macro vba links
  http://andypope.info/vba.htm
  
  tmp="/tmp/test" tmp1="/tmp/test1" rm $tmp 2>&1 /dev/null;/opt/mqm/samp/bin/amqsget AAA $QM >$tmp; dos2unix $tmp; cat $tmp | tr -d "\n" | tr -d "\r" | sed 's/message <//g' test | sed 's/>>/>/g' | grep -v -e AMQSGET0 -e "no more messages" -e "MQGET" -e "xml version" >$tmp1;java org.apache.xalan.xslt.Process -IN $tmp1 -XSL sterling.xsl -OUT out.csv
  
  
  
  ###################################multiple xml from lines of csv##########################
  filename=$1;
a=`tail -n +2 $filename| sort | awk -F"," 'BEGIN{Start=1}
{
if(OrderNo!=$1){
if(Start!=1){
print "</OrderLines>"
print "</Order>"
}
print "<Order OrderNo=" $1 ">"
print "<OrderLines>"
}
print "<OrderLine ItemId=" $3 " AlternateItemId=" $2 " >"
print "<Store StoreId=" $5 " Quantity=" $4 " />"
print "<Store StoreId=" $7 " Quantity=" $6 "/>"
print "<Store StoreId=" $9 " Quantity=" $8 " />"
print "<Store StoreId=" $11 " Quantity=" $10 " />"
print "</OrderLine>"
OrderNo=$1
Start=0
}
END{
print "</OrderLines>"
print "</Order>"
}' `
echo $a | /opt/mqm/samp/bin/amqsput TEST1 $QM

##############################################################################
# PIM AGENT HOST
################


[mqm@s220786laps5001 ~]$ cat step_sdl_mft_monitor.xml
<?xml version="1.0" encoding="UTF-8"?>
<request xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.00" xsi:noNamespaceSchemaLocation="FileTransfer.xsd">
  <managedTransfer>
    <originator>
      <hostName>s221533laps5001</hostName>
      <userID>mqm</userID>
    </originator>
    <sourceAgent QMgr="P1EMMFT02" agent="${DPMQFTEDestinationAgent}"/>
    <destinationAgent QMgr="P1EMMFT02" agent="${DPMQFTEDestinationAgent}"/>
    <transferSet priority="0">
      <metaDataSet>
        <metaData key="source_support_group">${DPMQFTESenderId}</metaData>
        <metaData key="destination_support_group">${DPMQFTEReceiverId}</metaData>
        <metaData key="job_name">${DPMQFTEContentType}</metaData>
        <metaData key="Severity">2</metaData>
      </metaDataSet>
      <item checksumMethod="MD5" mode="binary">
        <source disposition="delete" recursive="false" type="queue">
          <queue groupId="${groupId}" useGroups="true">MFT_MQFTE_SDL_STEP_XB60</queue>
        </source>
        <destination exist="overwrite" type="file">
            <file>${DPMQFTEDestinationFile}</file>
        </destination>
      </item>
    </transferSet>
    <job>
      <name>${DPMQFTEContentType}</name>
    </job>
  </managedTransfer>
</request>

DR
fteCreateAgent -agentName P01_PRODPIM02_P1EMMFT02 -agentQMgr P1EMMFT02 -agentQMgrHost MFT01.att.mnscorp.net -agentQMgrPort 11552 -agentQMgrChannel FTE.SVRCONN
PROD
fteCreateAgent -agentName P01_PRODPIM02_P1EMMFT02 -agentQMgr P1EMMFT02 -agentQMgrHost MFT02.att.mnscorp.net -agentQMgrPort 11552 -agentQMgrChannel FTE.SVRCONN

[mqm@s220786laps5001 P01_PRODPIM02_P1EMMFT02]$ cat agent.properties
#
#Fri Mar 14 12:27:05 GMT 2014
agentQMgr=P1EMMFT02
agentQMgrPort=11552
agentDesc=
agentQMgrHost=mft02.att.mnscorp.net
agentQMgrChannel=FTE.SVRCONN
agentName=P01_PRODPIM02_P1EMMFT02
enableQueueInputOutput=true
maxInputOutputMessageLength=104857600
maxSourceTransfers=50
maxQueuedTransfers=6500
maxDestinationTransfers=50
maxCommandHandlerThreads=25
ioQueueDepth=500
ioThreadPoolSize=100
agentChunkSize=262144

# P1EMMFT02
###########

alter ql(SYSTEM.CLUSTER.TRANSMIT.P1_ECL01.P1EMGW01) MAXMSGL(26214400)
alter ql(SYSTEM.CLUSTER.TRANSMIT.P1_ECL01.P1EMGW02) MAXMSGL(26214400)

alter CHANNEL(P1_ECL01.P1EMGW02) CHLTYPE(CLUSSDR) MAXMSGL(26214400)
alter CHANNEL(P1_ECL01.P1EMMFT02) CHLTYPE(CLUSRCVR) MAXMSGL(26214400)


DEFINE QLOCAL(SYSTEM.FTE.COMMAND.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(10000) +
 MAXMSGL(26214400) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.DATA.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(10000) +
 MAXMSGL(26214400) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.REPLY.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(10000) +
 MAXMSGL(26214400) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.STATE.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(10000) +
 MAXMSGL(26214400) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.EVENT.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(10000) +
 MAXMSGL(26214400) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.AUTHAGT1.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(0) +
 MAXMSGL(0) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.AUTHTRN1.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(0) +
 MAXMSGL(0) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.AUTHOPS1.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(0) +
 MAXMSGL(0) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.AUTHSCH1.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(0) +
 MAXMSGL(0) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.AUTHMON1.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(0) +
 MAXMSGL(0) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE
DEFINE QLOCAL(SYSTEM.FTE.AUTHADM1.P01_PRODPIM02_P1EMMFT02) +
 DEFPRTY(0) +
 DEFSOPT(SHARED) +
 GET(ENABLED) +
 MAXDEPTH(0) +
 MAXMSGL(0) +
 MSGDLVSQ(PRIORITY) +
 PUT(ENABLED) +
 RETINTVL(999999999) +
 SHARE +
 NOTRIGGER +
 USAGE(NORMAL) +
 REPLACE

setmqaut -m P1EMMFT02 -t qmgr -g mqmft1 +connect +inq +setid
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE -g mqmft1 +put +get +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.DEFAULT.MODEL.QUEUE -g mqmft1 +get +dsp +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE -g mqmft1 +put +setall
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.COMMAND.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +put +get +setid +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.DATA.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.EVENT.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.REPLY.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.STATE.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t topic -n SYSTEM.FTE -g mqmft1 +sub +pub
setmqaut -m P1EMMFT02 -t queue -n WMQFTE.** -g mqmft1 +put +get +inq
setmqaut -m P1EMMFT02 -t rqmname -n P1EMMFT01 -g mqmft1 +put

setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.AUTHAGT1.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.AUTHTRN1.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.AUTHOPS1.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.AUTHSCH1.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.AUTHMON1.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq
setmqaut -m P1EMMFT02 -t queue -n SYSTEM.FTE.AUTHADM1.P01_PRODPIM02_P1EMMFT02 -g mqmft1 +get +put +inq

setmqaut -m P1EMMFT02 -t queue -n MFT_MQFTE_SDL_STEP_XB60 -g mqmft1 +browse +inq +get 

echo "REFRESH SECURITY" | runmqsc $QM

# PIM AGENT HOST
################

fteStartAgent P01_PRODPIM02_P1EMMFT02

fteCreateMonitor -ma P01_PRODPIM02_P1EMMFT02 -mn STEP_SDL_MONITOR -mm P1EMMFT02 -mq MFT_MQFTE_SDL_STEP_XB60 -mt /home/mqm/step_sdl_mft_monitor.xml -tr completeGroups -pi 30 -pu seconds


# P1STEP01
##########

echo "alter qmgr MAXMSGL(104857600)" | runmqsc $QM
 
echo "alter ql(SYSTEM.CLUSTER.TRANSMIT.QUEUE) MAXMSGL(104857600)" | runmqsc $QM
echo "alter ql(SYSTEM.CLUSTER.TRANSMIT.QUEUE) MAXMSGL(104857600)" | runmqsc $QM
echo "alter ql(SYSTEM.CLUSTER.TRANSMIT.P1_ECL01.P1EMGW01) MAXMSGL(26214400)" | runmqsc $QM
echo "alter ql(SYSTEM.CLUSTER.TRANSMIT.P1_ECL01.P1EMGW02) MAXMSGL(26214400)" | runmqsc $QM

echo "alter chl(STEP.SVRCONN) chltype(SVRCONN) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(STEP.SVRCONN.SSL) chltype(SVRCONN) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(SYSTEM.DEF.CLUSRCVR) CHLTYPE(CLUSRCVR) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(SYSTEM.DEF.CLUSSDR) CHLTYPE(CLUSSDR) MAXMSGL(26214400)" | runmqsc $QM

echo "alter chl(P1_ECL01.P1STEP01) CHLTYPE(CLUSRCVR) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(P1_ECL01.P1EMGW01) CHLTYPE(CLUSSDR) MAXMSGL(26214400)" | runmqsc $QM

echo "SET AUTHREC PROFILE('MFT_*')  GROUP('mqstep1') OBJTYPE(QUEUE) AUTHADD(PUT,SET)" | runmqsc $QM
echo "SET AUTHREC PROFILE('**') GROUP('mqstep1') OBJTYPE(QUEUE) AUTHADD(BROWSE,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)" | runmqsc $QM
echo "SET AUTHREC PROFILE('*') GROUP('mqstep1') OBJTYPE(QUEUE) AUTHADD(BROWSE,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)" | runmqsc $QM
echo "REFRESH SECURITY" | runmqsc $QM

# P1STEP02
##########
echo "alter qmgr MAXMSGL(104857600)" | runmqsc $QM
 
echo "alter ql(SYSTEM.CLUSTER.TRANSMIT.QUEUE) MAXMSGL(104857600)" | runmqsc $QM
echo "alter ql(SYSTEM.CLUSTER.TRANSMIT.P1_ECL01.P1EMGW01) MAXMSGL(26214400)" | runmqsc $QM
echo "alter ql(SYSTEM.CLUSTER.TRANSMIT.P1_ECL01.P1EMGW02) MAXMSGL(26214400)" | runmqsc $QM

echo "alter chl(STEP.SVRCONN) chltype(SVRCONN) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(STEP.SVRCONN.SSL) chltype(SVRCONN) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(SYSTEM.DEF.CLUSRCVR) CHLTYPE(CLUSRCVR) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(SYSTEM.DEF.CLUSSDR) CHLTYPE(CLUSSDR) MAXMSGL(26214400)" | runmqsc $QM

echo "alter chl(P1_ECL01.P1STEP02) CHLTYPE(CLUSRCVR) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(P1_ECL01.P1EMGW02) CHLTYPE(CLUSSDR) MAXMSGL(26214400)" | runmqsc $QM

echo "SET AUTHREC PROFILE('MFT_*')  GROUP('mqstep1') OBJTYPE(QUEUE) AUTHADD(PUT,SET)" | runmqsc $QM
echo "SET AUTHREC PROFILE('**') GROUP('mqstep1') OBJTYPE(QUEUE) AUTHADD(BROWSE,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)" | runmqsc $QM
echo "SET AUTHREC PROFILE('*') GROUP('mqstep1') OBJTYPE(QUEUE) AUTHADD(BROWSE,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)" | runmqsc $QM
echo "REFRESH SECURITY" | runmqsc $QM


# P1EMGW01
##########

echo "alter chl(P1_ECL01.P1EMGW01) CHLTYPE(CLUSRCVR) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(P1_ECL01.P1EMGW02) CHLTYPE(CLUSSDR) MAXMSGL(26214400)" | runmqsc $QM


# P1EMGW02
##########

echo "alter chl(P1_ECL01.P1EMGW01) CHLTYPE(CLUSSDR) MAXMSGL(26214400)" | runmqsc $QM
echo "alter chl(P1_ECL01.P1EMGW02) CHLTYPE(CLUSRCVR) MAXMSGL(26214400)" | runmqsc $QM

#########################################################################################################################

MFT_MQFTE_STEP_SDL_XB60  is configured in XB60 - need to change it to MFT_MQFTE_SDL_STEP_XB60


############################# zip2html tool for dp documentation

https://www.ibm.com/developerworks/community/blogs/HermannSW/entry/zip2html6?lang=en


#######################huxp0101 --- production --- database --- access
p3012783
Vishwa@14

select EXCEPTION_ID,SYS_INSERT_TSTMP from exc_msg_exception where queue_name = 'STEP_MS.PROD_APROV_P1593.PRQ' order by SYS_INSERT_TSTMP desc with ur


SELECT AUDITING_SYS_COMPONENT,CME_INTRFC_ID,MSG_DIRECTION,MISC_DATA ,SYS_INSERT_TS
FROM MS.TXN_CME_AUDIT WHERE AUDITING_SYS_COMPONENT in( 'IP3_PPF_PROD_APROV_P1593','IP3_BATCH_P1596') with ur;

db2 "select msg_direction,MISC_DATA ,SYS_INSERT_TS from txn_cme_audit where sys_insert_ts > '2014-03-31 20:00:06.628326'  AND auditing_sys_component ='IP3_PPF_PROD_APROV_P1593' with ur"

mqsichangetrace -u P1MSBK01 -e INTL_PIM -f com.mns.ms.step_dw.IP3_PPF_PROD_APROV_P1593 -l debug -c 200000 -r
mqsireadlog P1MSBK01 -u  -e INTL_PIM -f -o PRODAPROV.xml;mqsiformatlog -i PRODAPROV.xml -o PRODAPROV.txt;mqsichangetrace -u P1MSBK01 -e INTL_PIM -f com.mns.ms.step_dw.IP3_PPF_PROD_APROV_P1593 -l none


################ VM ware hypervisor key - passport vantage

lramakrishna@prolifics.com
lokesh@123

search for access catalog in IBM site

VMware vSphere Hypervisor 5 License	5M4C4-623E6-K8L49-0H024-A5T7L



######################### VM ware ip addresses

192.168.153.137/24  - to 141.

admin
XI52XI52 or xi52@123 or XI52@DP



 02088436877 - Himanshu - southall travels

 
 
 CIU database
 
 
Please use the details below for CATE:

CATE

Host: oex1-scan.mnsukcate.adrootcate.marksandspencercate.com
User Name: ciudata
Password: ciudata.
Port: 1521
Service Name: CIU


PROD

Hostname: oex0-scan
Port: 1521
Service Name: CIU_P
Schema: SCRATCH
Password: PXSCRATCH


mqsisetdbparms <Brokername> -m DSN -u username -p password

mqsisetdbparms MB8BROKER -m TESTAPP -u username -p password

############### cate database
cmsinst1
Qim3bzRw



######################### POS sample message locations

\\10.128.11.10\esfa\IS03_ITF Testing - DATA SETUP\2012 Projects\Test Data Repository\POS XMLs



AML firewall changes ===========================


################################extract private and public from cert

openssl pkcs12 -in yourP12File.pfx -nocerts -out privateKey.pem

openssl pkcs12 -in yourP12File.pfx -clcerts -nokeys -out publicCert.pem


"SET OutputRoot.XMLNSC.data.CRYPTO_DELIMITER = '|' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_KEYSTORE_LOCATION = 'D://Broker_Workspace//jarfiles//Broker.jks' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_MODE = 'D' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_CERT_ID = 'ciu' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_CIPHER_SPEC = 'AES/CBC/PKCS5Padding' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_ENCODING = 'UTF_8' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_KEYSIZE = '1024' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_KEY_PASSWORD = 'cGFzc3dvcmQ=' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_ELEMENTS = '/POSLog/Transaction/RetailTransaction/Customer/CustomerName/Salutation' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_NAMESPACES = 'pcms|http://www.pcmsgroup.com/XML' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_DEFAULT_NAMESPACE = 'http://www.nrf-arts.org/IXRetail/namespace/' " +
				"SET OutputRoot.XMLNSC.data.CRYPTO_OBFUSCATION_DIGITS = '' "; 
				
				
				
				
				system testing access
				Alagarsamy, Suresh
P9100998
swetha12


/POSLog/Transaction/RetailTransaction/Customer/CustomerName/Salutation|/POSLog/Transaction/RetailTransaction/Customer/CustomerName/FullName|/POSLog/Transaction/RetailTransaction/Customer/EMail/EMailAddress|/POSLog/Transaction/RetailTransaction/Customer/Telephone/FullTelephoneNumber|/POSLog/Transaction/RetailTransaction/Customer/CustomerName/Name[@TypeCode='GivenName']|/POSLog/Transaction/RetailTransaction/Customer/CustomerName/Name[@TypeCode='FamilyName']/POSLog/Transaction/RetailTransaction/Customer/CustomerName/Salutation|/POSLog/Transaction/RetailTransaction/Customer/CustomerName/FullName|/POSLog/Transaction/RetailTransaction/Customer/EMail/EMailAddress|/POSLog/Transaction/RetailTransaction/Customer/Telephone/FullTelephoneNumber|/POSLog/Transaction/RetailTransaction/Customer/CustomerName/Name[@TypeCode='GivenName']|/POSLog/Transaction/RetailTransaction/Customer/CustomerName/Name[@TypeCode='FamilyName']


p3005580/london2014   - appsit login
P9100998/swetha12  - appsit and system testing


INSERT INTO MS.CFG_EXTERNAL_SYSTEM(SYSTEM_NAME,SYSTEM_DESC,SYS_INSERT_TSTMP) VALUES ('CIU','ECOM CIU',CURRENT_TIMESTAMP);
INSERT INTO MS.CFG_MSG_FLOW (Flow_Id,Source_Name ,Flow_Name,Flow_Pattern_Id,Flow_Type,Flow_Topic,Flow_Input_QMgr,Flow_Input_Queue,Validation_Required,Sampling_Rate,Perf_Write_Flag,Routing_Target_QMgr,Routing_Target_Queue,Routing_Reply_QMGR,Routing_Reply_Queue,Routing_Final_Consumer) VALUES (1373,'P1','IP1_CFT4_C_CIU',1,'CF','','','SVC.NCPOS_DATA_CAPTURE_POS1.CRQ','N',100,'Y','','','','','');
INSERT INTO MS.CFG_CONSUMER (Consumer_Name,System_Name,Consumer_Desc,Consumer_Available,Perf_Write_Flag,Consumer_Input_Type,Consumer_Input_Name1,Consumer_Input_Name2,Consumer_Routing_QMGR,Consumer_Routing_Queue,Consumer_Expiry_Period,Sending_Email_Address,Dynamic_Java_Gp_ID,SYS_INSERT_TSTMP) VALUES ('C2235','CIU','POS_TRXN_CONSUMER','Y','Y','Q','','SVC.NCPOS_DATA_CAPTURE_POS1.CRQ','','SVC.NCPOS_DATA_CAPTURE_POS1.CRQ',0,'','',CURRENT_TIMESTAMP);
INSERT INTO MS.CFG_CME_CONTROL (SOURCE_NAME,CME_AUDIT_REQD,CME_XSD_VALIDATION_REQD,CME_MSG_COUNT_VALIDATION_REQD,PATH_BATCH_MSG_COUNT,CME_REC_COUNT_VALIDATION_REQD,PATH_BATCH_REC_COUNT,PATH_BATCH_MSG_CALC,PATH_BATCH_REC_CALC,SYS_INSERT_TS) VALUES ('C2235','Y','N','N','','N','','','',CURRENT_TIMESTAMP);
INSERT INTO MS.CFG_CREATE_CME(SOURCE_NAME,SOURCE_NETWK_LOCN,DFND_INTRFC_ID,DFND_INTRFC_NAME,DFND_PAYLOAD_NAME,CREATE_CME,EVAL_MSG_ID,MSG_ID,EVAL_CREATED_TS,CREATED_TS,ADD_TIME_ZONE,TIME_ZONE,EVAL_INTRFC_ID,PATH_INTRFC_ID,EVAL_INTRFC_NAME,PATH_INTRFC_NAME,EVAL_PAYLOAD_NAME,PATH_PAYLOAD_NAME,EBMNS_PRTNR_ID,EBMNS_PRTNR_NAME,EVAL_BATCH_RUN_ID,PATH_BATCH_RUN_ID,SYS_INSERT_TS) VALUES ('C2235','INT','POS1','NCPOS_CAPTURE','NCPOS_CAPTURE','Y','Y','InputRoot.MQMD.MsgId','N','','N','','N','POS1','N','NCPOS_CAPTURE','N','NCPOS_CAPTURE','','','','',CURRENT_TIMESTAMP);
INSERT INTO MS.CFG_TRANSFORM (Source_Producer,Target_Consumer,Transform_Type,Transform_Files,Relative_Cost,SYS_INSERT_TSTMP) VALUES ('P1','C2235','E','',0,CURRENT_TIMESTAMP);
INSERT INTO MS.EXC_MSG_REPLAY_RULE (ERROR_CODE,QUEUE_NAME,REQUEST_TYPE,CONSUMER_NAME,COMMENTS,EXCP_HIGH_THRESHOLD,MAX_REPLAY_COUNT,REPLAY_DELAY,REPLAY_QUEUE,REPLAY_RULE,REPLAY_WITH_RFH,ERROR_CODE_MATCH_FILTER,SYS_INSERT_TSTMP) VALUES ('DEFAULT','SVC.NCPOS_DATA_CAPTURE_POS1.CRQ','ANY','C2235','NCPOS Data Capture',1,1,1,'SVC.NCPOS_DATA_CAPTURE_POS1.CRQ','M','Y','ANY',CURRENT_TIMESTAMP);
INSERT INTO MS.CFG_MAP_QUEUE_INTRFC_ID(PROJECT_NAME,QUEUE_NAME,INTRFC_ID,INTRFC_NAME,INTRFC_DESC,COMPLEXITY,PRIM_CON,SEC_CON)VALUES('NCPOS_DATA_CAPTURE','SVC.NCPOS_DATA_CAPTURE_POS1.CRQ','POS1','POS data capture','new channels pos dc','P2','POS','CIU')




[CIU]
Driver=/opt/IBM/mqsi/8.0.0.0/ODBC64/V6.0/lib/UKora24.so
Description=CIU DataDirect 5.2 64bit Oracle Wire Protocol
HostName= oex1-scan.mnsukcate.adrootcate.marksandspencercate.com
PortNumber=1521
ServiceName=CIU 
CatalogOptions=0
EnableStaticCursorsForLongData=0
ApplicationUsingThreads=1
EnableDescribeParam=1
OptimizePrepare=1
WorkArounds=536870912
ProcedureRetResults=1
ColumnSizeAsCharacter=1


adapter exception and failure alias queues on the core broker. 
odbc connection 
mqsiset dbparms
new queue created
new subscription 
database entries on insert . 


openssl pkcs12 -in %cd%/CIU/CIU.pfx -nocerts -out CIY_Private.pem
openssl pkcs12 -in %cd%/CIU/CIU.pfx -clcerts -nokeys -out CIU_Public.pem
openssl pkcs12 -export -out CIU.p12 -inkey CIY_Private.pem -in CIU_Public.cer -passout pass:password -name CIU7RhIt9pz



How to do decryption in broker using SF_Cryptography
1) Verify the SF_Cryptography for the location of the Cryptography.jar (if this is /var/mqsi - the jar file needs to be placed there) 
2) Download unlimited policy jar files (for keys bigger than 128 bit) local_policy and US_export_policy 
3) Place these jar files in the location /Broker_installed_location/jre16/lib/security
4) Need to put entries into the three tables . CFG_CRYPTO_DATA , CFG_CRYPTO_MESSAGE_SPEC, CFG_CRYPTO_SPECIFICATION.
5) There is a DB2 View which is created automatically CFG_CRYPTO_VIEW (from where the crypto_service code - compiled into Crytpography.jar selects data from ). 
6) The CRYPT_MESSAGE_SPEC_ID should always end in either _D or _E depending on whether it is a decryption or encryption
7) To create the stash password of the jks file to store in the CFG_CRYPTO_SPECIFICATION - use the stashpassword.java file under utilities in SVN
8) In the stash password script need to manually enter the password in the script  -compile into class and execute. 
9) DOne


http://www.cs.ru.nl/~erikpoll/hw/samples/RSADecrypt.java


####################################################### decrypting using private key. 
STARTING WITH 1 ENCRYPTED XML CHILD - Name
<Name TypeCode="FamilyName">590591880000001827A1|YxJeMswALEduOfLY/MHl+gkzPeVMOxBWGNR6nWq/Jpj69I1+FD4D7CAwA6VP9m+bjBtwii+a+A9qsxITA1aAgobQZwTg5XRwVRZQnvnSMPKOHM1FKYgBT9yXYxTNkHl5hFMLMMgjN6Jrgie7fkJyGhSixEZz66r0G/bzk7HHtd4=|c29tZUxvbmdQYXNzd29yZA==|oAaaF2+sxPfb9u9B4JZ5TA==</Name>

echo "590591880000001827A1|YxJeMswALEduOfLY/MHl+gkzPeVMOxBWGNR6nWq/Jpj69I1+FD4D7CAwA6VP9m+bjBtwii+a+A9qsxITA1aAgobQZwTg5XRwVRZQnvnSMPKOHM1FKYgBT9yXYxTNkHl5hFMLMMgjN6Jrgie7fkJyGhSixEZz66r0G/bzk7HHtd4=|c29tZUxvbmdQYXNzd29yZA==|oAaaF2+sxPfb9u9B4JZ5TA==" > orig.b64

EXTRACT BLOBS FROM XML
awk -F '|' '{print $2}' orig.b64 > AES.b64
awk -F '|' '{print $3}' orig.b64 > IV.b64
awk -F '|' '{print $4}' orig.b64 > encryptedText.b64

CONVERT TO BINARY
base64 -d AES.b64 > AES.bin
base64 -d IV.b64 > IV.bin
base64 -d encryptedText.b64 > encryptedText.bin

EXTRACT PRIVATE KEY FROM THE PFX
openssl pkcs12 -in CIU_privatePublic_bundle.pfx -nocerts -out privateKey.pem

DECRYPT AES KEY WITH RSA FROM CERT
openssl pkeyutl -decrypt -inkey privateKey.pem -keyform PEM -in AES.bin -out AES_dec.bin

A CLUMSY WAY TO CONVERT DECRYPTED AES TO HEX WITH CORRECT BYTE ORDER
hexdump -C AES_dec.bin | tr -d ' ' | cut -f1 -d '|' | cut -b9- | tr -d '\n' > AES_dec.hex

A CLUMSY WAY TO CONVERT IV.bin TO HEX WITH CORRECT BYTE ORDER
hexdump -C IV.bin | tr -d ' '| cut -f1 -d '|' | cut -b9- | tr -d '\n' > IV.hex

DECRYPT ENCRYPTED TEXT WITH AES AND IV
openssl enc -d -aes-256-cbc -K `cat AES_dec.hex` -iv `cat IV.hex` -in encryptedText.bin > decrypted.txt



################################################################################################################
PROOF
cat  decrypted.txt 
CUSTOMER

2406080

it operations infrastructure support team


2406292


2407074

[17:55:10] Christina Daskalaki: In preparation for the workshop next week please could you ensure you have the following software installed on your computer:
Java JDK
Scala IDE (Eclipse - Kepler)
Scala 2.10 
Scalatest 2.x (jar file)
Akka - Akka 2.3.2 distribution (Scala 2.10)  - 44Mb [not the Activator installer]
If you have any problems please can you let me know.
[17:55:25] Christina Daskalaki: ^^ this is the one with some links on the tools to download

	
################### memory check ##################
ps -fo pid,vsz,args -u mqsi 


11846062

4537bc4f-ec3b-4515-a2d1-10df6aeaf2d3@marks-and-spencer.com


11847481 - all mails missing


######### learningtree on google for learning courses. ########

tmsinst1
7RhIt9pz
aAjYydvb39fazA==

Balmurugan, Yamuna
13:18
tmsinst1
7RhIt9pz


putty for DMZ/oracle - 2428859
IE for DMZ


http://www.codejava.net/java-ee/jsp/how-to-list-records-in-a-database-table-using-jsp-and-jstl
https://today.java.net/article/2003/06/18/accessing-databases-servlets-and-jsp-pages

02085613941 - hayes game
01895520051  -  uxbridge
02085706654 - hounslow


ICC teamsite

https://mnscorp.sharepoint.com/sites/ICC/SitePages/Home.aspx



Hi Steven

User sgonsalvez has just been created.
dev.sea.stockengine.env.devops.mnscorp.net
Password:  we33SPdA

Now you can login to 54.72.99.91 server.
To switch to mqm user please use following command: sudo -u mqm -i





dm-mands.metapack.com


/VF0009  
/VF0009/product_cut-outs  
/VF0009/product_images  
/VF0009/product_videos 


      <username>phtau3r</username>  
              <password>xbX34_cra</password>

			  
  Photolink\product_images\Scanned 
<entry msgw="msGatewayQM_CATE" platform="WIN" folder="VF0009" queue="MFT_XB60_OTMM_MQFTE" DestAgent="C01_MSHSRMNSUKC1228_C1MQFT02" DestQM="C1MQFT02" DestFile="\\MSHSRMNSUKC1384\Creative_Agencies\Photolink" SenderID="NTSS_SUPPORT" ReceiverID="DAM_SUPPORT" ContentType="MFT_PHOTOLINK_DAM_OTMM" /> 


/opt/ibm/websphere/ws70/profiles/AppSrv01/logs/server1


http://tinyurl.com/p72jbxz

slides of amazoung technical documents
http://www.slideshare.net/InsideAnalysis/the-big-connection-integrating-cloud-with-enterprise-systems


login on sea box under your account and then go to 10.156.6.164 by ssh: ssh sgonsalvez@10.156.6.164



SSL configuration for JMS - http://www.ibm.com/developerworks/websphere/library/techarticles/0510_fehners/0510_fehners.html

CipherSpec	Equivalent CipherSuite	Connection possible if SFIPS1 is set to NO?	Connection possible if SFIPS1 is set to YES?
NULL_MD5	SSL_RSA_WITH_NULL_MD5	Yes	No
NULL_SHA	SSL_RSA_WITH_NULL_SHA	Yes	No
RC4_MD5_EXPORT	SSL_RSA_EXPORT_WITH_RC4_40_MD5	Yes	No
RC4_MD5_US	SSL_RSA_WITH_RC4_128_MD5	Yes	No
RC4_SHA_US	SSL_RSA_WITH_RC4_128_SHA	Yes	No
RC2_MD5_EXPORT	SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5	Yes	No
DES_SHA_EXPORT	SSL_RSA_WITH_DES_CBC_SHA	Yes	No
RC4_56_SHA_EXPORT1024	SSL_RSA_EXPORT1024_WITH_RC4_56_SHA	No	No
DES_SHA_EXPORT1024	SSL_RSA_EXPORT1024_WITH_DES_CBC_SHA	No	No
TRIPLE_DES_SHA_US	SSL_RSA_WITH_3DES_EDE_CBC_SHA	Yes	No
TLS_RSA_WITH_AES_128_CBC_SHA	SSL_RSA_WITH_AES_128_CBC_SHA	No	Yes
TLS_RSA_WITH_AES_256_CBC_SHA5	SSL_RSA_WITH_AES_256_CBC_SHA	No	Yes
AES_SHA_US2	 	 	 
TLS_RSA_WITH_DES_CBC_SHA	SSL_RSA_WITH_DES_CBC_SHA	No	No3
TLS_RSA_WITH_3DES_EDE_CBC_SHA	SSL_RSA_WITH_3DES_EDE_CBC_SHA	No	Yes
FIPS_WITH_DES_CBC_SHA	SSL_RSA_FIPS_WITH_DES_CBC_SHA	Yes	No4
FIPS_WITH_3DES_EDE_CBC_SHA	SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA	Yes	No





mq installation fix pack instructions

Plan is to install 7.5.0.3 alongside 7.5.0.0 and then switch over the qmgr.

High level steps as follows:

0. stop qmgrs
1.  where wmq_path = /apps/mq1 (for example)
      rpm --prefix ${wmq_path} -i MQSeriesRuntime*;
      rpm --prefix ${wmq_path} -i MQSeriesServer*;
      rpm --prefix ${wmq_path} -i MQSeriesSDK*;
      rpm --prefix ${wmq_path} -i MQSeriesJRE*;
      rpm --prefix ${wmq_path} -i MQSeriesJava*;
      rpm --prefix ${wmq_path} -i MQSeriesGSKit*;
      rpm --prefix ${wmq_path} -i MQSeriesMan*;
      rpm --prefix ${wmq_path} -i MQSeriesSamples*;

2. set Installation2 to be new install

	if [ "${wmq_installationName}" == "" ]; then
		wmq_installationName="Installation1";
	fi
	${wmq_path}/bin/setmqinst -i -n ${wmq_installationName};

3. Setmqm -m qmgr -n Installation2

That should do it?

4. check using

[mqm@p120663vaps2270 ~]$ dspmqinst ?
Usage: dspmqinst [-n InstName | -p InstPath]

 -n   Installation name.
 -p   Installation path.

-----Original Message-----
From: Imran Jaffer [mailto:imranjaffer78@googlemail.com] 
Sent: 19 November 2013 23:20
To: imran.jaffer@att.com
Subject: Mq upgrades vrmf

Mq upgrades vrmf

Setmqenv -s
Dspmqinst
Setmqinst
Setmqm -m qmgr -n installation1

Crtmqpkg pkg-suffix .... repackages for install on Linux 


Plan is to install 7.5.0.3 alongside 7.5.0.0 and then switch over the qmgr.

High level steps as follows:

0. stop qmgrs
1.  where wmq_path = /apps/mq1 (for example)
      rpm --prefix ${wmq_path} -i MQSeriesRuntime*;
      rpm --prefix ${wmq_path} -i MQSeriesServer*;
      rpm --prefix ${wmq_path} -i MQSeriesSDK*;
      rpm --prefix ${wmq_path} -i MQSeriesJRE*;
      rpm --prefix ${wmq_path} -i MQSeriesJava*;
      rpm --prefix ${wmq_path} -i MQSeriesGSKit*;
      rpm --prefix ${wmq_path} -i MQSeriesMan*;
      rpm --prefix ${wmq_path} -i MQSeriesSamples*;

2. set Installation2 to be new install

	if [ "${wmq_installationName}" == "" ]; then
		wmq_installationName="Installation1";
	fi
	${wmq_path}/bin/setmqinst -i -n ${wmq_installationName};

3. Setmqm -m qmgr -n Installation2

That should do it?

4. check using

[mqm@p120663vaps2270 ~]$ dspmqinst ?
Usage: dspmqinst [-n InstName | -p InstPath]

 -n   Installation name.
 -p   Installation path.

-----Original Message-----
From: Imran Jaffer [mailto:imranjaffer78@googlemail.com] 
Sent: 19 November 2013 23:20
To: imran.jaffer@att.com
Subject: Mq upgrades vrmf

Mq upgrades vrmf

Setmqenv -s
Dspmqinst
Setmqinst
Setmqm -m qmgr -n installation1

Crtmqpkg pkg-suffix .... repackages for install on Linux 




########################################
<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0"  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  xmlns:dp="http://www.datapower.com/extensions"  xmlns:date="http://exslt.org/dates-and-times"  xmlns:exsl="http://exslt.org/common"  xmlns:dpfunc="http://www.datapower.com/extensions/functions"  xmlns:dpconfig="http://www.datapower.com/param/config"  extension-element-prefixes="dp date exsl dpfunc dpconfig"  exclude-result-prefixes="dp date exsl dpfunc dpconfig">
	<xsl:template match="/">
		<xsl:variable name="url" select="dp:variable('var://service/URL-in')"/>
		<xsl:variable name="Exact_filename" select="$header//NameValueData/NameValue/usr/destination_file" />
		<!--Get the input queue name-->
		<xsl:variable name="queue" select="substring-after($url,'RequestQueue=')"/>
		<!--Get MQRFH2 Header of the incoming messages-->
		<xsl:variable name="oldMQRFH2">
			<xsl:value-of select="dp:request-header('MQRFH2')" disable-output-escaping="yes"/>
		</xsl:variable>
		<!-- parse MQRFH2 Header into a usable nodeset -->
		<xsl:variable name="header" select="dp:parse($oldMQRFH2)" />
		<!-- store the desired values in a variable available for later -->
		<xsl:variable name="source_file_name" select="$header//NameValueData/NameValue/usr/WMQFTEFileName" />
		<xsl:variable name="jobname" select="$header//NameValueData/NameValue/usr/jobname" />
		<xsl:variable name="destination_path" select="$header//NameValueData/NameValue/usr/destination_path" />
		<xsl:variable name="destination_file" select="$header//NameValueData/NameValue/usr/destination_file" />
		<xsl:variable name="destination_file_len">
			<xsl:value-of select="string-length($destination_file)" />
		</xsl:variable>
		<xsl:message dp:priority="debug">  The value of "rename filename length " is <xsl:value-of select="$destination_file_len" />
		</xsl:message>
		<xsl:variable name="Exact_filename">
			<xsl:choose>
				<xsl:when test="$destination_file_len != 0">
					<xsl:value-of select="$destination_file"/>
				</xsl:when>
				<xsl:when test="number($destination_file_len) = 0">
					<xsl:value-of select="$source_file_name"/>
				</xsl:when>
				<xsl:otherwise/>
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="Exact_filename">
			<xsl:call-template name="substring-after-last">
				<xsl:with-param name="string" select="$Exact_filename" />
				<xsl:with-param name="delimiter">
					<xsl:text>/</xsl:text>
				</xsl:with-param>
			</xsl:call-template>
		</xsl:variable>
		<xsl:variable name="destination_url">
			<xsl:value-of select="concat(normalize-space(document('mft_site_config.xml')/mft_site_config/entry[@qname=$queue]/@site_name),$destination_path,$Exact_filename,'.tmp?Rename=',$Exact_filename)" />
		</xsl:variable>
		<dp:set-variable name="'var://context/mpgw/destination_url'"  value="$destination_url" />
	</xsl:template>
	<xsl:template name="substring-after-last">
		<xsl:param name="string" />
		<xsl:param name="delimiter" />
		<xsl:choose>
			<xsl:when test="contains($string, $delimiter)">
				<xsl:call-template name="substring-after-last">
					<xsl:with-param name="string" select="substring-after($string, $delimiter)" />
					<xsl:with-param name="delimiter" select="$delimiter" />
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$string" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
##########################################

source-mqfte: MQFTE_ASYS_FSH [down]
----------------------------

source-mqfte MFT_MQFTE_NEW_CHANNELS_XB60; admin-state enabled; queue-manager MS_CORP_GW; get-queue MFT_MQFTE_NEW_CHANNELS_XB60; get-message-options 36865; concurrent-connections 1; retrieve-backout-settings on; ignore-backout-errors off; use-qm-in-url off

User: ftpupload  
Password: UATsftp123

"C:\Program Files (x86)\IBM\WebSphere MQ\mqft\config\C1MQFT01\agents\C01_W530_C1MQFT01\agent.properties"


fteCreateTransfer -sa C01_W530_C1MQFT02 -sm C1MQFT02 -da C01_W530_C1MQFT02 -dm C1MQFT02 -sd leave -t binary -dq MFT_MQFTE_NEW_CHANNELS_XB60 -qmp true -qs 4M -jn MFT_MQFTE_NEW_CHANNELS_XB60 D:\




############################################### character conversion code for reparsing xml #####################################################

        DECLARE MsgString CHAR CAST(MsgBlob AS CHARACTER CCSID InputRoot.MQMD.CodedCharSetId ENCODING InputRoot.MQMD.Encoding);
        CREATE LASTCHILD OF OutputRoot DOMAIN('XML') PARSE(MsgString, InputProperties.Encoding, 1208);
        SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = '        ';
        SET OutputRoot.MQRFH2.(MQRFH2.Field)NameValueCCSID = 1208;
        SET OutputRoot.MQRFH2.(MQRFH2.Field)CodedCharSetId = 1208;
 

 
 ######################################### setting environment variable at EG level ###############
 
 FW: PMR 15211,019,866 : WMB  v8 Collector Node memory growth issue
 
 
If you are concerned about the memory growth for your batch processing  
 
you should set MQSI_FREE_MASTER_PARSERS=1.                              
 
                                                                        
 
This can be set in a .sh file at a broker level under:                  
 
                                                                        
 
     <broker work path>/common/profiles                                 
 
                                                                        
 
The scope of the variable can be limited to an individual execution     
 
group by adding it to a .sh file under a directory called "profiles"    
 
using the following path:                                               
 
                                                                        
 
    /var/mqsi/config/<broker>/<execution group>/profiles       
 
#####################################################################################################

MO71 SIT access
p1178475
mns@12345


hlxc0mc009/010
p3006204
INIYYANE@2014nov!6




hamptons 5th floor 1 bedroom available. - saturday 1 PM
Vanet property - today 5 30 



B8886963
0rtCegap4FQD


Req112914

07527237212
07527237212



######
keytool -delete -alias /home/mqadmin/cert/adriatic.b2b.marksandspencer.com.cer -keystore C2PSG01.jks -noprompt -storepass password
keytool -delete -alias /home/mqadmin/cert/baltimorecybertrustroot.cer -keystore C2PSG01.jks -noprompt -storepass password
keytool -delete -alias /home/mqadmin/cert/cybertrustpublicsureserversvca.cer -keystore C2PSG01.jks -noprompt -storepass password
keytool -delete -alias /home/mqadmin/cert/gte_cybertrust_global_root.cer -keystore C2PSG01.jks -noprompt -storepass password


--------

keytool -import -file /home/mqadmin/Certificate_Test/ADRIATIC_24_07_2014.cer -alias adriatic.b2b.marksandspencer.com -keystore C2PSG01.jks -storepass password -trustcacerts noprompt
keytool -import -file /home/mqadmin/Certificate_Test/VERISIGN_Intermediate_CA_Root.cer -alias VERISIGN_CA_1 -keystore C2PSG01.jks -storepass password -trustcacerts -noprompt
keytool -import -file /home/mqadmin/Certificate_Test/VERISIGN_Intermediate_CA_trust.cer -alias VERISIGN_CA_2 -keystore C2PSG01.jks -storepass password -trustcacerts -noprompt


KDB
runmqckm -cert -delete -label 'CN=adriatic.b2b.marksandspencer.com, O=Marks and Spencer PLC, C=GB' -db C2PSG01.kdb -pw password
runmqckm -cert -delete -label 'CN=Baltimore CyberTrust Root, OU=CyberTrust, O=Baltimore, C=IE' -db C2PSG01.kdb -pw password
runmqckm -cert -details -db C1PSG01.kdb -pw password
runmqckm -cert -list -db C2PSG01.kdb -pw password
runmqckm -cert -add -file ADRIATIC_24_07_2014.cer -db C2PSG01.kdb -pw password
runmqckm -cert -add -file VERISIGN_Intermediate_CA_Root.cer -db C2PSG01.kdb -pw password
runmqckm -cert -add -file VERISIGN_Intermediate_CA_trust.cer -db C2PSG01.kdb -pw password


MQarchitect and MQ topology
http://www.mqsystems.com/MQS-Solutions.html


Verify certificate chain
openssl verify -verbose -purpose sslserver -CAfile <file containing both root and intermediates> <file containing signed cert> 


openssl verify -verbose -purpose sslserver -CAfile 	


CREATE DATABASE APP AUTOMATIC STORAGE YES ON D:,D: DBPATH ON D: 
CREATE BUFFERPOOL "DATA_32K_BP" SIZE 10000 PAGESIZE 32768 NOT EXTENDED STORAGE;
CREATE REGULAR TABLESPACE DATA_32K_TS IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 32768 MANAGED BY DATABASE USING (FILE 'D:\DB2\NODE0000\SQL00001\EXC_DATA_01'12800) EXTENTSIZE 32 PREFETCHSIZE AUTOMATIC BUFFERPOOL DATA_32K_BP OVERHEAD 8.6 TRANSFERRATE 0.5 NO FILE SYSTEM CACHING DROPPED TABLE RECOVERY ON;

CREATE BUFFERPOOL "INDEX_4K_BP" SIZE 1000 PAGESIZE 4096
CREATE REGULAR TABLESPACE CC_INDEX_4K_TS IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 4096 MANAGED BY DATABASE USING (FILE 'D:\DB2\NODE0000\SQL00001\CC_INDEX_01'12800) EXTENTSIZE 32 PREFETCHSIZE AUTOMATIC BUFFERPOOL INDEX_4K_BP OVERHEAD 8.6 TRANSFERRATE 0.1 NO FILE SYSTEM CACHING DROPPED TABLE RECOVERY ON

CREATE TABLE "MS"."GENERIC" (
	"COL1" VARCHAR(48) NOT NULL,
	"COL2" VARCHAR(48),
	"COL3" VARCHAR(48),
	"COL4" VARCHAR(100),
	"COL5" VARCHAR (100),
	"SYS_INSERT_TSTMP" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP)
	IN "DATA_32K_BP" INDEX IN "CC_INDEX_4K_TS" ; 
	
	
	
	########### functions ready made available
	https://github.com/mqsiuser/Generic-ESQL-Utilities/wiki
	
	
	
	############## SSL certification revocation error in MQ ########  Need to set this in the qm.ini
	SSL:
   OCSPAuthentication=OPTIONAL

   
   
   ########### awk filter based on a column
   awk -F'|' 'toupper($1) == "ORL"' OFS='|' ox.csv | awk -F "|" {'print $6",","$14+$15'} >oe.out
   
   ### the toupper$1 == ORL will only ouptput if first column is ORL (if == used it is a check if = is used it is assignment.
   
   
   
   ################ data documentation
   D3JS
   
   huxd0151.unix####
   p3011843
   qwerty2014
   
   
   ##### DVLA
   GONSA806236S99NX
   388734252
   
   
   
   
   queue monitoring tools.
   http://www.netflexity.com/
   
   
INIYYANE@2014nov!6


Authorisation code - for AA driving lessons . 
004431



GONSA806236S99NX
31419528 



editrack_usr
WMQFTEFileIndex=1
destination_path=/uat/
WMQFTETransferMode=text
destination_support_group=XB60_MQFTE_SUPPORT
source_support_group=MS_SUPPORT
WMQFTEDestinationAgent=ETRK
jobname=MFT_SAP_ARTICLE_DISTR_EDITRACK
WMQFTEFileLastModified=
WMQFTEFileSize=
WMQFTESourceAgent=SAP
severity=2
WMQFTETransferId=414d512053334d53424b30312020202053ff0ea6208c3e06
WMQFTEMqmdUser=mqm
WMQFTEFileName=PdtAttr_414d512053334d53424b30312020202053ff0ea6208c3e06_2014090512096426.xml
WMQFTEFileName=PdtAttr_414d512053334d53424b30312020202053ff0ea6208c3e06_2014090512096426.xml




############################## testing JUnit


http://www.massapi.com/class/mu/MuleEndpointURI.html

Java tips
ctrl+shift+O will give you the required import packages to import (if some object or type is unresolvable - that is an easier way to do)


SAP information

SAP	
fcccs.unix.marksandspencerdev.com	
sap client number	100
sap system number	13
username	B8886963
passwrod	steven123
	
fcccs.unix.marksandspencerdev.com	
sap client number	110
sap system number	13
username	B8886963
passwrod	
	
	
------------------------
password - Change@123
--------------------------
	
1	
SID:FBC	
Client no: 460	
User: B8886963 /B6493595	
Password: (Shared in yesterday's mail)	
RFC: FBCCLNT460	
Type: ABAP Connection	
2	

SID:FCC	
Client no: 110	
User: B8886963/B6493595	
Password: (Shared in yesterday's mail)	
RFC: FCCCLNT110	
Type: ABAP Connection	
	
3	
SID:FXC	
Client no: 170	
User: B8886963?/B6493595	
Password:(Shared in yesterday's mail)	
RFC: FXCCLNT170	
Type: ABAP Connection	
4	
SID:FSC	
Client no: 480	
User: B8886963?/B6493595	
Password:(Shared in yesterday's mail)	
RFC: FSCCLNT480	
Type: ABAP Connection	
	
	
	rFC name
ZGMM_LANDED_COST_CALC
	
	

	
	
	
	
	user: b8130371
[22/09/2014 10:51:01] Francesco Stradiotti: pword: london
[22/09/2014 10:51:37] steven Gonsalvez: password strenght : NIL



SAP codes

MM03 - Display Material & Logistics - Material Master
KK87 - Actual settmt: prodn cost collector CO - Overhead Cost Orders
S_ALR_87011966 - Asset Balances Cross Application - Cross-Application Components
CKMPRPN - Price Maintenance CO - Price Change
CKMVFM - Value Flow Monitor CO - Actual Costing/Material Ledger
KSBL - cost centers: Planning overview CO - Overhead Cost Controlling
PK01 - Create Control Cycle PP - KANBAN
KALO - Export Reconcil. Ledger (Rollup) CO - Cost Element Accounting
KCH3 - Display profit center hierarchy Enterprice Controlling - Profit Center Accounting
OC41 - Maintain Exchange Rates Enterprice Controlling - Consolidation
KKAV - WIP Calculation for cost Object Hier CO - Cost Object Controlling
OKN0 - Control of CO-PC Information System CO - Product Cost Controlling Information System
KES3 - Maintain Characteristics Hierarchy CO - Profitability Analysis
OKKI - costing Types for Product costing CO - Product Cost Planning
OP13 - Maintain Screen Sequence PP - Routing
S_ALR_87013648 - Range: Actual/Budget/Commitments Cross Application - Cross-Application Components
KP07 - Display Planning CElem/Act. Input CO - Cost Center Accounting
RM02 - RM: Position Groups IS - Risk Analysis
S_ALR_87013623 - cost Centers: Quarterly Comparison Cross Application - Cross-Application Components
KZM2 - Maintain quantity-based overhead CO - Overhead Cost Orders
S_P99_41000062 - Materials List: Prices and Inventory CO - Product Cost Controlling Information System
S_AHR_61016401 - General Trip Data/Trip Totals Cross Application - Cross-Application Components
RPA0 - Info.Sys. Rec.Ledger: Presettings CO - Overhead Cost Controlling
ART0 - FIAA - Information System FI - Information System
CK66 - Mark Run for Release CO - Product Cost Planning


Read more: http://www.tcodesearch.com/tcodes/search?q=view+landed+cost#ixzz3Fk1dTz47




Bailiff Contact details 
08448243884


15429434

Jengoid2012Genoajalfrezi27


################################### addresses #########################

XI52 stockley Park

VIP address 63.130.82.141 
External Address(on XI52) range - 10.130.123.66/29
External natted address (source address that is seen externallY) - 63.130.82.143
Internal VIP address - 10.130.150.44
Internal source address - 10.130.123.66


################## 
XI52 Swindon

VIP address 63.130.82.141
External Address(on XI52) range - 10.98.123.66/29
External natted address (source address that is seen externallY) - 63.130.82.144
Internal VIP address - 10.130.150.44
Internal source address - 10.98.123.66


############################## 
XB60 stockley


VIP address 
External address range
External natted address - 

########################
XI52 A

Internal VIP address : 10.130.148.24
serial number 6805041
Internal Subnet address - 10.130.126.10/29 (source Ip for internal)


################################

XI52 B


Source address external facing (external natted address) : 63.130.82.140


M&S-UK-STP2-XI52-NonProd-A-Ext-B2B-LB-VIP	63.130.82.139	adriatic.b2b.marksandspencer.com
M&S-UK-STP2-XI52-NonProd-A-Int-B2B-LB-VIP	10.130.148.24	ecomgw1.marksandspencercate.com
M&S-UK-STP2-XI52-NonProd-B-Ext-B2B-LB-VIP	63.130.82.140	bering.b2b.marksandspencer.com
M&S-UK-STP2-XI52-NonProd-B-Int-B2B-LB-VIP	10.130.148.25	ecomgw2.marksandspencercate.com
M&S-UK-STP2-XI52-Prod-Ext-B2B-LB-VIP		63.130.82.141	persian.b2b.marksandspencer.com
M&S-UK-STP2-XI52-Prod-Int-B2B-LB-VIP-Internet	10.130.150.44	ecomgw.marksandspencer.com




just have created account on hlxd0mc005
username: sgonsalvez
password: uF0kp7pp
[19/09/2014 11:50:51] Venki Peru: let me know if you have issues
[19/09/2014 11:59:22] steven Gonsalvez: and the cloud ST box access ?
[19/09/2014 11:59:32] Venki Peru: 1 sec
[19/09/2014 12:00:43] Venki Peru: dev.sea.stockengine.env.devops.mnscorp.net:
[19/09/2014 12:00:47] Venki Peru: vsundararaj
[19/09/2014 12:00:53] Venki Peru: duV34qwe
[19/09/2014 12:01:06] Venki Peru: sudo -u mqm -i
[19/09/2014 12:01:13] Venki Peru: only in alicudi




Temrporary deployment VM

54.72.190.81

use the LDAP credentials. 



 Enterprise Repository Managers - Nexus
 
 
 ######### db2 url connection
 
jdbc:db2://10.144.35.22:50000/T2MSDB01:user=tmsinst1;password=7RhIt9pz;
 
 
 ST
 	p1303924
	
	sachin2014
	

Open a Range of ports Linux firewalls
iptables -A INPUT -p tcp --match multiport --dports 7000:9999 -j ACCEPT


Best alternative for drawing visio diagrams
yed



username: sgonsalvez
password: KernelPanic

Nexus: http://10.128.138.93:8081/nexus
Jenkins: http://10.128.138.138/

jenkins stockley - http://10.128.138.77:8081/



\\10.128.11.10\mcfp_share\SCOM

p1178475
london@12345


inc2624714


credentials
Dev, Senthilraj	isaac.prashanth
	11:00
	London3
	
	
	MMC url
	http://hlxd0mw02.unix.marksandspencerdev.com:8585
	
authenticating MMC to esb level - Not Https . 


My VM MMC URLS
http://192.168.56.30:8585/mmc




Flume

bin/flume-ng agent --conf conf --conf-file ./conf/example.conf --name a1 -Dflume.root.logger=INFO,console



configure terminla;web-mgmt;admin-state enabled;local-address 0 9090;exit

CREATE TABLE "MS"."TEST_LARGE_INSERT"  (
		  "MSG_ID" CHAR(48),
		  "FIELD_1" VARCHAR(20),
		  "FIELD_2" VARCHAR(20),
		  "FIELD_3" VARCHAR(20),
		  "SYS_INSERT_TS" TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP )   
		  IN "AUD_DATA_8K_TS" INDEX IN "AUD_DATA_8K_TS" ; 
		  


#####################GIT commands####################		  
		  
GIT fetch and reset

git fetch --all
git reset --hard origin/master


to commit single file
git add .
git commit
git push



############################## similar to wget for windows ###############################

Save the following text as wget.js and simply call

cscript /nologo wget.js http://example.com
This is the code:

var WinHttpReq = new ActiveXObject("WinHttp.WinHttpRequest.5.1");
WinHttpReq.Open("GET", WScript.Arguments(0), /*async=*/false);
WinHttpReq.Send();
WScript.Echo(WinHttpReq.ResponseText);

/* To save a binary file use this code instead of previous line
BinStream = new ActiveXObject("ADODB.Stream");
BinStream.Type = 1;
BinStream.Open();
BinStream.Write(WinHttpReq.ResponseBody);
BinStream.SaveToFile("out.bin");
*/



#########################################################################


 <profiles>
		<!-- profile for each of the network created, the properties here are required to be overwritten from in the POM, but not needed for the local system build -->
        <profile>
            <id>salina</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- C.I. properties  -->
                <ciserver.http.host>192.168.56.20</ciserver.http.host>
                <mmc.url>http://192.168.56.30:8585/mmc-3.5.2/api</mmc.url>
                <mmc.clusterName>dev</mmc.clusterName>
                <mmc.username>admin</mmc.username>
                <mmc.password>admin</mmc.password>
                <mmc.deploy.domain>dev</mmc.deploy.domain>
				<!-- needed for the local laptop as the deploy will not happen to any server , and the SOAP UI test is not executed-->
				<skip.deploy.ciserver>false</skip.deploy.ciserver>
				<skip.soapui.test>false</skip.soapui.test>
            </properties>
        </profile> 
    </profiles>
	
	
#########################################################################

AWS - manual deploy

mvn mule-mmc-rest:deploy -DappDirectory=src/main/app -DmuleApiUrl=http://54.154.89.92:8585/mmc-3.5.2-HF1/api -DclusterName=dev -Dusername=admin -Dpassword=admin -Ddomain=dev -DfinalName=landed-cost-price-service-0.1-SNAPSHOT -Dname=landed-cost-price-service -Dversion=0.1-SNAPSHOT -DappName=landed-cost-price-service-0.1-SNAPSHOT -DisStandaloneCLI=true -DfileNamePattern=regex:^.*mule-config.xml$ -DpropToReplace=mns.env.deploytime

Dev corporate manual deploy

mvn mule-mmc-rest:deploy -DappDirectory=src/main/app -DmuleApiUrl=http://hlxd0mw02.unix.marksandspencerdev.com:8585/mmc/api -DclusterName=dev -Dusername=admin -Dpassword=admindev -Ddomain=dev -DfinalName=landed-cost-price-service-0.1-SNAPSHOT -Dname=landed-cost-price-service -Dversion=0.1-SNAPSHOT -DappName=landed-cost-price-service-0.1-SNAPSHOT -DisStandaloneCLI=true -DfileNamePattern=regex:^.*mule-config.xml$ -DpropToReplace=mns.env.deploytime

mvn mule-mmc-rest:deploy -DappDirectory=src/main/app -DmuleApiUrl=http://hlxd0mw02.unix.marksandspencerdev.com:8585/mmc/api -DclusterName=dev -Dusername=admin -Dpassword=admindev -Ddomain=dev -DfinalName=common-components-1.1-SNAPSHOT -Dname=common-components -Dversion=1.1-SNAPSHOT -DappName=common-components-1.1-SNAPSHOT -DisStandaloneCLI=true -DfileNamePattern=regex:^.*mule-config.xml$ -DpropToReplace=mns.env.deploytime


https://54.154.89.92:18000/common/console/api/audit/1


Query parameters



Proper API landed Cost Price (fcc)
https://hlxd0mw01.unix.marksandspencerdev.com:18000/landed-cost-price-service/api/frontend/1/landed-cost-price?WayRefNumber=181232&StrokeNumber=8039&ColourCode=V0&BuyingRatioCode=760&SeasonType=SU15&Year=2015&DeptNumber=T25&SeriesNumber=M0135&PlannedFOBCostPrice=30.00&EUFabricCost=7.00&Currency=GBP&CountryOfOriginNumber=GB&ReprocessIndicator=H&DutyPreferenceIndicator=Y&TransitMethod=Z001&PriceIndicatorAtSize=0&DutyRate=4.40&ProductTypeAttributeCode=1401


Invokation for FCI
https://hlxd0mw01.unix.marksandspencerdev.com:18000/landed-cost-price-service/api/frontend/1/landed-cost-price?WayRefNumber=96119933456&StrokeNumber=8039&ColourCode=V0&BuyingRatioCode=760&SeasonType=SP15&Year=2015&DeptNumber=T25&SeriesNumber=M08928&PlannedFOBCostPrice=99.00&EUFabricCost=3.00&Currency=GBP&CountryOfOriginNumber=GB&ReprocessIndicator=H&DutyPreferenceIndicator=Y&TransitMethod=Z001&PriceIndicatorAtSize=X&DutyRate=4.10&ProductTypeAttributeCode=0102&FactoryNumber=1000002906&ItemLength=1&ItemWidth=2&ItemHeight=2&ItemVolumeUnit=M3&PrimarySizeIndex=S&SecondarySizeIndex=90&PlannedFOBCostPriceAtSize=12.00

AUDIT API local
http://localhost:18000/common/api/audit/1/entries?InterfaceId=123&MessageId=444


########## AWS
http://ec2-54-154-89-92.eu-west-1.compute.amazonaws.com:8585/mmc-3.5.2-HF1/index.jsp

54.154.89.92



https://54.154.89.92:18000/landed-cost-price-service/api/frontend/1/landed-cost-price-service

https://192.168.56.20:18000/landed-cost-price-service/console/api/frontend/1/
https://192.168.56.20:18000/landed-cost-price-service/api/frontend/1/landed-cost-price





<!-- 
Author: Steven Gonsalvez
Revision: 1.0
Date: 07-01-2015
Revision History
0.0.1	07.01.15	Steven G	Initial Version
-->


SAP landed Cost price screens

se37  - setup test data for test. 


se16n ---> table - ZGMM_RPCALLOUT


#jenkinsjenkins Server
http://10.128.138.77:8081/


Presentation
https://www.powtoon.com/show/dceGU9WCI9B/steve_mule_presentation/



Production wrapper.conf passwords

wrapper.java.additional.15=-Dvault.key.esb=qAz3s1wt2g3rk5N5 
wrapper.java.additional.16=-Dvault.key.common=mulesoft5marksns 
wrapper.java.additional.17=-Dvault.key.lcps=mulesoft4marksns


GIT configuration notes. 

To avoid being prompted for password everytime use the .gitconfig file as below 

#################################################################
[user]
	name = sgonsalvez
	email = steven.gonsalvez@marksandspencer.com
[core]
	excludesfile = C:\\Users\\b8886963\\Documents\\gitignore_global.txt
[push]
	default = matching
[http]
    proxy = http://<pid>:<password>@proxybc.mnscorp.net:8080
[https]
    proxy = https://<pid>:<password>@proxybc.mnscorp.net:8080
[credential]
    helper = wincred

####################################################################




################# shared mailbox 
https://outlook.office365.com/owa/SMO-Architecture@mnscorp.onmicrosoft.com/#path=/mail



######### Mule soft repositories in Nexus




######## webservice URL for the landed cost price
https://hlxd0mw01.unix.marksandspencerdev.com:18000/landed-cost-price-service/ws/frontend/1?wsdl



####### stock service query 
https://api-test.marksandspencer.com/v1/stocklocator-api/service?requestId=2702&timestamp=20141031140301&systemName=Sterling&article=000000021244825001&article=000000021244825002&site=1234&site=6789&site=0097&site=0136&metrics=STOCK_ON_HAND&view=CA_STOCK_ON_HAND_2



######## MQFTE usr headers ########
WMQFTEFileIndex=0
WMQFTETransferMode=binary
destination_support_group=NTSS_Support_Group
source_support_group=NTSS_Support_Group
destination_file=Fullrefresh-data-S2014S04S01S1224S26.XML
WMQFTEDestinationAgent=C03_MSHSRMNSUKC1228_C1MQFT02
jobname=mns.clcas.data.full
destination_path=/home/MandS/CATE/Incoming/MandS/StoreReference/
WMQFTEFileLastModified=1396351577513
WMQFTEFileSize=4433716
WMQFTESourceAgent=C03_MSHSRMNSUKC1228_C1MQFT02
severity=2
WMQFTETransferId=414d512043314d514654303220202020df0f275322fc8b47
WMQFTEMqmdUser=Y0134079
WMQFTEFileName=//MSHSRMSAPPC0081/CLCAS/CLCASXMLCopy/Fullrefresh-data.XML


########### My datapower XI52 password - W530
admin/password
https://192.168.187.10:9090/


######## gerald running performance test commands #########
  cd perftests_4/
  951  ll
  952  cp lcps_front_4_2.jmx lcps_front_4_4.jmx
  953  vi lcps_front_4_4.jmx
  954  more ../perftests_3/lcps_front_3_9.jmx
  955  ll
  956  ../std-perf-test-short.sh lcps_front_4_4
  957  ll
  958  ln -s lcps_front_4_4.jmx lcps_front_4_5.jmx
  959  ../std-perf-test-short.sh lcps_front_4_5
  960  cp /tmp/lcps_front_4_6.jmx ./
  961  ll
  962  diff lcps_front_4_6.jmx lcps_front_4_4.jmx
  963  vi lcps_front_4_6.jmx
  964  ll
  965  ../std-perf-test-short.sh lcps_front_4_6
  966  cp lcps_front_4_6.jmx lcps_front_4_7.jmx
  967  vi lcps_front_4_7.jmx
  968  ../std-perf-test-short.sh lcps_front_4_7
  969  ll
  970  ln -c lcps_front_4_6.jmx lcps_front_4_8.jmx
  971  ln -s lcps_front_4_6.jmx lcps_front_4_8.jmx
  972  ../std-perf-test-short.sh lcps_front_4_8
  973  ll
  974  rm lcps_front_4_8_a.jtl
  975  ll
  976  ../std-perf-test-short.sh lcps_front_4_8
  977  rm lcps_front_4_8_a.jtl
  978  ../std-perf-test-short.sh lcps_front_4_8
  979  pwd
  980  ll
  981  rm lcps_front_4_8_a.jtl
  982  ../std-perf-test.sh lcps_front_4_8
  983  ll
  984  rm lcps_front_4_8_a.jtl
  985  ../std-perf-test.sh lcps_front_4_8
  986  ll
  987  rm lcps_front_4_8_a.jtl
  988  ../std-perf-test-once.sh lcps_front_4_8
  989  rm lcps_front_4_8_a.jtl
  990  ../std-perf-test-once.sh lcps_front_4_8

  ######################################################


  
  
########bitlocker key for HP elitebook
  013519-305316-139557-427746-147543-600534-166760-693099
  
  
  p3006204
  hostname : MSHUXMNSUKD0056.unix.marksandspencerdev.com
  port : 12999
  qmgr name : SAPTEST
  channel : SAP.SVRCONN
  
  queue: SAP.INBOUND , SAP.OUTBOUND
  
 hostname : MSHUXMNSUKD0046.unix.marksandspencerdev.com
 port : 11901
 qmgr name : TEST
 channel name : SAP.ADAPTER.SVRCONN
 
 reference number for hp laptop - 
 
ganglia
http://hlxp0m0008.unix.marksandspencer.com/ganglia/?c=default




super shared location for Marks and Spencer
\\Gbhitopsser0016\icos\Stew\QAS_2014_Q4\xi52


My local Elastic Search Kibana
My local Elastic Search Kibana
http://192.168.56.40:9200 - sense console - http://192.168.56.40:9200/_plugin/marvel/sense/index.html
http://192.168.56.40:5601 - Kibana console

http://192.168.56.40:8080

Marvel
http://192.168.56.40:9200/_plugin/marvel/sense/index.html


'################### Python command for jsonlint
 python -m json.tool
 
 https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.4.3.zip
 
 
################## no hup and running process in background

===========
amit@server $ nohup amit.sh &
[1] 21491
amit@server $ Sending output to nohup.out
===================

Here 1 is the job id
so to the command to bring it from back ground is

fg %1
here 1 is the job id

D:\GIT\mule-etc\domains\dev



###############permanent symlinks in path
ou need to add it to your ~/.profile file.

export PATH=$PATH:/path/to/dir
Depending on what you're doing, you also may want to symlink to binaries:

cd /usr/bin
sudo ln -s /path/to/binary binary-name

ln -s 


###########AML source addresses details
107.23.127.59
107.23.127.72
54.246.130.105
54.246.130.106
54.246.130.100
54.246.130.102

XI52 ####
63.130.82.139
63.130.82.140




############Altova XML spy details
Duvvuri, Pavan Sastry	dv01711
mnsukdev\P3009770
mnstcs2015


########### toshiba laptop admin rights
p9116487
hallebopp100	


########## sainsbury repo
https://github.com/JSainsburyPLC
https://github.com/JSainsburyPLC


################### server information in Ip addressee - specific to M&S
The addresses 10.129.* on all the unix servers are only backup connection to the servers ,external connectivity to those addresses wont work. The service does not listen on all the adapters


#####skip tests maven
-Dmaven.test.skip=true
<RETURNCODE></RETURNCODE>


<set-variable variableName="VarNumber" value="#[(Math.random().intValue())*1000]" doc:name="Variable"/>
Math.round((Math.random())*100000000)

Math.abs(10.723)



###### Article API - DEV
https://hlxd0mw01.unix.marksandspencerdev.com:18000/article-service/api/frontend/1/article/reserve-number?Quantity=10&ClintId=PLM
https://hlxd0mw01.unix.marksandspencerdev.com:18000/article-service/api/frontend/1/article/reserve-number?Quantity=8&ClientId=TEST


#### apigee test
https://api-test.marksandspencer.com/article/reserve-number?Quantity=64&ClientId=TEST

####iptables block port
iptables -A INPUT -p tcp --destination-port {PORT-NUMBER-HERE} -j DROP

iptables -A INPUT -p tcp --destination-port 29000 -j DROP


#### Delete Iptables by line numbers
##list line numbers first
iptables -vnL --line-numbers
####Then delete the line you want:

iptables -D INPUT 22


################deleting large number of files in a folder
for f in *.pdf; do rm "$f"; done



############ running the maven command in jenkins
mvn -Dsoapui.endpoint.hostname=10.128.172.94  -Dmmc.password=admindev -Dmmc.deploy.domain=dev -Dmmc.clusterName=dev -Dmaven.test.skip=true -Dskip.soapui.test=false clean deploy