 git config --global user.name Your Name
    git config --global user.email you@example.com





#####Store username and password
git config credential.helper store

## to remove the credential store

git config --unset credential.helper

### To store the passwords in .git-credentials in your %HOME% directory as opposed to the project directory: use the --global flag
git config --global credential.helper store


################## For cygwin GIT use the below set of commands ############################
##################################################
#######Remember passwords for 15 minutes (default):

git config --global credential.helper cache
######Remember passwords for 10 hours:

git config --global credential.helper 'cache --timeout=36000'
########Store passwords (didn't try this):

git config --global credential.helper store
#########Reset:

git config --unset --global credential.helper

##########################################################
#################################Git ignore configuration

https://github.com/github/gitignore 


####################basic git commands
############## shows all changes that are not staged	
git diff 

########### to see changes that are staged from the last commit
git diff --staged 

##### to by [pass git add (automatically stage it ) - the -a parameter does an automatic implicit stage
git commit -a -m "comment)


##############if you want git not to track a paticular file in the working directory - this is equivalent of putting stuff in the gitignore
git rm --cached log/\*.log   ### for a whole folder of log files
git rm --cached <file> 

################## to rename a file
git mv README.md README '#### this is equivalent to the below

######
$mv README.md README
$ git rm README.md
$ git add README


###### commit history
git log
git log -p
git log -p -2
git log --stat ### shows you more detail on stats of commits
git log --format ##########(you can format the log to own way)
git log --since= 2 weeks
git log --until=<date>
git log -Sfunction_name (to show changes to a specific string - function etc)



####adding a remote repository
git remote add [shortname] [url]

eg: git remote add bb http://github.com/blach
#####
so we could do git fetch bb

##########One of the more helpful options is -p, which shows the difference introduced in each commit. You can also use -2, which limits the output to only the last two entries:


############### shows which branch we are currnetly on
 git log --oneline --decorate
 
 
 ################checkout from branch 
 git checkout testing
 
#'##### switching branches changes the files in the working directory.


###########display log information
git log --oneline --decorate --graph --all



############ create a branch
git branch <name>

###swithc to branch
git checkout <branch name>

##### merging changes from another branch to current branch
## no commit - will just stage the files and fastforward will not show the history of the branches
git merge origin/master --no-commit --no-ff



## reset to branch or commit point
git reset --hard <tag/branch/commit id>

###to push the reset change to remote
git push <reponame> -f
 
 
 ###checkout a pull request that has not merged
 git fetch origin pull/ID/head:BRANCHNAME
 git checkout BRANCHNAME
